(function() {var implementors = {};
implementors["full_node"] = [{"text":"impl Freeze for CliOptions","synthetic":true,"types":[]},{"text":"impl Freeze for CliChain","synthetic":true,"types":[]},{"text":"impl Freeze for ColorChoice","synthetic":true,"types":[]},{"text":"impl Freeze for ColorChoiceParseError","synthetic":true,"types":[]},{"text":"impl Freeze for Output","synthetic":true,"types":[]},{"text":"impl Freeze for OutputParseError","synthetic":true,"types":[]},{"text":"impl Freeze for NodeKey","synthetic":true,"types":[]},{"text":"impl Freeze for NodeKeyParseError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for WithBuffers&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for Config","synthetic":true,"types":[]},{"text":"impl Freeze for ChainConfig","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl !Freeze for NetworkService","synthetic":true,"types":[]},{"text":"impl Freeze for Guarded","synthetic":true,"types":[]},{"text":"impl Freeze for InitError","synthetic":true,"types":[]},{"text":"impl Freeze for Config","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl Freeze for BlocksRequestId","synthetic":true,"types":[]},{"text":"impl Freeze for SyncState","synthetic":true,"types":[]},{"text":"impl !Freeze for SyncService","synthetic":true,"types":[]},{"text":"impl Freeze for ToBackground","synthetic":true,"types":[]},{"text":"impl Freeze for FromBackground","synthetic":true,"types":[]},{"text":"impl Freeze for ToDatabase","synthetic":true,"types":[]}];
implementors["smoldot"] = [{"text":"impl&lt;'a, TLocAuth&gt; Freeze for Config&lt;'a, TLocAuth&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TLocAuth: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for SlotClaim","synthetic":true,"types":[]},{"text":"impl&lt;'a, TLocAuth&gt; Freeze for Config&lt;'a, TLocAuth&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TLocAuth: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, TLocAuth&gt; Freeze for ConfigConsensus&lt;'a, TLocAuth&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TLocAuth: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for Builder","synthetic":true,"types":[]},{"text":"impl Freeze for BuilderAuthoring","synthetic":true,"types":[]},{"text":"impl Freeze for WaitSlot","synthetic":true,"types":[]},{"text":"impl Freeze for AuthoringStart","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for AuthoringStartConfig&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for ApplyExtrinsic","synthetic":true,"types":[]},{"text":"impl Freeze for StorageGet","synthetic":true,"types":[]},{"text":"impl Freeze for PrefixKeys","synthetic":true,"types":[]},{"text":"impl Freeze for NextKey","synthetic":true,"types":[]},{"text":"impl Freeze for Seal","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Config&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for ConfigPreRuntime&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Success","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl Freeze for BlockBuild","synthetic":true,"types":[]},{"text":"impl Freeze for InherentExtrinsics","synthetic":true,"types":[]},{"text":"impl Freeze for InherentData","synthetic":true,"types":[]},{"text":"impl Freeze for InherentDataConsensus","synthetic":true,"types":[]},{"text":"impl Freeze for ApplyExtrinsic","synthetic":true,"types":[]},{"text":"impl Freeze for StorageGet","synthetic":true,"types":[]},{"text":"impl Freeze for PrefixKeys","synthetic":true,"types":[]},{"text":"impl Freeze for NextKey","synthetic":true,"types":[]},{"text":"impl Freeze for TransactionValidityError","synthetic":true,"types":[]},{"text":"impl Freeze for InvalidTransaction","synthetic":true,"types":[]},{"text":"impl Freeze for UnknownTransaction","synthetic":true,"types":[]},{"text":"impl Freeze for DispatchError","synthetic":true,"types":[]},{"text":"impl&lt;'c, T&gt; Freeze for JustificationApply&lt;'c, T&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for JustificationVerifyError","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for SetFinalizedBlockIter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for SetFinalizedError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for BodyVerifyStep1&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for BodyVerifyRuntimeRequired&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for BodyVerifyStep2&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for StorageGet&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for StoragePrefixKeys&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for StorageNextKey&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for RuntimeCompilation&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'c, T&gt; Freeze for HeaderVerifySuccess&lt;'c, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'c, T&gt; Freeze for HeaderInsert&lt;'c, T&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for HeaderVerifyError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for BodyInsert&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Config","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for NonFinalizedTree&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for BlockAccess&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for AuraGenesisConfiguration","synthetic":true,"types":[]},{"text":"impl Freeze for FromGenesisStorageError","synthetic":true,"types":[]},{"text":"impl Freeze for FromVmPrototypeError","synthetic":true,"types":[]},{"text":"impl Freeze for BabeGenesisConfiguration","synthetic":true,"types":[]},{"text":"impl Freeze for FromGenesisStorageError","synthetic":true,"types":[]},{"text":"impl Freeze for FromVmPrototypeError","synthetic":true,"types":[]},{"text":"impl Freeze for BabeEpochToFetch","synthetic":true,"types":[]},{"text":"impl Freeze for Config","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl Freeze for Query","synthetic":true,"types":[]},{"text":"impl Freeze for StorageGet","synthetic":true,"types":[]},{"text":"impl Freeze for NextKey","synthetic":true,"types":[]},{"text":"impl Freeze for ChainInformation","synthetic":true,"types":[]},{"text":"impl Freeze for ChainInformationConsensus","synthetic":true,"types":[]},{"text":"impl Freeze for BabeEpochInformation","synthetic":true,"types":[]},{"text":"impl Freeze for ChainInformationFinality","synthetic":true,"types":[]},{"text":"impl Freeze for FromGenesisStorageError","synthetic":true,"types":[]},{"text":"impl Freeze for FinalizedScheduledChange","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for ChainInformationRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for ChainInformationConsensusRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for BabeEpochInformationRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for ChainInformationFinalityRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for ForkTree&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for PruneAncestorsIter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for PrunedNode&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for NodeIndex","synthetic":true,"types":[]},{"text":"impl Freeze for Config","synthetic":true,"types":[]},{"text":"impl Freeze for RequestId","synthetic":true,"types":[]},{"text":"impl Freeze for SourceId","synthetic":true,"types":[]},{"text":"impl&lt;TRq, TSrc, TBl&gt; Freeze for OptimisticSync&lt;TRq, TSrc, TBl&gt;","synthetic":true,"types":[]},{"text":"impl&lt;TBl&gt; Freeze for Block&lt;TBl&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TBl: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;TBl&gt; Freeze for RequestSuccessBlock&lt;TBl&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TBl: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;TRq, TSrc, TBl&gt; Freeze for ProcessOne&lt;TRq, TSrc, TBl&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TBl: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;TRq, TSrc, TBl&gt; Freeze for StorageGet&lt;TRq, TSrc, TBl&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TBl: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;TRq, TSrc, TBl&gt; Freeze for StoragePrefixKeys&lt;TRq, TSrc, TBl&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TBl: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;TRq, TSrc, TBl&gt; Freeze for StorageNextKey&lt;TRq, TSrc, TBl&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TBl: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, TRq, TSrc, TBl&gt; Freeze for RequestAction&lt;'a, TRq, TSrc, TBl&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TRq: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, TRq, TSrc, TBl&gt; Freeze for Start&lt;'a, TRq, TSrc, TBl&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, TSrc&gt; Freeze for FinishRequestOutcome&lt;'a, TSrc&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for RequestFail","synthetic":true,"types":[]},{"text":"impl&lt;'a, TRq, TBl&gt; Freeze for RequestsDrain&lt;'a, TRq, TBl&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for ResetCause","synthetic":true,"types":[]},{"text":"impl Freeze for LightSyncState","synthetic":true,"types":[]},{"text":"impl Freeze for ChainSpec","synthetic":true,"types":[]},{"text":"impl Freeze for ParseError","synthetic":true,"types":[]},{"text":"impl Freeze for CorruptedError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Config&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for ConfigTy&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for DatabaseOpen","synthetic":true,"types":[]},{"text":"impl Freeze for DatabaseEmpty","synthetic":true,"types":[]},{"text":"impl Freeze for SledFullDatabase","synthetic":true,"types":[]},{"text":"impl Freeze for VarLenBytes","synthetic":true,"types":[]},{"text":"impl Freeze for AccessError","synthetic":true,"types":[]},{"text":"impl Freeze for SledError","synthetic":true,"types":[]},{"text":"impl Freeze for InsertError","synthetic":true,"types":[]},{"text":"impl Freeze for SetFinalizedError","synthetic":true,"types":[]},{"text":"impl Freeze for FinalizedAccessError","synthetic":true,"types":[]},{"text":"impl Freeze for CorruptedError","synthetic":true,"types":[]},{"text":"impl Freeze for HostVmPrototype","synthetic":true,"types":[]},{"text":"impl Freeze for HostVm","synthetic":true,"types":[]},{"text":"impl Freeze for ReadyToRun","synthetic":true,"types":[]},{"text":"impl Freeze for Finished","synthetic":true,"types":[]},{"text":"impl Freeze for ExternalStorageGet","synthetic":true,"types":[]},{"text":"impl Freeze for ExternalStorageSet","synthetic":true,"types":[]},{"text":"impl Freeze for ExternalStorageAppend","synthetic":true,"types":[]},{"text":"impl Freeze for ExternalStorageClearPrefix","synthetic":true,"types":[]},{"text":"impl Freeze for ExternalStorageRoot","synthetic":true,"types":[]},{"text":"impl Freeze for ExternalStorageChangesRoot","synthetic":true,"types":[]},{"text":"impl Freeze for ExternalStorageNextKey","synthetic":true,"types":[]},{"text":"impl Freeze for CallRuntimeVersion","synthetic":true,"types":[]},{"text":"impl Freeze for ExternalOffchainStorageSet","synthetic":true,"types":[]},{"text":"impl Freeze for LogEmit","synthetic":true,"types":[]},{"text":"impl Freeze for StartStorageTransaction","synthetic":true,"types":[]},{"text":"impl Freeze for EndStorageTransaction","synthetic":true,"types":[]},{"text":"impl Freeze for NewErr","synthetic":true,"types":[]},{"text":"impl Freeze for StartErr","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl&lt;'a, TParams&gt; Freeze for Config&lt;'a, TParams&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TParams: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for Success","synthetic":true,"types":[]},{"text":"impl Freeze for SuccessVirtualMachine","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl Freeze for RuntimeHostVm","synthetic":true,"types":[]},{"text":"impl Freeze for StorageGet","synthetic":true,"types":[]},{"text":"impl Freeze for NextKey","synthetic":true,"types":[]},{"text":"impl&lt;'a, TParams&gt; Freeze for Config&lt;'a, TParams&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TParams: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for Success","synthetic":true,"types":[]},{"text":"impl Freeze for SuccessVirtualMachine","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl Freeze for RuntimeHostVm","synthetic":true,"types":[]},{"text":"impl Freeze for StorageGet","synthetic":true,"types":[]},{"text":"impl Freeze for PrefixKeys","synthetic":true,"types":[]},{"text":"impl Freeze for NextKey","synthetic":true,"types":[]},{"text":"impl Freeze for VirtualMachinePrototype","synthetic":true,"types":[]},{"text":"impl Freeze for VirtualMachine","synthetic":true,"types":[]},{"text":"impl Freeze for ExecHint","synthetic":true,"types":[]},{"text":"impl Freeze for Signature","synthetic":true,"types":[]},{"text":"impl Freeze for WasmValue","synthetic":true,"types":[]},{"text":"impl Freeze for ValueType","synthetic":true,"types":[]},{"text":"impl Freeze for UnsupportedTypeError","synthetic":true,"types":[]},{"text":"impl Freeze for ExecOutcome","synthetic":true,"types":[]},{"text":"impl Freeze for Trap","synthetic":true,"types":[]},{"text":"impl Freeze for NewErr","synthetic":true,"types":[]},{"text":"impl Freeze for StartErr","synthetic":true,"types":[]},{"text":"impl Freeze for ModuleError","synthetic":true,"types":[]},{"text":"impl Freeze for OutOfBoundsError","synthetic":true,"types":[]},{"text":"impl Freeze for RunErr","synthetic":true,"types":[]},{"text":"impl Freeze for GlobalValueErr","synthetic":true,"types":[]},{"text":"impl Freeze for CoreVersion","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for CoreVersionRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for GrandpaGenesisConfiguration","synthetic":true,"types":[]},{"text":"impl Freeze for FromGenesisStorageError","synthetic":true,"types":[]},{"text":"impl Freeze for FromVmPrototypeError","synthetic":true,"types":[]},{"text":"impl Freeze for Verifier","synthetic":true,"types":[]},{"text":"impl Freeze for Next","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for JustificationRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Justification","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for PrecommitsRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for PrecommitsRefIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for PrecommitRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Precommit","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for VotesAncestriesIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl&lt;'a, I&gt; Freeze for Config&lt;'a, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for AuraConsensusLogRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for AuraConsensusLog","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for AuraAuthoritiesIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for AuraAuthorityRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for AuraAuthority","synthetic":true,"types":[]},{"text":"impl Freeze for AuraPreDigest","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for BabeConsensusLogRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for BabeConsensusLog","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for BabeNextEpochRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for BabeNextEpoch","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for BabeAuthoritiesIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for BabeAuthorityRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for BabeAuthority","synthetic":true,"types":[]},{"text":"impl Freeze for BabeNextConfig","synthetic":true,"types":[]},{"text":"impl Freeze for BabeAllowedSlots","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for BabePreDigestRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for BabePreDigest","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for BabePrimaryPreDigestRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for BabePrimaryPreDigest","synthetic":true,"types":[]},{"text":"impl Freeze for BabeSecondaryPlainPreDigest","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for BabeSecondaryVRFPreDigestRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for BabeSecondaryVRFPreDigest","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for GrandpaConsensusLogRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for GrandpaConsensusLog","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for GrandpaScheduledChangeRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for GrandpaScheduledChange","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for GrandpaAuthoritiesIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for GrandpaAuthorityRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for GrandpaAuthority","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for HeaderRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Header","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for DigestRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Seal&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Digest","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for LogsIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for DigestItemRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for DigestItem","synthetic":true,"types":[]},{"text":"impl Freeze for ChangesTrieSignal","synthetic":true,"types":[]},{"text":"impl Freeze for ChangesTrieConfiguration","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for InformantLine&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for RelayChain&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for HashDisplay&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for ParseError","synthetic":true,"types":[]},{"text":"impl Freeze for JsonRpcParseError","synthetic":true,"types":[]},{"text":"impl Freeze for MethodCall","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Response&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for HexString","synthetic":true,"types":[]},{"text":"impl Freeze for HashHexString","synthetic":true,"types":[]},{"text":"impl Freeze for Block","synthetic":true,"types":[]},{"text":"impl Freeze for Header","synthetic":true,"types":[]},{"text":"impl Freeze for HeaderDigest","synthetic":true,"types":[]},{"text":"impl Freeze for RpcMethods","synthetic":true,"types":[]},{"text":"impl Freeze for RuntimeVersion","synthetic":true,"types":[]},{"text":"impl Freeze for StorageChangeSet","synthetic":true,"types":[]},{"text":"impl Freeze for SystemHealth","synthetic":true,"types":[]},{"text":"impl Freeze for SystemPeer","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Call&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for ParseError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for ErrorResponse&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Config","synthetic":true,"types":[]},{"text":"impl Freeze for ConnectionId","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !Freeze for WsServer&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for Event&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;TNow, TRqUd, TNotifUd&gt; Freeze for Established&lt;TNow, TRqUd, TNotifUd&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TNow: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for SubstreamId","synthetic":true,"types":[]},{"text":"impl&lt;TNow, TRqUd, TNotifUd&gt; Freeze for ReadWrite&lt;TNow, TRqUd, TNotifUd&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TNotifUd: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;TNow: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;TRqUd: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;TRqUd, TNotifUd&gt; Freeze for Event&lt;TRqUd, TNotifUd&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TNotifUd: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;TRqUd: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl Freeze for RequestError","synthetic":true,"types":[]},{"text":"impl Freeze for ConnectionPrototype","synthetic":true,"types":[]},{"text":"impl Freeze for Config","synthetic":true,"types":[]},{"text":"impl Freeze for ConfigRequestResponse","synthetic":true,"types":[]},{"text":"impl Freeze for ConfigNotifications","synthetic":true,"types":[]},{"text":"impl Freeze for Handshake","synthetic":true,"types":[]},{"text":"impl Freeze for HealthyHandshake","synthetic":true,"types":[]},{"text":"impl Freeze for NoiseKeyRequired","synthetic":true,"types":[]},{"text":"impl Freeze for HandshakeError","synthetic":true,"types":[]},{"text":"impl&lt;I, P&gt; Freeze for Config&lt;I, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, P&gt; Freeze for Negotiation&lt;I, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, P&gt; Freeze for InProgress&lt;I, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl&lt;I, P&gt; Freeze for MessageOut&lt;I, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for NoiseKey","synthetic":true,"types":[]},{"text":"impl Freeze for UnsignedNoiseKey","synthetic":true,"types":[]},{"text":"impl Freeze for Noise","synthetic":true,"types":[]},{"text":"impl Freeze for NoiseHandshake","synthetic":true,"types":[]},{"text":"impl Freeze for HandshakeInProgress","synthetic":true,"types":[]},{"text":"impl Freeze for HandshakeError","synthetic":true,"types":[]},{"text":"impl Freeze for CipherError","synthetic":true,"types":[]},{"text":"impl Freeze for PayloadDecodeError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Yamux&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Config","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for SubstreamMut&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for ExtractOut&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for SubstreamId","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for IncomingDataOutcome&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for IncomingDataDetail&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl Freeze for Kademlia","synthetic":true,"types":[]},{"text":"impl Freeze for DecodeFindNodeResponseError","synthetic":true,"types":[]},{"text":"impl Freeze for ProtobufDecodeError","synthetic":true,"types":[]},{"text":"impl Freeze for PublicKey","synthetic":true,"types":[]},{"text":"impl Freeze for FromProtobufEncodingError","synthetic":true,"types":[]},{"text":"impl Freeze for PeerId","synthetic":true,"types":[]},{"text":"impl Freeze for FromBytesError","synthetic":true,"types":[]},{"text":"impl Freeze for FromMultihashError","synthetic":true,"types":[]},{"text":"impl Freeze for ParseError","synthetic":true,"types":[]},{"text":"impl Freeze for Bs58DecodeError","synthetic":true,"types":[]},{"text":"impl Freeze for Config","synthetic":true,"types":[]},{"text":"impl&lt;TPeer, TConn, TPending, TSub, TPendingSub&gt; Freeze for Peerset&lt;TPeer, TConn, TPending, TSub, TPendingSub&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for SubstreamDirection","synthetic":true,"types":[]},{"text":"impl&lt;'a, TPeer, TConn, TPending, TSub, TPendingSub&gt; Freeze for PendingOrConnectionMut&lt;'a, TPeer, TConn, TPending, TSub, TPendingSub&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for ConnectionId","synthetic":true,"types":[]},{"text":"impl&lt;'a, TPeer, TConn, TPending, TSub, TPendingSub&gt; Freeze for ConnectionMut&lt;'a, TPeer, TConn, TPending, TSub, TPendingSub&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, TPeer, TConn, TPending, TSub, TPendingSub&gt; Freeze for PendingMut&lt;'a, TPeer, TConn, TPending, TSub, TPendingSub&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, TPeer, TConn, TPending, TSub, TPendingSub&gt; Freeze for NodeMut&lt;'a, TPeer, TConn, TPending, TSub, TPendingSub&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, TPeer, TConn, TPending, TSub, TPendingSub&gt; Freeze for NodeMutKnown&lt;'a, TPeer, TConn, TPending, TSub, TPendingSub&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, TPeer, TConn, TPending, TSub, TPendingSub&gt; Freeze for NodeMutUnknown&lt;'a, TPeer, TConn, TPending, TSub, TPendingSub&gt;","synthetic":true,"types":[]},{"text":"impl&lt;TPeer&gt; Freeze for Config&lt;TPeer&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for OverlayNetwork","synthetic":true,"types":[]},{"text":"impl Freeze for PendingId","synthetic":true,"types":[]},{"text":"impl Freeze for ConnectionId","synthetic":true,"types":[]},{"text":"impl&lt;TNow, TPeer, TConn&gt; !Freeze for Network&lt;TNow, TPeer, TConn&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for StartConnect","synthetic":true,"types":[]},{"text":"impl&lt;TConn&gt; Freeze for Event&lt;TConn&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TConn: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;TNow&gt; Freeze for ReadWrite&lt;TNow&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TNow: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for ConnectionReadyFuture","synthetic":true,"types":[]},{"text":"impl Freeze for ConnectionError","synthetic":true,"types":[]},{"text":"impl&lt;'a, TNow, TPeer, TConn&gt; Freeze for SubstreamOpen&lt;'a, TNow, TPeer, TConn&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for RequestError","synthetic":true,"types":[]},{"text":"impl Freeze for QueueNotificationError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for MetadataRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for ModuleMetadataRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for StorageMetadataRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for StorageEntryMetadataRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for StorageEntryModifier","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for StorageEntryTypeRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for StorageHasher","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for FunctionMetadataRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for FunctionArgumentMetadataRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for EventMetadataRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for ModuleConstantMetadataRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for ErrorMetadataRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for ExtrinsicMetadataRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for DecodeError&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for UndecodedIter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for BlockAnnouncesHandshakeRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Role","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for BlockAnnounceRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for DecodeBlockAnnounceError&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for BlockAnnouncesHandshakeDecodeError&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for BlocksRequestConfig","synthetic":true,"types":[]},{"text":"impl Freeze for BlocksRequestDirection","synthetic":true,"types":[]},{"text":"impl Freeze for BlocksRequestFields","synthetic":true,"types":[]},{"text":"impl Freeze for BlocksRequestConfigStart","synthetic":true,"types":[]},{"text":"impl Freeze for BlockData","synthetic":true,"types":[]},{"text":"impl Freeze for DecodeBlockResponseError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for GrandpaNotificationRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for VoteMessageRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for MessageRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for UnsignedPrevoteRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for UnsignedPrecommitRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for PrimaryProposeRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for CommitMessageRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for CompactCommitRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for NeighborPacket","synthetic":true,"types":[]},{"text":"impl Freeze for CatchUpRequest","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for CatchUpRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for PrevoteRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for DecodeGrandpaNotificationError&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for GrandpaWarpSyncResponseFragment","synthetic":true,"types":[]},{"text":"impl Freeze for DecodeGrandpaWarpSyncResponseError","synthetic":true,"types":[]},{"text":"impl&lt;TKeysIter&gt; Freeze for StorageProofRequestConfig&lt;TKeysIter&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TKeysIter: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for DecodeStorageProofResponseError","synthetic":true,"types":[]},{"text":"impl Freeze for ProtobufDecodeError","synthetic":true,"types":[]},{"text":"impl&lt;TPeer&gt; Freeze for Config&lt;TPeer&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for ChainConfig","synthetic":true,"types":[]},{"text":"impl Freeze for PendingId","synthetic":true,"types":[]},{"text":"impl Freeze for ConnectionId","synthetic":true,"types":[]},{"text":"impl&lt;TNow, TPeer, TConn&gt; !Freeze for ChainNetwork&lt;TNow, TPeer, TConn&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for StartConnect","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl Freeze for EncodedBlockAnnounceHandshake","synthetic":true,"types":[]},{"text":"impl Freeze for EncodedBlockAnnounce","synthetic":true,"types":[]},{"text":"impl&lt;'a, TNow, TPeer, TConn&gt; Freeze for DiscoveryInsert&lt;'a, TNow, TPeer, TConn&gt;","synthetic":true,"types":[]},{"text":"impl&lt;TNow&gt; Freeze for ReadWrite&lt;TNow&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TNow: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, TNow, TPeer, TConn&gt; Freeze for SubstreamOpen&lt;'a, TNow, TPeer, TConn&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for DiscoveryError","synthetic":true,"types":[]},{"text":"impl Freeze for BlocksRequestError","synthetic":true,"types":[]},{"text":"impl Freeze for StorageProofRequestError","synthetic":true,"types":[]},{"text":"impl Freeze for GrandpaWarpSyncRequestError","synthetic":true,"types":[]},{"text":"impl Freeze for Nibble","synthetic":true,"types":[]},{"text":"impl Freeze for NibbleFromU8Error","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Freeze for BytesToNibbles&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for CalculationCache","synthetic":true,"types":[]},{"text":"impl Freeze for RootMerkleValueCalculation","synthetic":true,"types":[]},{"text":"impl Freeze for AllKeys","synthetic":true,"types":[]},{"text":"impl Freeze for StorageValue","synthetic":true,"types":[]},{"text":"impl&lt;TChIter, TPKey, TVal&gt; Freeze for Config&lt;TChIter, TPKey, TVal&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TChIter: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;TPKey: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;TVal: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;TPKey&gt; Freeze for NodeTy&lt;TPKey&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TPKey: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for Output","synthetic":true,"types":[]},{"text":"impl&lt;'a, I&gt; Freeze for Config&lt;'a, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl&lt;TUd&gt; Freeze for TrieStructure&lt;TUd&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for NodeIndex","synthetic":true,"types":[]},{"text":"impl&lt;'a, TUd, TKIter&gt; Freeze for Entry&lt;'a, TUd, TKIter&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TKIter: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, TUd&gt; Freeze for NodeAccess&lt;'a, TUd&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, TUd&gt; Freeze for StorageNodeAccess&lt;'a, TUd&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, TUd&gt; Freeze for Remove&lt;'a, TUd&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TUd: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, TUd&gt; Freeze for BranchNodeAccess&lt;'a, TUd&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, TUd, TKIter&gt; Freeze for Vacant&lt;'a, TUd, TKIter&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TKIter: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, TUd&gt; Freeze for PrepareInsert&lt;'a, TUd&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, TUd&gt; Freeze for PrepareInsertOne&lt;'a, TUd&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, TUd&gt; Freeze for PrepareInsertTwo&lt;'a, TUd&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Trie","synthetic":true,"types":[]},{"text":"impl&lt;'a, TAuthList&gt; Freeze for VerifyConfig&lt;'a, TAuthList&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TAuthList: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for VerifySuccess","synthetic":true,"types":[]},{"text":"impl Freeze for VerifyError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for VerifyConfig&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for VerifySuccess","synthetic":true,"types":[]},{"text":"impl Freeze for VerifyError","synthetic":true,"types":[]},{"text":"impl&lt;'a, TBody&gt; Freeze for Config&lt;'a, TBody&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TBody: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for ConfigConsensus&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Success","synthetic":true,"types":[]},{"text":"impl Freeze for SuccessConsensus","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl Freeze for Verify","synthetic":true,"types":[]},{"text":"impl Freeze for StorageGet","synthetic":true,"types":[]},{"text":"impl Freeze for StoragePrefixKeys","synthetic":true,"types":[]},{"text":"impl Freeze for StorageNextKey","synthetic":true,"types":[]},{"text":"impl Freeze for RuntimeCompilation","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Config&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for ConfigConsensus&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Success","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]}];
implementors["smoldot_js"] = [{"text":"impl Freeze for Delay","synthetic":true,"types":[]},{"text":"impl Freeze for Instant","synthetic":true,"types":[]},{"text":"impl Freeze for WebSocket","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()