(function() {var implementors = {};
implementors["full_node"] = [{"text":"impl Sync for CliOptions","synthetic":true,"types":[]},{"text":"impl Sync for CliChain","synthetic":true,"types":[]},{"text":"impl Sync for ColorChoice","synthetic":true,"types":[]},{"text":"impl Sync for ColorChoiceParseError","synthetic":true,"types":[]},{"text":"impl Sync for Output","synthetic":true,"types":[]},{"text":"impl Sync for OutputParseError","synthetic":true,"types":[]},{"text":"impl Sync for NodeKey","synthetic":true,"types":[]},{"text":"impl Sync for NodeKeyParseError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for WithBuffers&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl !Sync for Config","synthetic":true,"types":[]},{"text":"impl Sync for ChainConfig","synthetic":true,"types":[]},{"text":"impl Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for NetworkService","synthetic":true,"types":[]},{"text":"impl !Sync for Guarded","synthetic":true,"types":[]},{"text":"impl Sync for InitError","synthetic":true,"types":[]},{"text":"impl !Sync for Config","synthetic":true,"types":[]},{"text":"impl Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for BlocksRequestId","synthetic":true,"types":[]},{"text":"impl Sync for SyncState","synthetic":true,"types":[]},{"text":"impl Sync for SyncService","synthetic":true,"types":[]},{"text":"impl Sync for ToBackground","synthetic":true,"types":[]},{"text":"impl Sync for FromBackground","synthetic":true,"types":[]},{"text":"impl Sync for ToDatabase","synthetic":true,"types":[]}];
implementors["smoldot"] = [{"text":"impl&lt;'a, TLocAuth&gt; Sync for Config&lt;'a, TLocAuth&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TLocAuth: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for SlotClaim","synthetic":true,"types":[]},{"text":"impl&lt;'a, TLocAuth&gt; Sync for Config&lt;'a, TLocAuth&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TLocAuth: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, TLocAuth&gt; Sync for ConfigConsensus&lt;'a, TLocAuth&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TLocAuth: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl !Sync for Builder","synthetic":true,"types":[]},{"text":"impl !Sync for BuilderAuthoring","synthetic":true,"types":[]},{"text":"impl Sync for WaitSlot","synthetic":true,"types":[]},{"text":"impl Sync for AuthoringStart","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for AuthoringStartConfig&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for ApplyExtrinsic","synthetic":true,"types":[]},{"text":"impl !Sync for StorageGet","synthetic":true,"types":[]},{"text":"impl !Sync for PrefixKeys","synthetic":true,"types":[]},{"text":"impl !Sync for NextKey","synthetic":true,"types":[]},{"text":"impl !Sync for Seal","synthetic":true,"types":[]},{"text":"impl Sync for Error","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for Config&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for ConfigPreRuntime&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for Success","synthetic":true,"types":[]},{"text":"impl Sync for Error","synthetic":true,"types":[]},{"text":"impl !Sync for BlockBuild","synthetic":true,"types":[]},{"text":"impl !Sync for InherentExtrinsics","synthetic":true,"types":[]},{"text":"impl Sync for InherentData","synthetic":true,"types":[]},{"text":"impl Sync for InherentDataConsensus","synthetic":true,"types":[]},{"text":"impl !Sync for ApplyExtrinsic","synthetic":true,"types":[]},{"text":"impl !Sync for StorageGet","synthetic":true,"types":[]},{"text":"impl !Sync for PrefixKeys","synthetic":true,"types":[]},{"text":"impl !Sync for NextKey","synthetic":true,"types":[]},{"text":"impl Sync for TransactionValidityError","synthetic":true,"types":[]},{"text":"impl Sync for InvalidTransaction","synthetic":true,"types":[]},{"text":"impl Sync for UnknownTransaction","synthetic":true,"types":[]},{"text":"impl Sync for DispatchError","synthetic":true,"types":[]},{"text":"impl&lt;'c, T&gt; Sync for JustificationApply&lt;'c, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for JustificationVerifyError","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Sync for SetFinalizedBlockIter&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for SetFinalizedError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for BodyVerifyStep1&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for BodyVerifyRuntimeRequired&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !Sync for BodyVerifyStep2&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !Sync for StorageGet&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !Sync for StoragePrefixKeys&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !Sync for StorageNextKey&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !Sync for RuntimeCompilation&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'c, T&gt; Sync for HeaderVerifySuccess&lt;'c, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'c, T&gt; Sync for HeaderInsert&lt;'c, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for HeaderVerifyError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for BodyInsert&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for Config","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for NonFinalizedTree&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Sync for BlockAccess&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for AuraGenesisConfiguration","synthetic":true,"types":[]},{"text":"impl Sync for FromGenesisStorageError","synthetic":true,"types":[]},{"text":"impl Sync for FromVmPrototypeError","synthetic":true,"types":[]},{"text":"impl Sync for BabeGenesisConfiguration","synthetic":true,"types":[]},{"text":"impl Sync for FromGenesisStorageError","synthetic":true,"types":[]},{"text":"impl Sync for FromVmPrototypeError","synthetic":true,"types":[]},{"text":"impl Sync for BabeEpochToFetch","synthetic":true,"types":[]},{"text":"impl !Sync for Config","synthetic":true,"types":[]},{"text":"impl Sync for Error","synthetic":true,"types":[]},{"text":"impl !Sync for Query","synthetic":true,"types":[]},{"text":"impl !Sync for StorageGet","synthetic":true,"types":[]},{"text":"impl !Sync for NextKey","synthetic":true,"types":[]},{"text":"impl Sync for ChainInformation","synthetic":true,"types":[]},{"text":"impl Sync for ChainInformationConsensus","synthetic":true,"types":[]},{"text":"impl Sync for BabeEpochInformation","synthetic":true,"types":[]},{"text":"impl Sync for ChainInformationFinality","synthetic":true,"types":[]},{"text":"impl Sync for FromGenesisStorageError","synthetic":true,"types":[]},{"text":"impl Sync for FinalizedScheduledChange","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for ChainInformationRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for ChainInformationConsensusRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for BabeEpochInformationRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for ChainInformationFinalityRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for ForkTree&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Sync for PruneAncestorsIter&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for PrunedNode&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for NodeIndex","synthetic":true,"types":[]},{"text":"impl Sync for Config","synthetic":true,"types":[]},{"text":"impl Sync for RequestId","synthetic":true,"types":[]},{"text":"impl Sync for SourceId","synthetic":true,"types":[]},{"text":"impl&lt;TRq, TSrc, TBl&gt; !Sync for OptimisticSync&lt;TRq, TSrc, TBl&gt;","synthetic":true,"types":[]},{"text":"impl&lt;TBl&gt; Sync for Block&lt;TBl&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TBl: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;TBl&gt; Sync for RequestSuccessBlock&lt;TBl&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TBl: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;TRq, TSrc, TBl&gt; !Sync for ProcessOne&lt;TRq, TSrc, TBl&gt;","synthetic":true,"types":[]},{"text":"impl&lt;TRq, TSrc, TBl&gt; !Sync for StorageGet&lt;TRq, TSrc, TBl&gt;","synthetic":true,"types":[]},{"text":"impl&lt;TRq, TSrc, TBl&gt; !Sync for StoragePrefixKeys&lt;TRq, TSrc, TBl&gt;","synthetic":true,"types":[]},{"text":"impl&lt;TRq, TSrc, TBl&gt; !Sync for StorageNextKey&lt;TRq, TSrc, TBl&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, TRq, TSrc, TBl&gt; Sync for RequestAction&lt;'a, TRq, TSrc, TBl&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TBl: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;TRq: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;TSrc: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, TRq, TSrc, TBl&gt; Sync for Start&lt;'a, TRq, TSrc, TBl&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TBl: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;TRq: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;TSrc: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, TSrc&gt; Sync for FinishRequestOutcome&lt;'a, TSrc&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TSrc: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for RequestFail","synthetic":true,"types":[]},{"text":"impl&lt;'a, TRq, TBl&gt; Sync for RequestsDrain&lt;'a, TRq, TBl&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TBl: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;TRq: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for ResetCause","synthetic":true,"types":[]},{"text":"impl Sync for LightSyncState","synthetic":true,"types":[]},{"text":"impl Sync for ChainSpec","synthetic":true,"types":[]},{"text":"impl Sync for ParseError","synthetic":true,"types":[]},{"text":"impl Sync for CorruptedError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for Config&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for ConfigTy&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for DatabaseOpen","synthetic":true,"types":[]},{"text":"impl Sync for DatabaseEmpty","synthetic":true,"types":[]},{"text":"impl Sync for SledFullDatabase","synthetic":true,"types":[]},{"text":"impl Sync for VarLenBytes","synthetic":true,"types":[]},{"text":"impl Sync for AccessError","synthetic":true,"types":[]},{"text":"impl Sync for SledError","synthetic":true,"types":[]},{"text":"impl Sync for InsertError","synthetic":true,"types":[]},{"text":"impl Sync for SetFinalizedError","synthetic":true,"types":[]},{"text":"impl Sync for FinalizedAccessError","synthetic":true,"types":[]},{"text":"impl Sync for CorruptedError","synthetic":true,"types":[]},{"text":"impl !Sync for HostVmPrototype","synthetic":true,"types":[]},{"text":"impl !Sync for HostVm","synthetic":true,"types":[]},{"text":"impl !Sync for ReadyToRun","synthetic":true,"types":[]},{"text":"impl !Sync for Finished","synthetic":true,"types":[]},{"text":"impl !Sync for ExternalStorageGet","synthetic":true,"types":[]},{"text":"impl !Sync for ExternalStorageSet","synthetic":true,"types":[]},{"text":"impl !Sync for ExternalStorageAppend","synthetic":true,"types":[]},{"text":"impl !Sync for ExternalStorageClearPrefix","synthetic":true,"types":[]},{"text":"impl !Sync for ExternalStorageRoot","synthetic":true,"types":[]},{"text":"impl !Sync for ExternalStorageChangesRoot","synthetic":true,"types":[]},{"text":"impl !Sync for ExternalStorageNextKey","synthetic":true,"types":[]},{"text":"impl !Sync for CallRuntimeVersion","synthetic":true,"types":[]},{"text":"impl !Sync for ExternalOffchainStorageSet","synthetic":true,"types":[]},{"text":"impl !Sync for LogEmit","synthetic":true,"types":[]},{"text":"impl !Sync for StartStorageTransaction","synthetic":true,"types":[]},{"text":"impl !Sync for EndStorageTransaction","synthetic":true,"types":[]},{"text":"impl Sync for NewErr","synthetic":true,"types":[]},{"text":"impl Sync for StartErr","synthetic":true,"types":[]},{"text":"impl Sync for Error","synthetic":true,"types":[]},{"text":"impl&lt;'a, TParams&gt; !Sync for Config&lt;'a, TParams&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for Success","synthetic":true,"types":[]},{"text":"impl !Sync for SuccessVirtualMachine","synthetic":true,"types":[]},{"text":"impl Sync for Error","synthetic":true,"types":[]},{"text":"impl !Sync for RuntimeHostVm","synthetic":true,"types":[]},{"text":"impl !Sync for StorageGet","synthetic":true,"types":[]},{"text":"impl !Sync for NextKey","synthetic":true,"types":[]},{"text":"impl&lt;'a, TParams&gt; !Sync for Config&lt;'a, TParams&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for Success","synthetic":true,"types":[]},{"text":"impl !Sync for SuccessVirtualMachine","synthetic":true,"types":[]},{"text":"impl Sync for Error","synthetic":true,"types":[]},{"text":"impl !Sync for RuntimeHostVm","synthetic":true,"types":[]},{"text":"impl !Sync for StorageGet","synthetic":true,"types":[]},{"text":"impl !Sync for PrefixKeys","synthetic":true,"types":[]},{"text":"impl !Sync for NextKey","synthetic":true,"types":[]},{"text":"impl !Sync for VirtualMachinePrototype","synthetic":true,"types":[]},{"text":"impl !Sync for VirtualMachine","synthetic":true,"types":[]},{"text":"impl Sync for ExecHint","synthetic":true,"types":[]},{"text":"impl Sync for Signature","synthetic":true,"types":[]},{"text":"impl Sync for WasmValue","synthetic":true,"types":[]},{"text":"impl Sync for ValueType","synthetic":true,"types":[]},{"text":"impl Sync for UnsupportedTypeError","synthetic":true,"types":[]},{"text":"impl Sync for ExecOutcome","synthetic":true,"types":[]},{"text":"impl Sync for Trap","synthetic":true,"types":[]},{"text":"impl Sync for NewErr","synthetic":true,"types":[]},{"text":"impl Sync for StartErr","synthetic":true,"types":[]},{"text":"impl Sync for ModuleError","synthetic":true,"types":[]},{"text":"impl Sync for OutOfBoundsError","synthetic":true,"types":[]},{"text":"impl Sync for RunErr","synthetic":true,"types":[]},{"text":"impl Sync for GlobalValueErr","synthetic":true,"types":[]},{"text":"impl Sync for CoreVersion","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for CoreVersionRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for GrandpaGenesisConfiguration","synthetic":true,"types":[]},{"text":"impl Sync for FromGenesisStorageError","synthetic":true,"types":[]},{"text":"impl Sync for FromVmPrototypeError","synthetic":true,"types":[]},{"text":"impl Sync for Verifier","synthetic":true,"types":[]},{"text":"impl Sync for Next","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for JustificationRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for Justification","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for PrecommitsRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for PrecommitsRefIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for PrecommitRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for Precommit","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for VotesAncestriesIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for Error","synthetic":true,"types":[]},{"text":"impl&lt;'a, I&gt; Sync for Config&lt;'a, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for Error","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for AuraConsensusLogRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for AuraConsensusLog","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for AuraAuthoritiesIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for AuraAuthorityRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for AuraAuthority","synthetic":true,"types":[]},{"text":"impl Sync for AuraPreDigest","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for BabeConsensusLogRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for BabeConsensusLog","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for BabeNextEpochRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for BabeNextEpoch","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for BabeAuthoritiesIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for BabeAuthorityRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for BabeAuthority","synthetic":true,"types":[]},{"text":"impl Sync for BabeNextConfig","synthetic":true,"types":[]},{"text":"impl Sync for BabeAllowedSlots","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for BabePreDigestRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for BabePreDigest","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for BabePrimaryPreDigestRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for BabePrimaryPreDigest","synthetic":true,"types":[]},{"text":"impl Sync for BabeSecondaryPlainPreDigest","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for BabeSecondaryVRFPreDigestRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for BabeSecondaryVRFPreDigest","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for GrandpaConsensusLogRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for GrandpaConsensusLog","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for GrandpaScheduledChangeRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for GrandpaScheduledChange","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for GrandpaAuthoritiesIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for GrandpaAuthorityRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for GrandpaAuthority","synthetic":true,"types":[]},{"text":"impl Sync for Error","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for HeaderRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for Header","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for DigestRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for Seal&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for Digest","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for LogsIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for DigestItemRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for DigestItem","synthetic":true,"types":[]},{"text":"impl Sync for ChangesTrieSignal","synthetic":true,"types":[]},{"text":"impl Sync for ChangesTrieConfiguration","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for InformantLine&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for RelayChain&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for HashDisplay&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for ParseError","synthetic":true,"types":[]},{"text":"impl Sync for JsonRpcParseError","synthetic":true,"types":[]},{"text":"impl Sync for MethodCall","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for Response&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for HexString","synthetic":true,"types":[]},{"text":"impl Sync for HashHexString","synthetic":true,"types":[]},{"text":"impl Sync for Block","synthetic":true,"types":[]},{"text":"impl Sync for Header","synthetic":true,"types":[]},{"text":"impl Sync for HeaderDigest","synthetic":true,"types":[]},{"text":"impl Sync for RpcMethods","synthetic":true,"types":[]},{"text":"impl Sync for RuntimeVersion","synthetic":true,"types":[]},{"text":"impl Sync for StorageChangeSet","synthetic":true,"types":[]},{"text":"impl Sync for SystemHealth","synthetic":true,"types":[]},{"text":"impl Sync for SystemPeer","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for Call&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for ParseError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for ErrorResponse&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for Config","synthetic":true,"types":[]},{"text":"impl Sync for ConnectionId","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !Sync for WsServer&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Sync for Event&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;TNow, TRqUd, TNotifUd&gt; Sync for Established&lt;TNow, TRqUd, TNotifUd&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TNotifUd: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;TNow: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;TRqUd: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for SubstreamId","synthetic":true,"types":[]},{"text":"impl&lt;TNow, TRqUd, TNotifUd&gt; Sync for ReadWrite&lt;TNow, TRqUd, TNotifUd&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TNotifUd: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;TNow: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;TRqUd: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;TRqUd, TNotifUd&gt; Sync for Event&lt;TRqUd, TNotifUd&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TNotifUd: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;TRqUd: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for Error","synthetic":true,"types":[]},{"text":"impl Sync for RequestError","synthetic":true,"types":[]},{"text":"impl Sync for ConnectionPrototype","synthetic":true,"types":[]},{"text":"impl Sync for Config","synthetic":true,"types":[]},{"text":"impl Sync for ConfigRequestResponse","synthetic":true,"types":[]},{"text":"impl Sync for ConfigNotifications","synthetic":true,"types":[]},{"text":"impl Sync for Handshake","synthetic":true,"types":[]},{"text":"impl Sync for HealthyHandshake","synthetic":true,"types":[]},{"text":"impl Sync for NoiseKeyRequired","synthetic":true,"types":[]},{"text":"impl Sync for HandshakeError","synthetic":true,"types":[]},{"text":"impl&lt;I, P&gt; Sync for Config&lt;I, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, P&gt; Sync for Negotiation&lt;I, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, P&gt; Sync for InProgress&lt;I, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for Error","synthetic":true,"types":[]},{"text":"impl&lt;I, P&gt; Sync for MessageOut&lt;I, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for NoiseKey","synthetic":true,"types":[]},{"text":"impl Sync for UnsignedNoiseKey","synthetic":true,"types":[]},{"text":"impl Sync for Noise","synthetic":true,"types":[]},{"text":"impl Sync for NoiseHandshake","synthetic":true,"types":[]},{"text":"impl Sync for HandshakeInProgress","synthetic":true,"types":[]},{"text":"impl Sync for HandshakeError","synthetic":true,"types":[]},{"text":"impl Sync for CipherError","synthetic":true,"types":[]},{"text":"impl Sync for PayloadDecodeError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for Yamux&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for Config","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Sync for SubstreamMut&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Sync for ExtractOut&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for SubstreamId","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for IncomingDataOutcome&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for IncomingDataDetail&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for Error","synthetic":true,"types":[]},{"text":"impl Sync for Kademlia","synthetic":true,"types":[]},{"text":"impl Sync for DecodeFindNodeResponseError","synthetic":true,"types":[]},{"text":"impl Sync for ProtobufDecodeError","synthetic":true,"types":[]},{"text":"impl Sync for PublicKey","synthetic":true,"types":[]},{"text":"impl Sync for FromProtobufEncodingError","synthetic":true,"types":[]},{"text":"impl Sync for PeerId","synthetic":true,"types":[]},{"text":"impl Sync for FromBytesError","synthetic":true,"types":[]},{"text":"impl Sync for FromMultihashError","synthetic":true,"types":[]},{"text":"impl Sync for ParseError","synthetic":true,"types":[]},{"text":"impl Sync for Bs58DecodeError","synthetic":true,"types":[]},{"text":"impl Sync for Config","synthetic":true,"types":[]},{"text":"impl&lt;TPeer, TConn, TPending, TSub, TPendingSub&gt; Sync for Peerset&lt;TPeer, TConn, TPending, TSub, TPendingSub&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TConn: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;TPeer: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;TPending: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;TPendingSub: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;TSub: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for SubstreamDirection","synthetic":true,"types":[]},{"text":"impl&lt;'a, TPeer, TConn, TPending, TSub, TPendingSub&gt; Sync for PendingOrConnectionMut&lt;'a, TPeer, TConn, TPending, TSub, TPendingSub&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TConn: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;TPeer: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;TPending: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;TPendingSub: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;TSub: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for ConnectionId","synthetic":true,"types":[]},{"text":"impl&lt;'a, TPeer, TConn, TPending, TSub, TPendingSub&gt; Sync for ConnectionMut&lt;'a, TPeer, TConn, TPending, TSub, TPendingSub&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TConn: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;TPeer: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;TPending: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;TPendingSub: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;TSub: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, TPeer, TConn, TPending, TSub, TPendingSub&gt; Sync for PendingMut&lt;'a, TPeer, TConn, TPending, TSub, TPendingSub&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TConn: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;TPeer: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;TPending: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;TPendingSub: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;TSub: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, TPeer, TConn, TPending, TSub, TPendingSub&gt; Sync for NodeMut&lt;'a, TPeer, TConn, TPending, TSub, TPendingSub&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TConn: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;TPeer: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;TPending: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;TPendingSub: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;TSub: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, TPeer, TConn, TPending, TSub, TPendingSub&gt; Sync for NodeMutKnown&lt;'a, TPeer, TConn, TPending, TSub, TPendingSub&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TConn: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;TPeer: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;TPending: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;TPendingSub: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;TSub: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, TPeer, TConn, TPending, TSub, TPendingSub&gt; Sync for NodeMutUnknown&lt;'a, TPeer, TConn, TPending, TSub, TPendingSub&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TConn: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;TPeer: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;TPending: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;TPendingSub: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;TSub: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;TPeer&gt; Sync for Config&lt;TPeer&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TPeer: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for OverlayNetwork","synthetic":true,"types":[]},{"text":"impl Sync for PendingId","synthetic":true,"types":[]},{"text":"impl Sync for ConnectionId","synthetic":true,"types":[]},{"text":"impl&lt;TNow, TPeer, TConn&gt; Sync for Network&lt;TNow, TPeer, TConn&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TConn: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;TNow: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;TPeer: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for StartConnect","synthetic":true,"types":[]},{"text":"impl&lt;TConn&gt; Sync for Event&lt;TConn&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TConn: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;TNow&gt; Sync for ReadWrite&lt;TNow&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TNow: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for ConnectionReadyFuture","synthetic":true,"types":[]},{"text":"impl Sync for ConnectionError","synthetic":true,"types":[]},{"text":"impl&lt;'a, TNow, TPeer, TConn&gt; Sync for SubstreamOpen&lt;'a, TNow, TPeer, TConn&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TConn: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;TNow: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;TPeer: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for RequestError","synthetic":true,"types":[]},{"text":"impl Sync for QueueNotificationError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for MetadataRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for ModuleMetadataRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for StorageMetadataRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for StorageEntryMetadataRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for StorageEntryModifier","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for StorageEntryTypeRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for StorageHasher","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for FunctionMetadataRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for FunctionArgumentMetadataRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for EventMetadataRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for ModuleConstantMetadataRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for ErrorMetadataRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for ExtrinsicMetadataRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for DecodeError&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Sync for UndecodedIter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl Sync for Error","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for BlockAnnouncesHandshakeRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for Role","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for BlockAnnounceRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for DecodeBlockAnnounceError&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for BlockAnnouncesHandshakeDecodeError&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for BlocksRequestConfig","synthetic":true,"types":[]},{"text":"impl Sync for BlocksRequestDirection","synthetic":true,"types":[]},{"text":"impl Sync for BlocksRequestFields","synthetic":true,"types":[]},{"text":"impl Sync for BlocksRequestConfigStart","synthetic":true,"types":[]},{"text":"impl Sync for BlockData","synthetic":true,"types":[]},{"text":"impl Sync for DecodeBlockResponseError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for GrandpaNotificationRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for VoteMessageRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for MessageRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for UnsignedPrevoteRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for UnsignedPrecommitRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for PrimaryProposeRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for CommitMessageRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for CompactCommitRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for NeighborPacket","synthetic":true,"types":[]},{"text":"impl Sync for CatchUpRequest","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for CatchUpRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for PrevoteRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for DecodeGrandpaNotificationError&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for GrandpaWarpSyncResponseFragment","synthetic":true,"types":[]},{"text":"impl Sync for DecodeGrandpaWarpSyncResponseError","synthetic":true,"types":[]},{"text":"impl&lt;TKeysIter&gt; Sync for StorageProofRequestConfig&lt;TKeysIter&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TKeysIter: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for DecodeStorageProofResponseError","synthetic":true,"types":[]},{"text":"impl Sync for ProtobufDecodeError","synthetic":true,"types":[]},{"text":"impl&lt;TPeer&gt; Sync for Config&lt;TPeer&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TPeer: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for ChainConfig","synthetic":true,"types":[]},{"text":"impl Sync for PendingId","synthetic":true,"types":[]},{"text":"impl Sync for ConnectionId","synthetic":true,"types":[]},{"text":"impl&lt;TNow, TPeer, TConn&gt; Sync for ChainNetwork&lt;TNow, TPeer, TConn&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TConn: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;TNow: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;TPeer: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for StartConnect","synthetic":true,"types":[]},{"text":"impl Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for EncodedBlockAnnounceHandshake","synthetic":true,"types":[]},{"text":"impl Sync for EncodedBlockAnnounce","synthetic":true,"types":[]},{"text":"impl&lt;'a, TNow, TPeer, TConn&gt; Sync for DiscoveryInsert&lt;'a, TNow, TPeer, TConn&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TConn: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;TNow: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;TPeer: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;TNow&gt; Sync for ReadWrite&lt;TNow&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TNow: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, TNow, TPeer, TConn&gt; Sync for SubstreamOpen&lt;'a, TNow, TPeer, TConn&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TConn: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;TNow: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;TPeer: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for DiscoveryError","synthetic":true,"types":[]},{"text":"impl Sync for BlocksRequestError","synthetic":true,"types":[]},{"text":"impl Sync for StorageProofRequestError","synthetic":true,"types":[]},{"text":"impl Sync for GrandpaWarpSyncRequestError","synthetic":true,"types":[]},{"text":"impl Sync for Nibble","synthetic":true,"types":[]},{"text":"impl Sync for NibbleFromU8Error","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Sync for BytesToNibbles&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for CalculationCache","synthetic":true,"types":[]},{"text":"impl Sync for RootMerkleValueCalculation","synthetic":true,"types":[]},{"text":"impl Sync for AllKeys","synthetic":true,"types":[]},{"text":"impl Sync for StorageValue","synthetic":true,"types":[]},{"text":"impl&lt;TChIter, TPKey, TVal&gt; Sync for Config&lt;TChIter, TPKey, TVal&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TChIter: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;TPKey: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;TVal: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;TPKey&gt; Sync for NodeTy&lt;TPKey&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TPKey: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for Output","synthetic":true,"types":[]},{"text":"impl&lt;'a, I&gt; Sync for Config&lt;'a, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for Error","synthetic":true,"types":[]},{"text":"impl&lt;TUd&gt; Sync for TrieStructure&lt;TUd&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TUd: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for NodeIndex","synthetic":true,"types":[]},{"text":"impl&lt;'a, TUd, TKIter&gt; Sync for Entry&lt;'a, TUd, TKIter&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TKIter: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;TUd: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, TUd&gt; Sync for NodeAccess&lt;'a, TUd&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TUd: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, TUd&gt; Sync for StorageNodeAccess&lt;'a, TUd&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TUd: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, TUd&gt; Sync for Remove&lt;'a, TUd&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TUd: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, TUd&gt; Sync for BranchNodeAccess&lt;'a, TUd&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TUd: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, TUd, TKIter&gt; Sync for Vacant&lt;'a, TUd, TKIter&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TKIter: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;TUd: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, TUd&gt; Sync for PrepareInsert&lt;'a, TUd&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TUd: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, TUd&gt; Sync for PrepareInsertOne&lt;'a, TUd&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TUd: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, TUd&gt; Sync for PrepareInsertTwo&lt;'a, TUd&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TUd: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for Trie","synthetic":true,"types":[]},{"text":"impl&lt;'a, TAuthList&gt; Sync for VerifyConfig&lt;'a, TAuthList&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TAuthList: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for VerifySuccess","synthetic":true,"types":[]},{"text":"impl Sync for VerifyError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for VerifyConfig&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for VerifySuccess","synthetic":true,"types":[]},{"text":"impl Sync for VerifyError","synthetic":true,"types":[]},{"text":"impl&lt;'a, TBody&gt; !Sync for Config&lt;'a, TBody&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for ConfigConsensus&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for Success","synthetic":true,"types":[]},{"text":"impl Sync for SuccessConsensus","synthetic":true,"types":[]},{"text":"impl Sync for Error","synthetic":true,"types":[]},{"text":"impl !Sync for Verify","synthetic":true,"types":[]},{"text":"impl !Sync for StorageGet","synthetic":true,"types":[]},{"text":"impl !Sync for StoragePrefixKeys","synthetic":true,"types":[]},{"text":"impl !Sync for StorageNextKey","synthetic":true,"types":[]},{"text":"impl !Sync for RuntimeCompilation","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for Config&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for ConfigConsensus&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for Success","synthetic":true,"types":[]},{"text":"impl Sync for Error","synthetic":true,"types":[]}];
implementors["smoldot_js"] = [{"text":"impl Sync for Delay","synthetic":true,"types":[]},{"text":"impl Sync for Instant","synthetic":true,"types":[]},{"text":"impl Sync for WebSocket","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()