(function() {var implementors = {};
implementors["full_node"] = [{"text":"impl UnwindSafe for CliOptions","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CliChain","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ColorChoice","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ColorChoiceParseError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Output","synthetic":true,"types":[]},{"text":"impl UnwindSafe for OutputParseError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NodeKey","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NodeKeyParseError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !UnwindSafe for WithBuffers&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Config","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ChainConfig","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for NetworkService","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Guarded","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for InitError","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Config","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BlocksRequestId","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SyncState","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for SyncService","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ToBackground","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for FromBackground","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ToDatabase","synthetic":true,"types":[]}];
implementors["smoldot"] = [{"text":"impl&lt;'a, TLocAuth&gt; UnwindSafe for Config&lt;'a, TLocAuth&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TLocAuth: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SlotClaim","synthetic":true,"types":[]},{"text":"impl&lt;'a, TLocAuth&gt; UnwindSafe for Config&lt;'a, TLocAuth&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TLocAuth: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, TLocAuth&gt; UnwindSafe for ConfigConsensus&lt;'a, TLocAuth&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TLocAuth: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Builder","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for BuilderAuthoring","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WaitSlot","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AuthoringStart","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for AuthoringStartConfig&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ApplyExtrinsic","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for StorageGet","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for PrefixKeys","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for NextKey","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Seal","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for Config&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ConfigPreRuntime&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Success","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for BlockBuild","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for InherentExtrinsics","synthetic":true,"types":[]},{"text":"impl UnwindSafe for InherentData","synthetic":true,"types":[]},{"text":"impl UnwindSafe for InherentDataConsensus","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ApplyExtrinsic","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for StorageGet","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for PrefixKeys","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for NextKey","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TransactionValidityError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for InvalidTransaction","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UnknownTransaction","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DispatchError","synthetic":true,"types":[]},{"text":"impl&lt;'c, T&gt; !UnwindSafe for JustificationApply&lt;'c, T&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for JustificationVerifyError","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !UnwindSafe for SetFinalizedBlockIter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SetFinalizedError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for BodyVerifyStep1&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for BodyVerifyRuntimeRequired&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !UnwindSafe for BodyVerifyStep2&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !UnwindSafe for StorageGet&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !UnwindSafe for StoragePrefixKeys&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !UnwindSafe for StorageNextKey&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !UnwindSafe for RuntimeCompilation&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'c, T&gt; !UnwindSafe for HeaderVerifySuccess&lt;'c, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'c, T&gt; !UnwindSafe for HeaderInsert&lt;'c, T&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for HeaderVerifyError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for BodyInsert&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Config","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for NonFinalizedTree&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !UnwindSafe for BlockAccess&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AuraGenesisConfiguration","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FromGenesisStorageError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FromVmPrototypeError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BabeGenesisConfiguration","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FromGenesisStorageError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FromVmPrototypeError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BabeEpochToFetch","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Config","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Query","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for StorageGet","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for NextKey","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ChainInformation","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ChainInformationConsensus","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BabeEpochInformation","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ChainInformationFinality","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FromGenesisStorageError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FinalizedScheduledChange","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ChainInformationRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ChainInformationConsensusRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for BabeEpochInformationRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ChainInformationFinalityRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for ForkTree&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !UnwindSafe for PruneAncestorsIter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for PrunedNode&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NodeIndex","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Config","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RequestId","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SourceId","synthetic":true,"types":[]},{"text":"impl&lt;TRq, TSrc, TBl&gt; !UnwindSafe for OptimisticSync&lt;TRq, TSrc, TBl&gt;","synthetic":true,"types":[]},{"text":"impl&lt;TBl&gt; UnwindSafe for Block&lt;TBl&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TBl: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;TBl&gt; UnwindSafe for RequestSuccessBlock&lt;TBl&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TBl: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;TRq, TSrc, TBl&gt; !UnwindSafe for ProcessOne&lt;TRq, TSrc, TBl&gt;","synthetic":true,"types":[]},{"text":"impl&lt;TRq, TSrc, TBl&gt; !UnwindSafe for StorageGet&lt;TRq, TSrc, TBl&gt;","synthetic":true,"types":[]},{"text":"impl&lt;TRq, TSrc, TBl&gt; !UnwindSafe for StoragePrefixKeys&lt;TRq, TSrc, TBl&gt;","synthetic":true,"types":[]},{"text":"impl&lt;TRq, TSrc, TBl&gt; !UnwindSafe for StorageNextKey&lt;TRq, TSrc, TBl&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, TRq, TSrc, TBl&gt; !UnwindSafe for RequestAction&lt;'a, TRq, TSrc, TBl&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, TRq, TSrc, TBl&gt; !UnwindSafe for Start&lt;'a, TRq, TSrc, TBl&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, TSrc&gt; !UnwindSafe for FinishRequestOutcome&lt;'a, TSrc&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RequestFail","synthetic":true,"types":[]},{"text":"impl&lt;'a, TRq, TBl&gt; !UnwindSafe for RequestsDrain&lt;'a, TRq, TBl&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ResetCause","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LightSyncState","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ChainSpec","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ParseError","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for CorruptedError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Config&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ConfigTy&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for DatabaseOpen","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for DatabaseEmpty","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for SledFullDatabase","synthetic":true,"types":[]},{"text":"impl UnwindSafe for VarLenBytes","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for AccessError","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for SledError","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for InsertError","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for SetFinalizedError","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for FinalizedAccessError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CorruptedError","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for HostVmPrototype","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for HostVm","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ReadyToRun","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Finished","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ExternalStorageGet","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ExternalStorageSet","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ExternalStorageAppend","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ExternalStorageClearPrefix","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ExternalStorageRoot","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ExternalStorageChangesRoot","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ExternalStorageNextKey","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for CallRuntimeVersion","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ExternalOffchainStorageSet","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for LogEmit","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for StartStorageTransaction","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for EndStorageTransaction","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NewErr","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StartErr","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl&lt;'a, TParams&gt; !UnwindSafe for Config&lt;'a, TParams&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Success","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for SuccessVirtualMachine","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for RuntimeHostVm","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for StorageGet","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for NextKey","synthetic":true,"types":[]},{"text":"impl&lt;'a, TParams&gt; !UnwindSafe for Config&lt;'a, TParams&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Success","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for SuccessVirtualMachine","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for RuntimeHostVm","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for StorageGet","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for PrefixKeys","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for NextKey","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for VirtualMachinePrototype","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for VirtualMachine","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExecHint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Signature","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WasmValue","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ValueType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UnsupportedTypeError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExecOutcome","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Trap","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NewErr","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StartErr","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ModuleError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for OutOfBoundsError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RunErr","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GlobalValueErr","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CoreVersion","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for CoreVersionRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GrandpaGenesisConfiguration","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FromGenesisStorageError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FromVmPrototypeError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Verifier","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Next","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for JustificationRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Justification","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PrecommitsRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PrecommitsRefIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PrecommitRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Precommit","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for VotesAncestriesIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl&lt;'a, I&gt; UnwindSafe for Config&lt;'a, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for AuraConsensusLogRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AuraConsensusLog","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for AuraAuthoritiesIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for AuraAuthorityRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AuraAuthority","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AuraPreDigest","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for BabeConsensusLogRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BabeConsensusLog","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for BabeNextEpochRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BabeNextEpoch","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for BabeAuthoritiesIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for BabeAuthorityRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BabeAuthority","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BabeNextConfig","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BabeAllowedSlots","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for BabePreDigestRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BabePreDigest","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for BabePrimaryPreDigestRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BabePrimaryPreDigest","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BabeSecondaryPlainPreDigest","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for BabeSecondaryVRFPreDigestRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BabeSecondaryVRFPreDigest","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for GrandpaConsensusLogRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GrandpaConsensusLog","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for GrandpaScheduledChangeRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GrandpaScheduledChange","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for GrandpaAuthoritiesIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for GrandpaAuthorityRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GrandpaAuthority","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for HeaderRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Header","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DigestRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Seal&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Digest","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for LogsIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DigestItemRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DigestItem","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ChangesTrieSignal","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ChangesTrieConfiguration","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for InformantLine&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for RelayChain&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for HashDisplay&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ParseError","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for JsonRpcParseError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MethodCall","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Response&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for HexString","synthetic":true,"types":[]},{"text":"impl UnwindSafe for HashHexString","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Block","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Header","synthetic":true,"types":[]},{"text":"impl UnwindSafe for HeaderDigest","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RpcMethods","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RuntimeVersion","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StorageChangeSet","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SystemHealth","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SystemPeer","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Call&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ParseError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ErrorResponse&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Config","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ConnectionId","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !UnwindSafe for WsServer&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !UnwindSafe for Event&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;TNow, TRqUd, TNotifUd&gt; !UnwindSafe for Established&lt;TNow, TRqUd, TNotifUd&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SubstreamId","synthetic":true,"types":[]},{"text":"impl&lt;TNow, TRqUd, TNotifUd&gt; !UnwindSafe for ReadWrite&lt;TNow, TRqUd, TNotifUd&gt;","synthetic":true,"types":[]},{"text":"impl&lt;TRqUd, TNotifUd&gt; UnwindSafe for Event&lt;TRqUd, TNotifUd&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TNotifUd: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;TRqUd: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RequestError","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ConnectionPrototype","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Config","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ConfigRequestResponse","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ConfigNotifications","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Handshake","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for HealthyHandshake","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NoiseKeyRequired","synthetic":true,"types":[]},{"text":"impl UnwindSafe for HandshakeError","synthetic":true,"types":[]},{"text":"impl&lt;I, P&gt; UnwindSafe for Config&lt;I, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, P&gt; UnwindSafe for Negotiation&lt;I, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, P&gt; UnwindSafe for InProgress&lt;I, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl&lt;I, P&gt; UnwindSafe for MessageOut&lt;I, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NoiseKey","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UnsignedNoiseKey","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Noise","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for NoiseHandshake","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for HandshakeInProgress","synthetic":true,"types":[]},{"text":"impl UnwindSafe for HandshakeError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CipherError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PayloadDecodeError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for Yamux&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Config","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !UnwindSafe for SubstreamMut&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !UnwindSafe for ExtractOut&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SubstreamId","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for IncomingDataOutcome&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for IncomingDataDetail&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Kademlia","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for DecodeFindNodeResponseError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ProtobufDecodeError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PublicKey","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FromProtobufEncodingError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PeerId","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FromBytesError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FromMultihashError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ParseError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Bs58DecodeError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Config","synthetic":true,"types":[]},{"text":"impl&lt;TPeer, TConn, TPending, TSub, TPendingSub&gt; UnwindSafe for Peerset&lt;TPeer, TConn, TPending, TSub, TPendingSub&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TConn: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;TPeer: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;TPending: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;TPendingSub: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;TSub: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SubstreamDirection","synthetic":true,"types":[]},{"text":"impl&lt;'a, TPeer, TConn, TPending, TSub, TPendingSub&gt; !UnwindSafe for PendingOrConnectionMut&lt;'a, TPeer, TConn, TPending, TSub, TPendingSub&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ConnectionId","synthetic":true,"types":[]},{"text":"impl&lt;'a, TPeer, TConn, TPending, TSub, TPendingSub&gt; !UnwindSafe for ConnectionMut&lt;'a, TPeer, TConn, TPending, TSub, TPendingSub&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, TPeer, TConn, TPending, TSub, TPendingSub&gt; !UnwindSafe for PendingMut&lt;'a, TPeer, TConn, TPending, TSub, TPendingSub&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, TPeer, TConn, TPending, TSub, TPendingSub&gt; !UnwindSafe for NodeMut&lt;'a, TPeer, TConn, TPending, TSub, TPendingSub&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, TPeer, TConn, TPending, TSub, TPendingSub&gt; !UnwindSafe for NodeMutKnown&lt;'a, TPeer, TConn, TPending, TSub, TPendingSub&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, TPeer, TConn, TPending, TSub, TPendingSub&gt; !UnwindSafe for NodeMutUnknown&lt;'a, TPeer, TConn, TPending, TSub, TPendingSub&gt;","synthetic":true,"types":[]},{"text":"impl&lt;TPeer&gt; UnwindSafe for Config&lt;TPeer&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TPeer: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for OverlayNetwork","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PendingId","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ConnectionId","synthetic":true,"types":[]},{"text":"impl&lt;TNow, TPeer, TConn&gt; !UnwindSafe for Network&lt;TNow, TPeer, TConn&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StartConnect","synthetic":true,"types":[]},{"text":"impl&lt;TConn&gt; UnwindSafe for Event&lt;TConn&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TConn: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;TNow&gt; !UnwindSafe for ReadWrite&lt;TNow&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ConnectionReadyFuture","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ConnectionError","synthetic":true,"types":[]},{"text":"impl&lt;'a, TNow, TPeer, TConn&gt; !UnwindSafe for SubstreamOpen&lt;'a, TNow, TPeer, TConn&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RequestError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for QueueNotificationError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for MetadataRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ModuleMetadataRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for StorageMetadataRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for StorageEntryMetadataRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StorageEntryModifier","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for StorageEntryTypeRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StorageHasher","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for FunctionMetadataRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for FunctionArgumentMetadataRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for EventMetadataRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ModuleConstantMetadataRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ErrorMetadataRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ExtrinsicMetadataRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DecodeError&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; UnwindSafe for UndecodedIter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for BlockAnnouncesHandshakeRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Role","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for BlockAnnounceRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DecodeBlockAnnounceError&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for BlockAnnouncesHandshakeDecodeError&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BlocksRequestConfig","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BlocksRequestDirection","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BlocksRequestFields","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BlocksRequestConfigStart","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BlockData","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DecodeBlockResponseError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for GrandpaNotificationRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for VoteMessageRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for MessageRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for UnsignedPrevoteRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for UnsignedPrecommitRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PrimaryProposeRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for CommitMessageRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for CompactCommitRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NeighborPacket","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CatchUpRequest","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for CatchUpRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PrevoteRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DecodeGrandpaNotificationError&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GrandpaWarpSyncResponseFragment","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DecodeGrandpaWarpSyncResponseError","synthetic":true,"types":[]},{"text":"impl&lt;TKeysIter&gt; UnwindSafe for StorageProofRequestConfig&lt;TKeysIter&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TKeysIter: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DecodeStorageProofResponseError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ProtobufDecodeError","synthetic":true,"types":[]},{"text":"impl&lt;TPeer&gt; UnwindSafe for Config&lt;TPeer&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TPeer: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ChainConfig","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PendingId","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ConnectionId","synthetic":true,"types":[]},{"text":"impl&lt;TNow, TPeer, TConn&gt; !UnwindSafe for ChainNetwork&lt;TNow, TPeer, TConn&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StartConnect","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EncodedBlockAnnounceHandshake","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EncodedBlockAnnounce","synthetic":true,"types":[]},{"text":"impl&lt;'a, TNow, TPeer, TConn&gt; !UnwindSafe for DiscoveryInsert&lt;'a, TNow, TPeer, TConn&gt;","synthetic":true,"types":[]},{"text":"impl&lt;TNow&gt; !UnwindSafe for ReadWrite&lt;TNow&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, TNow, TPeer, TConn&gt; !UnwindSafe for SubstreamOpen&lt;'a, TNow, TPeer, TConn&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for DiscoveryError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BlocksRequestError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StorageProofRequestError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GrandpaWarpSyncRequestError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Nibble","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NibbleFromU8Error","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; UnwindSafe for BytesToNibbles&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CalculationCache","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RootMerkleValueCalculation","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AllKeys","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StorageValue","synthetic":true,"types":[]},{"text":"impl&lt;TChIter, TPKey, TVal&gt; UnwindSafe for Config&lt;TChIter, TPKey, TVal&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TChIter: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;TPKey: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;TVal: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;TPKey&gt; UnwindSafe for NodeTy&lt;TPKey&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TPKey: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Output","synthetic":true,"types":[]},{"text":"impl&lt;'a, I&gt; UnwindSafe for Config&lt;'a, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl&lt;TUd&gt; UnwindSafe for TrieStructure&lt;TUd&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TUd: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NodeIndex","synthetic":true,"types":[]},{"text":"impl&lt;'a, TUd, TKIter&gt; !UnwindSafe for Entry&lt;'a, TUd, TKIter&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, TUd&gt; !UnwindSafe for NodeAccess&lt;'a, TUd&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, TUd&gt; !UnwindSafe for StorageNodeAccess&lt;'a, TUd&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, TUd&gt; !UnwindSafe for Remove&lt;'a, TUd&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, TUd&gt; !UnwindSafe for BranchNodeAccess&lt;'a, TUd&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, TUd, TKIter&gt; !UnwindSafe for Vacant&lt;'a, TUd, TKIter&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, TUd&gt; !UnwindSafe for PrepareInsert&lt;'a, TUd&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, TUd&gt; !UnwindSafe for PrepareInsertOne&lt;'a, TUd&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, TUd&gt; !UnwindSafe for PrepareInsertTwo&lt;'a, TUd&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Trie","synthetic":true,"types":[]},{"text":"impl&lt;'a, TAuthList&gt; UnwindSafe for VerifyConfig&lt;'a, TAuthList&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TAuthList: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for VerifySuccess","synthetic":true,"types":[]},{"text":"impl UnwindSafe for VerifyError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for VerifyConfig&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for VerifySuccess","synthetic":true,"types":[]},{"text":"impl UnwindSafe for VerifyError","synthetic":true,"types":[]},{"text":"impl&lt;'a, TBody&gt; !UnwindSafe for Config&lt;'a, TBody&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ConfigConsensus&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Success","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SuccessConsensus","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Verify","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for StorageGet","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for StoragePrefixKeys","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for StorageNextKey","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for RuntimeCompilation","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Config&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ConfigConsensus&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Success","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]}];
implementors["smoldot_js"] = [{"text":"impl !UnwindSafe for Delay","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Instant","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WebSocket","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()