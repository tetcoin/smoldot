var searchIndex = JSON.parse('{\
"full_node":{"doc":"","i":[[0,"cli","full_node","Provides the [<code>CliOptions</code>] struct that contains all the …",null,null],[17,"APP_INFO","full_node::cli","Information about the binary for the <code>app_dirs</code> library.",null,null],[3,"CliOptions","","",null,null],[12,"chain","","Chain to connect to (\\\"polkadot\\\", \\\"kusama\\\", \\\"westend\\\", or …",0,null],[12,"output","","Output to stdout: auto, none, informant, logs, logs-json.",0,null],[12,"color","","Coloring: auto, always, never",0,null],[12,"node_key","","Ed25519 private key of network identity (32 bytes …",0,null],[12,"tmp","","Do not load or store anything on disk.",0,null],[4,"CliChain","","",null,null],[13,"Polkadot","","",1,null],[13,"Kusama","","",1,null],[13,"Westend","","",1,null],[13,"Custom","","",1,null],[4,"ColorChoice","","",null,null],[13,"Always","","",2,null],[13,"Never","","",2,null],[3,"ColorChoiceParseError","","",null,null],[4,"Output","","",null,null],[13,"None","","",3,null],[13,"Informant","","",3,null],[13,"Logs","","",3,null],[13,"LogsJson","","",3,null],[3,"OutputParseError","","",null,null],[3,"NodeKey","","",null,null],[12,"0","","",4,null],[4,"NodeKeyParseError","","",null,null],[13,"BadLength","","",5,null],[13,"FromHex","","",5,null],[13,"BadKey","","",5,null],[0,"network_service","full_node","Background network service.",null,null],[0,"with_buffers","full_node::network_service","Augments an implementation of <code>AsyncRead</code> and <code>AsyncWrite</code> …",null,null],[3,"WithBuffers","full_node::network_service::with_buffers","Holds an implementation of <code>AsyncRead</code> and <code>AsyncWrite</code>, …",null,null],[12,"socket","","Actual socket to read from/write to.",6,null],[12,"error","","Error that has happened on the socket, if any.",6,null],[12,"read_buffer","","Storage for data read from the socket.",6,null],[12,"read_buffer_processed_cursor","","Offset in <code>read_buffer</code> of the buffer returned by […",6,null],[12,"socket_in_cursor_start","","Offset in <code>read_buffer</code> where the socket will put incoming …",6,null],[12,"read_closed","","True if reading from the socket has returned <code>Ok(0)</code> …",6,null],[12,"write_buffer","","Storage for data to write to the socket.",6,null],[12,"write_ready_start","","Offset in <code>write_buffer</code> of the data ready to be sent out …",6,null],[12,"write_ready_end","","Offset in <code>write_buffer</code> of the end of the data ready to be …",6,null],[12,"write_closed","","True if the user has called [<code>WithBuffers::close</code>] earlier.",6,null],[12,"close_pending","","True if the user has called [<code>WithBuffers::close</code>] earlier, …",6,null],[12,"flush_pending","","True if data has been written on the socket and the …",6,null],[11,"new","","Initializes a new [<code>WithBuffers</code>] with the given socket.",6,[[]]],[11,"buffers","","Returns a buffer containing data read from the socket, …",6,[[],[["result",4],["error",3]]]],[11,"advance","","Advances the cursors of the buffers.",6,[[]]],[11,"close","","Indicate that the writing side of the connection must be …",6,[[]]],[11,"is_closed","","True if [<code>WithBuffers::close</code>] has been called earlier.",6,[[]]],[11,"flush_close","","Wait until the socket has been properly closed.",6,[[["pin",3]]]],[11,"process","","Waits either for data to be received or for data to be …",6,[[["pin",3]]]],[3,"Config","full_node::network_service","Configuration for a [<code>NetworkService</code>].",null,null],[12,"tasks_executor","","Closure that spawns background tasks.",7,null],[12,"listen_addresses","","Addresses to listen for incoming connections.",7,null],[12,"chains","","List of block chains to be connected to.",7,null],[12,"noise_key","","Key used for the encryption layer. This is a Noise static …",7,null],[3,"ChainConfig","","Configuration for one chain.",null,null],[12,"bootstrap_nodes","","List of node identities and addresses that are known to …",8,null],[12,"genesis_block_hash","","Hash of the genesis block of the chain. Sent to other …",8,null],[12,"best_block","","Number and hash of the current best block. Can later be …",8,null],[12,"protocol_id","","Identifier of the chain to connect to.",8,null],[4,"Event","","Event generated by [<code>NetworkService::next_event</code>].",null,null],[13,"Connected","","",9,null],[12,"chain_index","full_node::network_service::Event","",10,null],[12,"peer_id","","",10,null],[12,"best_block_number","","",10,null],[13,"Disconnected","full_node::network_service","",9,null],[12,"chain_index","full_node::network_service::Event","",11,null],[12,"peer_id","","",11,null],[13,"BlockAnnounce","full_node::network_service","",9,null],[12,"chain_index","full_node::network_service::Event","",12,null],[12,"peer_id","","",12,null],[12,"announce","","",12,null],[3,"NetworkService","full_node::network_service","",null,null],[12,"guarded","","Fields behind a mutex.",13,null],[12,"network","","Data structure holding the entire state of the networking.",13,null],[3,"Guarded","","Fields of [<code>NetworkService</code>] behind a mutex.",null,null],[12,"tasks_executor","","See [<code>Config::tasks_executor</code>].",14,null],[11,"new","","Initializes the network service with the given …",13,[[["config",3]]]],[11,"num_established_connections","","Returns the number of established TCP connections, both …",13,[[]]],[11,"blocks_request","","Sends a blocks request to the given peer.",13,[[["peerid",3],["blocksrequestconfig",3],["arc",3]]]],[11,"next_event","","Returns the next event that happens in the network …",13,[[["arc",3]]]],[4,"InitError","","Error when initializing the network service.",null,null],[13,"ListenerIo","","I/O error when initializing a listener.",15,null],[13,"BadListenMultiaddr","","A listening address passed through the configuration …",15,null],[5,"connection_task","","Asynchronous task managing a specific TCP connection.",null,[[["arc",3],["networkservice",3],["pendingid",3]]]],[5,"multiaddr_to_socket","","Builds a future that connects to the given multiaddress. …",null,[[["multiaddr",3]],["result",4]]],[0,"sync_service","full_node","Background synchronization service.",null,null],[3,"Config","full_node::sync_service","Configuration for a [<code>SyncService</code>].",null,null],[12,"tasks_executor","","Closure that spawns background tasks.",16,null],[12,"database","","Database to use to read and write information about the …",16,null],[4,"Event","","Event generated by [<code>SyncService::next_event</code>].",null,null],[13,"BlocksRequest","","",17,null],[12,"id","full_node::sync_service::Event","",18,null],[12,"target","","",18,null],[12,"request","","",18,null],[3,"BlocksRequestId","full_node::sync_service","Identifier for a blocks request to be performed.",null,null],[12,"0","","",19,null],[3,"SyncState","","Summary of the state of the [<code>SyncService</code>].",null,null],[12,"best_block_number","","",20,null],[12,"best_block_hash","","",20,null],[12,"finalized_block_number","","",20,null],[12,"finalized_block_hash","","",20,null],[3,"SyncService","","Background task that verifies blocks and emits requests.",null,null],[12,"sync_state","","State kept up-to-date with the background task.",21,null],[12,"to_background","","Sender of messages towards the background task.",21,null],[12,"from_background","","Receiver of events sent by the background task.",21,null],[12,"blocks_requests","","For each emitted blocks request, an element is stored …",21,null],[11,"new","","Initializes the [<code>SyncService</code>] with the given …",21,[[["config",3]]]],[11,"sync_state","","Returns a summary of the state of the service.",21,[[]]],[11,"add_source","","Registers a new source for blocks.",21,[[["peerid",3]]]],[11,"remove_source","","Removes a source of blocks.",21,[[["peerid",3]]]],[11,"raise_source_best_block","","Updates the best known block of the source.",21,[[["peerid",3]]]],[11,"answer_blocks_request","","Sets the answer to a previously-emitted […",21,[[["result",4],["vec",3],["blocksrequestid",3]]]],[11,"next_event","","Returns the next event that happened in the sync service.",21,[[]]],[4,"ToBackground","","Message sent to the background task.",null,null],[13,"PeerConnected","","",22,null],[13,"PeerDisconnected","","",22,null],[13,"PeerRaiseBest","","",22,null],[12,"peer_id","full_node::sync_service::ToBackground","",23,null],[12,"best_block_number","","",23,null],[4,"FromBackground","full_node::sync_service","Messsage sent from the background task and dedicated to …",null,null],[13,"RequestStart","","A blocks request must be started.",24,null],[12,"target","full_node::sync_service::FromBackground","",25,null],[12,"request","","",25,null],[12,"send_back","","",25,null],[4,"ToDatabase","full_node::sync_service","",null,null],[13,"FinalizedBlocks","","",26,null],[5,"start_sync","","Returns the background task of the sync service.",null,[[["arc",3],["mutex",3],["sender",3],["frombackground",4],["tobackground",4],["receiver",3],["todatabase",4],["sender",3],["arc",3],["sledfulldatabase",3]]]],[5,"start_database_write","","Starts the task that writes blocks to the database.",null,[[["sledfulldatabase",3],["todatabase",4],["receiver",3],["arc",3]]]],[5,"main","full_node","",null,[[]]],[5,"async_main","","",null,[[]]],[5,"open_database","","Opens the database from the filesystem, or create a new …",null,[[["chaininformation",3],["chainspec",3]]]],[5,"background_open_database","","Since opening the database can take a long time, this …",null,[[["option",4],["pathbuf",3]]]],[11,"from","full_node::cli","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"into_any_arc","","",0,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",0,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",0,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",0,[[],["any",8]]],[11,"as_any_mut","","",0,[[],["any",8]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"into_any_arc","","",1,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",1,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",1,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",1,[[],["any",8]]],[11,"as_any_mut","","",1,[[],["any",8]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"init","","",2,[[]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",2,[[]]],[11,"drop","","",2,[[]]],[11,"into_any_arc","","",2,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",2,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",2,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",2,[[],["any",8]]],[11,"as_any_mut","","",2,[[],["any",8]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_string","","",27,[[],["string",3]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"vzip","","",27,[[]]],[11,"init","","",27,[[]]],[11,"deref","","",27,[[]]],[11,"deref_mut","","",27,[[]]],[11,"drop","","",27,[[]]],[11,"into_any_arc","","",27,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",27,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",27,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",27,[[],["any",8]]],[11,"as_any_mut","","",27,[[],["any",8]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"init","","",3,[[]]],[11,"deref","","",3,[[]]],[11,"deref_mut","","",3,[[]]],[11,"drop","","",3,[[]]],[11,"into_any_arc","","",3,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",3,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",3,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",3,[[],["any",8]]],[11,"as_any_mut","","",3,[[],["any",8]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_string","","",28,[[],["string",3]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"vzip","","",28,[[]]],[11,"init","","",28,[[]]],[11,"deref","","",28,[[]]],[11,"deref_mut","","",28,[[]]],[11,"drop","","",28,[[]]],[11,"into_any_arc","","",28,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",28,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",28,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",28,[[],["any",8]]],[11,"as_any_mut","","",28,[[],["any",8]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"init","","",4,[[]]],[11,"deref","","",4,[[]]],[11,"deref_mut","","",4,[[]]],[11,"drop","","",4,[[]]],[11,"into_any_arc","","",4,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",4,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",4,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",4,[[],["any",8]]],[11,"as_any_mut","","",4,[[],["any",8]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"init","","",5,[[]]],[11,"deref","","",5,[[]]],[11,"deref_mut","","",5,[[]]],[11,"drop","","",5,[[]]],[11,"into_any_arc","","",5,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",5,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",5,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",5,[[],["any",8]]],[11,"as_any_mut","","",5,[[],["any",8]]],[11,"from","full_node::network_service::with_buffers","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"init","","",6,[[]]],[11,"deref","","",6,[[]]],[11,"deref_mut","","",6,[[]]],[11,"drop","","",6,[[]]],[11,"into_any_arc","","",6,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",6,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",6,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",6,[[],["any",8]]],[11,"as_any_mut","","",6,[[],["any",8]]],[11,"from","full_node::network_service","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"init","","",7,[[]]],[11,"deref","","",7,[[]]],[11,"deref_mut","","",7,[[]]],[11,"drop","","",7,[[]]],[11,"into_any","","",7,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",7,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",7,[[],["any",8]]],[11,"as_any_mut","","",7,[[],["any",8]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"init","","",8,[[]]],[11,"deref","","",8,[[]]],[11,"deref_mut","","",8,[[]]],[11,"drop","","",8,[[]]],[11,"into_any_arc","","",8,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",8,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",8,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",8,[[],["any",8]]],[11,"as_any_mut","","",8,[[],["any",8]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"init","","",9,[[]]],[11,"deref","","",9,[[]]],[11,"deref_mut","","",9,[[]]],[11,"drop","","",9,[[]]],[11,"into_any_arc","","",9,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",9,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",9,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",9,[[],["any",8]]],[11,"as_any_mut","","",9,[[],["any",8]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"vzip","","",13,[[]]],[11,"init","","",13,[[]]],[11,"deref","","",13,[[]]],[11,"deref_mut","","",13,[[]]],[11,"drop","","",13,[[]]],[11,"into_any_arc","","",13,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",13,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",13,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",13,[[],["any",8]]],[11,"as_any_mut","","",13,[[],["any",8]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"vzip","","",14,[[]]],[11,"init","","",14,[[]]],[11,"deref","","",14,[[]]],[11,"deref_mut","","",14,[[]]],[11,"drop","","",14,[[]]],[11,"into_any","","",14,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",14,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",14,[[],["any",8]]],[11,"as_any_mut","","",14,[[],["any",8]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_string","","",15,[[],["string",3]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"vzip","","",15,[[]]],[11,"init","","",15,[[]]],[11,"deref","","",15,[[]]],[11,"deref_mut","","",15,[[]]],[11,"drop","","",15,[[]]],[11,"into_any_arc","","",15,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",15,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",15,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",15,[[],["any",8]]],[11,"as_any_mut","","",15,[[],["any",8]]],[11,"from","full_node::sync_service","",16,[[]]],[11,"into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"vzip","","",16,[[]]],[11,"init","","",16,[[]]],[11,"deref","","",16,[[]]],[11,"deref_mut","","",16,[[]]],[11,"drop","","",16,[[]]],[11,"into_any","","",16,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",16,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",16,[[],["any",8]]],[11,"as_any_mut","","",16,[[],["any",8]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"vzip","","",17,[[]]],[11,"init","","",17,[[]]],[11,"deref","","",17,[[]]],[11,"deref_mut","","",17,[[]]],[11,"drop","","",17,[[]]],[11,"into_any_arc","","",17,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",17,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",17,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",17,[[],["any",8]]],[11,"as_any_mut","","",17,[[],["any",8]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"get_hash","","",19,[[]]],[11,"vzip","","",19,[[]]],[11,"init","","",19,[[]]],[11,"deref","","",19,[[]]],[11,"deref_mut","","",19,[[]]],[11,"drop","","",19,[[]]],[11,"into_any_arc","","",19,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",19,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",19,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",19,[[],["any",8]]],[11,"as_any_mut","","",19,[[],["any",8]]],[11,"get_hash","","",19,[[]]],[11,"equivalent","","",19,[[]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"vzip","","",20,[[]]],[11,"init","","",20,[[]]],[11,"deref","","",20,[[]]],[11,"deref_mut","","",20,[[]]],[11,"drop","","",20,[[]]],[11,"into_any_arc","","",20,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",20,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",20,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",20,[[],["any",8]]],[11,"as_any_mut","","",20,[[],["any",8]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"vzip","","",21,[[]]],[11,"init","","",21,[[]]],[11,"deref","","",21,[[]]],[11,"deref_mut","","",21,[[]]],[11,"drop","","",21,[[]]],[11,"into_any_arc","","",21,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",21,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",21,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",21,[[],["any",8]]],[11,"as_any_mut","","",21,[[],["any",8]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"vzip","","",22,[[]]],[11,"init","","",22,[[]]],[11,"deref","","",22,[[]]],[11,"deref_mut","","",22,[[]]],[11,"drop","","",22,[[]]],[11,"into_any_arc","","",22,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",22,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",22,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",22,[[],["any",8]]],[11,"as_any_mut","","",22,[[],["any",8]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"vzip","","",24,[[]]],[11,"init","","",24,[[]]],[11,"deref","","",24,[[]]],[11,"deref_mut","","",24,[[]]],[11,"drop","","",24,[[]]],[11,"into_any_arc","","",24,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",24,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",24,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",24,[[],["any",8]]],[11,"as_any_mut","","",24,[[],["any",8]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"vzip","","",26,[[]]],[11,"init","","",26,[[]]],[11,"deref","","",26,[[]]],[11,"deref_mut","","",26,[[]]],[11,"drop","","",26,[[]]],[11,"into_any_arc","","",26,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",26,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",26,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",26,[[],["any",8]]],[11,"as_any_mut","","",26,[[],["any",8]]],[11,"as_ref","full_node::cli","",4,[[]]],[11,"clone","full_node::sync_service","",19,[[],["blocksrequestid",3]]],[11,"clone","","",20,[[],["syncstate",3]]],[11,"cmp","","",19,[[["blocksrequestid",3]],["ordering",4]]],[11,"eq","","",19,[[["blocksrequestid",3]]]],[11,"ne","","",19,[[["blocksrequestid",3]]]],[11,"partial_cmp","","",19,[[["blocksrequestid",3]],[["option",4],["ordering",4]]]],[11,"lt","","",19,[[["blocksrequestid",3]]]],[11,"le","","",19,[[["blocksrequestid",3]]]],[11,"gt","","",19,[[["blocksrequestid",3]]]],[11,"ge","","",19,[[["blocksrequestid",3]]]],[11,"fmt","full_node::cli","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","full_node::network_service::with_buffers","",6,[[["formatter",3]],["result",6]]],[11,"fmt","full_node::network_service","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","full_node::sync_service","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","full_node::cli","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","full_node::network_service","",15,[[["formatter",3]],["result",6]]],[11,"hash","full_node::sync_service","",19,[[]]],[11,"from_str","full_node::cli","",1,[[],["result",4]]],[11,"from_str","","",2,[[],["result",4]]],[11,"from_str","","",3,[[],["result",4]]],[11,"from_str","","",4,[[],["result",4]]],[11,"clap","","",0,[[],["app",3]]],[11,"from_clap","","",0,[[["argmatches",3]]]],[11,"augment_clap","","",0,[[["app",3]],["app",3]]],[11,"is_subcommand","","",0,[[]]]],"p":[[3,"CliOptions"],[4,"CliChain"],[4,"ColorChoice"],[4,"Output"],[3,"NodeKey"],[4,"NodeKeyParseError"],[3,"WithBuffers"],[3,"Config"],[3,"ChainConfig"],[4,"Event"],[13,"Connected"],[13,"Disconnected"],[13,"BlockAnnounce"],[3,"NetworkService"],[3,"Guarded"],[4,"InitError"],[3,"Config"],[4,"Event"],[13,"BlocksRequest"],[3,"BlocksRequestId"],[3,"SyncState"],[3,"SyncService"],[4,"ToBackground"],[13,"PeerRaiseBest"],[4,"FromBackground"],[13,"RequestStart"],[4,"ToDatabase"],[3,"ColorChoiceParseError"],[3,"OutputParseError"]]},\
"smoldot":{"doc":"Client for Polkadot and Substrate-compatible chains.","i":[[0,"author","smoldot","",null,null],[0,"aura","smoldot::author","",null,null],[3,"Config","smoldot::author::aura","Configuration for [<code>next_slot_claim</code>].",null,null],[12,"now_from_unix_epoch","","Time elapsed since the Unix Epoch (i.e. 00:00:00 UTC on 1 …",0,null],[12,"slot_duration","","Duration, in milliseconds, of an Aura slot.",0,null],[12,"current_authorities","","List of the Aura authorities allowed to produce a block. …",0,null],[12,"local_authorities","","Iterator to the list of sr25519 public keys available …",0,null],[5,"next_slot_claim","","Calculates the earliest one of the authorities in […",null,[[["config",3]],[["option",4],["slotclaim",3]]]],[3,"SlotClaim","","Slot happening now or in the future and that can be …",null,null],[12,"slot_start_from_unix_epoch","","UNIX time when the slot starts. Can be inferior to the …",1,null],[12,"slot_end_from_unix_epoch","","UNIX time when the slot ends. Always inferior to the …",1,null],[12,"slot_number","","Slot number of the claim. Used when building the block.",1,null],[12,"local_authorities_index","","Index within [<code>Config::local_authorities</code>] of the authority …",1,null],[0,"build","smoldot::author","",null,null],[3,"Config","smoldot::author::build","Configuration for a block generation.",null,null],[12,"consensus","","Consensus-specific configuration.",2,null],[4,"ConfigConsensus","","Extension to [<code>Config</code>].",null,null],[13,"Aura","","Chain is using the Aura consensus algorithm.",3,null],[12,"now_from_unix_epoch","smoldot::author::build::ConfigConsensus","Time elapsed since the Unix Epoch (i.e. 00:00:00 UTC on 1 …",4,null],[12,"slot_duration","","Duration, in milliseconds, of an Aura slot.",4,null],[12,"current_authorities","","List of the Aura authorities allowed to produce a block. …",4,null],[12,"local_authorities","","Iterator to the list of sr25519 public keys available …",4,null],[4,"Builder","smoldot::author::build","Current state of the block building process.",null,null],[13,"Idle","","None of the authorities available locally are allowed to …",5,null],[13,"WaitSlot","","Block production is idle, waiting for a slot.",5,null],[13,"Ready","","Block production is ready to start.",5,null],[13,"Authoring","","Currently authoring a block.",5,null],[11,"new","","Initializes a new builder.",5,[[["config",3]]]],[4,"BuilderAuthoring","","Current state of the block building process.",null,null],[13,"Error","","Error happened during the generation.",6,null],[13,"ApplyExtrinsic","","Block building is ready to accept extrinsics.",6,null],[13,"ApplyExtrinsicResult","","Result of the previous call to […",6,null],[12,"result","smoldot::author::build::BuilderAuthoring","Result of the previous call to […",7,null],[12,"resume","","Object to use to continue trying to push other …",7,null],[13,"StorageGet","smoldot::author::build","Loading a storage value from the parent storage is …",6,null],[13,"PrefixKeys","","Fetching the list of keys with a given prefix from the …",6,null],[13,"NextKey","","Fetching the key that follows a given one in the parent …",6,null],[13,"Seal","","Block has been produced by the runtime and must now be …",6,null],[3,"WaitSlot","","Block production is idle, waiting for a slot.",null,null],[11,"when","","Returns when block production can begin, as a UNIX …",8,[[],["duration",3]]],[11,"start","","Start the block production.",8,[[],["authoringstart",3]]],[3,"AuthoringStart","","Ready to start producing blocks.",null,null],[11,"start","","Start producing the block.",9,[[["authoringstartconfig",3]],["builderauthoring",4]]],[3,"AuthoringStartConfig","","Configuration to pass when the actual block authoring is …",null,null],[12,"parent_hash","","Hash of the parent of the block to generate.",10,null],[12,"parent_number","","Height of the parent of the block to generate.",10,null],[12,"now_from_unix_epoch","","Time elapsed since the Unix Epoch (i.e. 00:00:00 UTC on 1 …",10,null],[12,"parent_runtime","","Runtime used to check the new block. Must be built using …",10,null],[12,"top_trie_root_calculation_cache","","Optional cache corresponding to the storage trie root …",10,null],[3,"ApplyExtrinsic","","More transactions can be added.",null,null],[11,"add_extrinsic","","Adds a SCALE-encoded extrinsic and resumes execution.",11,[[["vec",3]],["builderauthoring",4]]],[11,"finish","","Indicate that no more extrinsics will be added, and …",11,[[],["builderauthoring",4]]],[3,"StorageGet","","Loading a storage value from the parent storage is …",null,null],[11,"key","","Returns the key whose value must be passed to […",12,[[]]],[11,"key_as_vec","","Returns the key whose value must be passed to […",12,[[],["vec",3]]],[11,"inject_value","","Injects the corresponding storage value.",12,[[["option",4]],["builderauthoring",4]]],[3,"PrefixKeys","","Fetching the list of keys with a given prefix from the …",null,null],[11,"prefix","","Returns the prefix whose keys to load.",13,[[]]],[11,"inject_keys","","Injects the list of keys.",13,[[],["builderauthoring",4]]],[3,"NextKey","","Fetching the key that follows a given one in the parent …",null,null],[11,"key","","Returns the key whose next key must be passed back.",14,[[]]],[11,"inject_key","","Injects the key.",14,[[["option",4]],["builderauthoring",4]]],[3,"Seal","","Block has been produced and must now be sealed.",null,null],[11,"scale_encoded_header","","Returns the SCALE-encoded header that must be signed.",15,[[]]],[11,"authority_index","","Returns the index within the list of authorities of the …",15,[[]]],[11,"inject_sr25519_signature","","Injects the sr25519 signature of the SCALE-encoded header …",15,[[],["success",3]]],[4,"Error","","Error that can happen during the block production.",null,null],[13,"Runtime","","Error while producing the block in the runtime.",16,null],[13,"InvalidHeaderGenerated","","Runtime has generated an invalid block header.",16,null],[0,"runtime","smoldot::author","Block generation system.",null,null],[3,"Config","smoldot::author::runtime","Configuration for a block generation.",null,null],[12,"parent_hash","","Hash of the parent of the block to generate.",17,null],[12,"parent_number","","Height of the parent of the block to generate.",17,null],[12,"parent_runtime","","Runtime used to check the new block. Must be built using …",17,null],[12,"consensus_digest_log_item","","Consensus-specific item to put in the digest of the …",17,null],[12,"top_trie_root_calculation_cache","","Optional cache corresponding to the storage trie root …",17,null],[4,"ConfigPreRuntime","","Extra configuration depending on the consensus algorithm.",null,null],[13,"Aura","","Chain uses the Aura consensus algorithm.",18,null],[13,"Babe","","Chain uses the Babe consensus algorithm.",18,null],[3,"Success","","Block successfully verified.",null,null],[12,"scale_encoded_header","","SCALE-encoded header of the produced block.",19,null],[12,"body","","Body of the produced block.",19,null],[12,"parent_runtime","","Runtime that was passed by [<code>Config</code>].",19,null],[12,"storage_top_trie_changes","","List of changes to the storage top trie that the block …",19,null],[12,"offchain_storage_changes","","List of changes to the offchain storage that this block …",19,null],[12,"top_trie_root_calculation_cache","","Cache used for calculating the top trie root of the new …",19,null],[12,"logs","","Concatenation of all the log messages printed by the …",19,null],[4,"Error","","Error that can happen during the block production.",null,null],[13,"WasmVm","","Error while executing the Wasm virtual machine.",20,null],[13,"VmInit","","Error while initializing the Wasm virtual machine.",20,null],[13,"BlockHeightOverflow","","Overflow when incrementing block height.",20,null],[13,"InitializeBlockNonEmptyOutput","","<code>Core_initialize_block</code> has returned a non-empty output.",20,null],[13,"BadInherentExtrinsicsOutput","","Error while parsing output of …",20,null],[13,"BadApplyExtrinsicOutput","","Error while parsing output of <code>BlockBuilder_apply_extrinsic</code>…",20,null],[13,"InherentExtrinsicDispatchError","","Applying an inherent extrinsic has returned a […",20,null],[12,"extrinsic","smoldot::author::runtime::Error","Extrinsic that triggered the problem.",21,null],[12,"error","","Error returned by the runtime.",21,null],[13,"InherentExtrinsicTransactionValidityError","smoldot::author::runtime","Applying an inherent extrinsic has returned a […",20,null],[12,"extrinsic","smoldot::author::runtime::Error","Extrinsic that triggered the problem.",22,null],[12,"error","","Error returned by the runtime.",22,null],[5,"build_block","smoldot::author::runtime","Start a block building process.",null,[[["config",3]],["blockbuild",4]]],[4,"BlockBuild","","Current state of the block building process.",null,null],[13,"Finished","","Block generation is over.",23,null],[13,"InherentExtrinsics","","The inherent extrinsics are required in order to continue.",23,null],[13,"ApplyExtrinsic","","Block building is ready to accept extrinsics.",23,null],[13,"ApplyExtrinsicResult","","Result of the previous call to […",23,null],[12,"result","smoldot::author::runtime::BlockBuild","Result of the previous call to […",24,null],[12,"resume","","Object to use to continue trying to push other …",24,null],[13,"StorageGet","smoldot::author::runtime","Loading a storage value from the parent storage is …",23,null],[13,"PrefixKeys","","Fetching the list of keys with a given prefix from the …",23,null],[13,"NextKey","","Fetching the key that follows a given one in the parent …",23,null],[3,"InherentExtrinsics","","The list of inherent extrinsics are needed in order to …",null,null],[11,"inject_inherents","","Injects the inherents extrinsics and resumes execution.",25,[[["inherentdata",3]],["blockbuild",4]]],[11,"inject_raw_inherents_list","","Injects a raw list of inherents and resumes execution.",25,[[],["blockbuild",4]]],[3,"InherentData","","Values of the inherents to pass to the runtime.",null,null],[12,"timestamp","","Number of milliseconds since the UNIX epoch when the …",26,null],[12,"consensus","","Consensus-specific fields.",26,null],[4,"InherentDataConsensus","","Extra consensus-specific items in [<code>InherentData</code>].",null,null],[13,"Aura","","Aura-specific items.",27,null],[12,"slot_number","smoldot::author::runtime::InherentDataConsensus","Number of the Aura slot being claimed to generate this …",28,null],[13,"Babe","smoldot::author::runtime","Babe-specific items.",27,null],[12,"slot_number","smoldot::author::runtime::InherentDataConsensus","Number of the Babe slot being claimed to generate this …",29,null],[3,"ApplyExtrinsic","smoldot::author::runtime","More transactions can be added.",null,null],[11,"add_extrinsic","","Adds a SCALE-encoded extrinsic and resumes execution.",30,[[["vec",3]],["blockbuild",4]]],[11,"finish","","Indicate that no more extrinsics will be added, and …",30,[[],["blockbuild",4]]],[3,"StorageGet","","Loading a storage value from the parent storage is …",null,null],[11,"key","","Returns the key whose value must be passed to […",31,[[]]],[11,"key_as_vec","","Returns the key whose value must be passed to […",31,[[],["vec",3]]],[11,"inject_value","","Injects the corresponding storage value.",31,[[["option",4]],["blockbuild",4]]],[3,"PrefixKeys","","Fetching the list of keys with a given prefix from the …",null,null],[11,"prefix","","Returns the prefix whose keys to load.",32,[[]]],[11,"inject_keys","","Injects the list of keys.",32,[[],["blockbuild",4]]],[3,"NextKey","","Fetching the key that follows a given one in the parent …",null,null],[11,"key","","Returns the key whose next key must be passed back.",33,[[]]],[11,"inject_key","","Injects the key.",33,[[["option",4]],["blockbuild",4]]],[4,"TransactionValidityError","","Errors that can occur while checking the validity of a …",null,null],[13,"Invalid","","The transaction is invalid.",34,null],[13,"Unknown","","Transaction validity can\'t be determined.",34,null],[4,"InvalidTransaction","","An invalid transaction validity.",null,null],[13,"Call","","The call of the transaction is not expected.",35,null],[13,"Payment","","General error to do with the inability to pay some fees …",35,null],[13,"Future","","General error to do with the transaction not yet being …",35,null],[13,"Stale","","General error to do with the transaction being outdated …",35,null],[13,"BadProof","","General error to do with the transaction\'s proofs (e.g. …",35,null],[13,"AncientBirthBlock","","The transaction birth block is ancient.",35,null],[13,"ExhaustsResources","","The transaction would exhaust the resources of current …",35,null],[13,"Custom","","Any other custom invalid validity that is not covered by …",35,null],[13,"BadMandatory","","An extrinsic with a Mandatory dispatch resulted in Error. …",35,null],[13,"MandatoryDispatch","","A transaction with a mandatory dispatch. This is invalid; …",35,null],[4,"UnknownTransaction","","An unknown transaction validity.",null,null],[13,"CannotLookup","","Could not lookup some information that is required to …",36,null],[13,"NoUnsignedValidator","","No validator found for the given unsigned transaction.",36,null],[13,"Custom","","Any other custom unknown validity that is not covered by …",36,null],[4,"DispatchError","","Reason why a dispatch call failed.",null,null],[13,"CannotLookup","","Failed to lookup some data.",37,null],[13,"BadOrigin","","A bad origin.",37,null],[13,"Module","","A custom error in a module.",37,null],[12,"index","smoldot::author::runtime::DispatchError","Module index, matching the metadata module index.",38,null],[12,"error","","Module specific error value.",38,null],[0,"chain","smoldot","Data structures describing a chain of blocks.",null,null],[0,"blocks_tree","smoldot::chain","Finalized block header, plus tree of authenticated …",null,null],[3,"JustificationApply","smoldot::chain::blocks_tree","Returned by [<code>NonFinalizedTree::verify_justification</code>] on …",null,null],[4,"JustificationVerifyError","","Error that can happen when verifying a justification.",null,null],[13,"AlgorithmHasNoJustification","","Finality mechanism used by the chain doesn\'t use …",39,null],[13,"InvalidJustification","","Error while decoding the justification.",39,null],[13,"UnknownTargetBlock","","Justification targets a block that isn\'t in the chain.",39,null],[12,"block_number","smoldot::chain::blocks_tree::JustificationVerifyError","Number of the block that isn\'t in the chain.",40,null],[12,"block_hash","","Hash of the block that isn\'t in the chain.",40,null],[13,"TooFarAhead","smoldot::chain::blocks_tree","There exists a block in-between the latest finalized …",39,null],[12,"justification_block_number","smoldot::chain::blocks_tree::JustificationVerifyError","Number of the block contained in the justification.",41,null],[12,"justification_block_hash","","Hash of the block contained in the justification.",41,null],[12,"block_to_finalize_number","","Number of the block to finalize first.",41,null],[12,"block_to_finalize_hash","","Hash of the block to finalize first.",41,null],[13,"VerificationFailed","smoldot::chain::blocks_tree","The justification verification has failed. The …",39,null],[3,"SetFinalizedBlockIter","","Iterator producing the newly-finalized blocks removed …",null,null],[4,"SetFinalizedError","","Error that can happen when setting the finalized block.",null,null],[13,"UnknownBlock","","Block must have been passed to […",42,null],[4,"BodyVerifyStep1","","Block verification, either just finished or still in …",null,null],[13,"Duplicate","","Block is already known.",43,null],[13,"InvalidHeader","","Error while decoding the header.",43,null],[13,"BadParent","","The parent of the block isn\'t known.",43,null],[12,"chain","smoldot::chain::blocks_tree::BodyVerifyStep1","",44,null],[12,"parent_hash","","Hash of the parent block in question.",44,null],[13,"ParentRuntimeRequired","smoldot::chain::blocks_tree","Verification is pending. In order to continue, a […",43,null],[3,"BodyVerifyRuntimeRequired","","Verification is pending. In order to continue, a […",null,null],[4,"BodyVerifyStep2","","Block verification, either just finished or still in …",null,null],[13,"Finished","","Verification is over.",45,null],[12,"parent_runtime","smoldot::chain::blocks_tree::BodyVerifyStep2","Value that was passed to […",46,null],[12,"new_runtime","","Contains <code>Some</code> if and only if […",46,null],[12,"storage_top_trie_changes","","List of changes to the storage top trie that the block …",46,null],[12,"offchain_storage_changes","","List of changes to the offchain storage that this block …",46,null],[12,"top_trie_root_calculation_cache","","Cache of calculation for the storage trie of the best …",46,null],[12,"insert","","Use to insert the block in the chain.",46,null],[13,"Error","smoldot::chain::blocks_tree","Verification has failed. The block is invalid.",45,null],[12,"chain","smoldot::chain::blocks_tree::BodyVerifyStep2","Chain yielded back.",47,null],[12,"error","","Error that happened during the verification.",47,null],[13,"StorageGet","smoldot::chain::blocks_tree","Loading a storage value is required in order to continue.",45,null],[13,"StoragePrefixKeys","","Fetching the list of keys with a given prefix is required …",45,null],[13,"StorageNextKey","","Fetching the key that follows a given one is required in …",45,null],[13,"RuntimeCompilation","","A new runtime must be compiled.",45,null],[3,"StorageGet","","Loading a storage value is required in order to continue.",null,null],[3,"StoragePrefixKeys","","Fetching the list of keys with a given prefix is required …",null,null],[3,"StorageNextKey","","Fetching the key that follows a given one is required in …",null,null],[3,"RuntimeCompilation","","A new runtime must be compiled.",null,null],[4,"HeaderVerifySuccess","","",null,null],[13,"Duplicate","","Block is already known.",48,null],[13,"Insert","","Block wasn\'t known and is ready to be inserted.",48,null],[12,"block_height","smoldot::chain::blocks_tree::HeaderVerifySuccess","Height of the verified block.",49,null],[12,"is_new_best","","True if the verified block will become the new \\\"best\\\" …",49,null],[12,"insert","","Use this struct to insert the block in the chain after …",49,null],[3,"HeaderInsert","smoldot::chain::blocks_tree","Mutably borrows the [<code>NonFinalizedTree</code>] and allows insert …",null,null],[4,"HeaderVerifyError","","Error that can happen when verifying a block header.",null,null],[13,"InvalidHeader","","Error while decoding the header.",50,null],[13,"BadParent","","The parent of the block isn\'t known.",50,null],[12,"parent_hash","smoldot::chain::blocks_tree::HeaderVerifyError","Hash of the parent block in question.",51,null],[13,"VerificationFailed","smoldot::chain::blocks_tree","The block verification has failed. The block is invalid …",50,null],[3,"BodyInsert","","Holds the [<code>NonFinalizedTree</code>] and allows insert a …",null,null],[3,"Config","","Configuration for the [<code>NonFinalizedTree</code>].",null,null],[12,"chain_information","","Information about the latest finalized block and its …",52,null],[12,"blocks_capacity","","Pre-allocated size of the chain, in number of …",52,null],[3,"NonFinalizedTree","","Holds state about the current state of the chain for the …",null,null],[11,"new","","Initializes a new queue.",53,[[["config",3]]]],[11,"clear","","Removes all non-finalized blocks from the tree.",53,[[]]],[11,"is_empty","","Returns true if there isn\'t any non-finalized block in …",53,[[]]],[11,"len","","Returns the number of non-finalized blocks in the chain.",53,[[]]],[11,"reserve","","Reserves additional capacity for at least <code>additional</code> new …",53,[[]]],[11,"shrink_to_fit","","Shrink the capacity of the chain as much as possible.",53,[[]]],[11,"as_chain_information","","Builds a [<code>chain_information::ChainInformationRef</code>] struct …",53,[[],["chaininformationref",3]]],[11,"finalized_block_header","","Returns the header of the latest finalized block.",53,[[],["headerref",3]]],[11,"finalized_block_hash","","Returns the hash of the latest finalized block.",53,[[]]],[11,"best_block_header","","Returns the header of the best block.",53,[[],["headerref",3]]],[11,"best_block_hash","","Returns the hash of the best block.",53,[[]]],[3,"BlockAccess","","Access to a block\'s information and hierarchy.",null,null],[11,"parent_block","","Access to the parent block\'s information and hierarchy. …",54,[[],[["blockaccess",3],["result",4]]]],[11,"into_user_data","","",54,[[]]],[11,"user_data_mut","","",54,[[]]],[0,"chain_information","smoldot::chain","Data structures containing the finalized state of the …",null,null],[0,"aura_config","smoldot::chain::chain_information","",null,null],[3,"AuraGenesisConfiguration","smoldot::chain::chain_information::aura_config","Aura configuration of a chain, as extracted from the …",null,null],[12,"authorities_list","","List of authorities that can validate block #1.",55,null],[12,"slot_duration","","Duration, in milliseconds, of a slot.",55,null],[11,"from_genesis_storage","","Retrieves the configuration from the storage of the …",55,[[],[["result",4],["fromgenesisstorageerror",4]]]],[11,"from_virtual_machine_prototype","","Retrieves the configuration from the given virtual …",55,[[["hostvmprototype",3]],[["fromvmprototypeerror",4],["result",4]]]],[4,"FromGenesisStorageError","","Error when retrieving the Aura configuration.",null,null],[13,"RuntimeNotFound","","Runtime couldn\'t be found in the genesis storage.",56,null],[13,"HeapPagesNotFound","","Number of heap pages couldn\'t be found in the genesis …",56,null],[13,"HeapPagesDecode","","Failed to decode heap pages from the genesis storage.",56,null],[13,"VmInitialization","","Error when initializing the virtual machine.",56,null],[13,"VmError","","Error while executing the runtime.",56,null],[11,"is_function_not_found","","Returns <code>true</code> if this error is about an invalid function.",56,[[]]],[4,"FromVmPrototypeError","","Error when retrieving the Aura configuration.",null,null],[13,"VmStart","","Error when starting the virtual machine.",57,null],[13,"Trapped","","Crash while running the virtual machine.",57,null],[13,"HostFunctionNotAllowed","","Virtual machine tried to call a host function that isn\'t …",57,null],[13,"BadSlotDuration","","Error while decoding the output of the virtual machine …",57,null],[13,"AuthoritiesListDecodeError","","Failed to decode the list of authorities returned by …",57,null],[11,"is_function_not_found","","Returns <code>true</code> if this error is about an invalid function.",57,[[]]],[0,"babe_config","smoldot::chain::chain_information","",null,null],[3,"BabeGenesisConfiguration","smoldot::chain::chain_information::babe_config","BABE configuration of a chain, as extracted from the …",null,null],[12,"slots_per_epoch","","",58,null],[12,"epoch0_configuration","","",58,null],[12,"epoch0_information","","",58,null],[11,"from_genesis_storage","","Retrieves the configuration from the storage of the …",58,[[],[["fromgenesisstorageerror",4],["result",4]]]],[11,"from_virtual_machine_prototype","","Retrieves the configuration from the given virtual …",58,[[["hostvmprototype",3]],[["result",4],["fromvmprototypeerror",4]]]],[4,"FromGenesisStorageError","","Error when retrieving the BABE configuration.",null,null],[13,"RuntimeNotFound","","Runtime couldn\'t be found in the genesis storage.",59,null],[13,"HeapPagesNotFound","","Number of heap pages couldn\'t be found in the genesis …",59,null],[13,"HeapPagesDecode","","Failed to decode heap pages from the genesis storage.",59,null],[13,"VmInitialization","","Error when initializing the virtual machine.",59,null],[13,"VmError","","Error while executing the runtime.",59,null],[11,"is_function_not_found","","Returns <code>true</code> if this error is about an invalid function.",59,[[]]],[4,"FromVmPrototypeError","","Error when retrieving the BABE configuration.",null,null],[13,"VmStart","","Error when starting the virtual machine.",60,null],[13,"Trapped","","Crash while running the virtual machine.",60,null],[13,"HostFunctionNotAllowed","","Virtual machine tried to call a host function that isn\'t …",60,null],[13,"OutputDecode","","Error while decoding the output of the virtual machine.",60,null],[11,"is_function_not_found","","Returns <code>true</code> if this error is about an invalid function.",60,[[]]],[0,"babe_fetch_epoch","smoldot::chain::chain_information","",null,null],[4,"BabeEpochToFetch","smoldot::chain::chain_information::babe_fetch_epoch","The Babe epoch to fetch.",null,null],[13,"CurrentEpoch","","Fetch the current epoch using <code>BabeApi_current_epoch</code>.",61,null],[13,"NextEpoch","","Fetch the next epoch using <code>BabeApi_next_epoch</code>.",61,null],[3,"Config","","Configuration for [<code>babe_fetch_epoch</code>].",null,null],[12,"runtime","","Runtime used to get the Babe epoch. Must be built using …",62,null],[12,"epoch_to_fetch","","The Babe epoch to fetch.",62,null],[4,"Error","","Problem encountered during a call to [<code>babe_fetch_epoch</code>].",null,null],[13,"WasmStart","","Error while starting the Wasm virtual machine.",63,null],[13,"WasmVm","","Error while running the Wasm virtual machine.",63,null],[13,"DecodeFailed","","Error while decoding the babe epoch.",63,null],[5,"babe_fetch_epoch","","Fetches a Babe epoch using <code>BabeApi_current_epoch</code> or …",null,[[["config",3]],["query",4]]],[4,"Query","","Current state of the operation.",null,null],[13,"Finished","","Fetching the Babe epoch is over.",64,null],[13,"StorageGet","","Loading a storage value is required in order to continue.",64,null],[13,"NextKey","","Fetching the key that follows a given one is required in …",64,null],[3,"StorageGet","","Loading a storage value is required in order to continue.",null,null],[11,"key","","Returns the key whose value must be passed to […",65,[[]]],[11,"key_as_vec","","Returns the key whose value must be passed to […",65,[[],["vec",3]]],[11,"inject_value","","Injects the corresponding storage value.",65,[[["option",4]],["query",4]]],[3,"NextKey","","Fetching the key that follows a given one is required in …",null,null],[11,"key","","Returns the key whose next key must be passed back.",66,[[]]],[11,"inject_key","","Injects the key.",66,[[["option",4]],["query",4]]],[3,"ChainInformation","smoldot::chain::chain_information","Information about the latest finalized block and state …",null,null],[12,"finalized_block_header","","Header of the highest known finalized block.",67,null],[12,"consensus","","Extra items that depend on the consensus engine.",67,null],[12,"finality","","Extra items that depend on the finality engine.",67,null],[11,"from_genesis_storage","","Builds the [<code>ChainInformation</code>] corresponding to the …",67,[[],[["fromgenesisstorageerror",4],["result",4]]]],[4,"ChainInformationConsensus","","Extra items that depend on the consensus engine.",null,null],[13,"AllAuthorized","","Any node on the chain is allowed to produce blocks.",68,null],[13,"Aura","","Chain is using the Aura consensus engine.",68,null],[12,"finalized_authorities_list","smoldot::chain::chain_information::ChainInformationConsensus","List of authorities that must validate children of the …",69,null],[12,"slot_duration","","Duration, in milliseconds, of an Aura slot.",69,null],[13,"Babe","smoldot::chain::chain_information","Chain is using the Babe consensus engine.",68,null],[12,"slots_per_epoch","smoldot::chain::chain_information::ChainInformationConsensus","Number of slots per epoch. Configured at the genesis …",70,null],[12,"finalized_block_epoch_information","","Babe epoch information about the epoch the finalized …",70,null],[12,"finalized_next_epoch_transition","","Babe epoch information about the epoch right after the …",70,null],[3,"BabeEpochInformation","smoldot::chain::chain_information","Information about a Babe epoch.",null,null],[12,"epoch_index","","Index of the epoch.",71,null],[12,"start_slot_number","","Slot at which the epoch starts.",71,null],[12,"authorities","","List of authorities allowed to author blocks during this …",71,null],[12,"randomness","","Randomness value for this epoch.",71,null],[12,"c","","Value of the constant that allows determining the chances …",71,null],[12,"allowed_slots","","Types of blocks allowed for this epoch.",71,null],[4,"ChainInformationFinality","","Extra items that depend on the finality engine.",null,null],[13,"Outsourced","","Blocks themselves don\'t contain any information …",72,null],[13,"Grandpa","","Chain uses the Grandpa finality algorithm.",72,null],[12,"after_finalized_block_authorities_set_id","smoldot::chain::chain_information::ChainInformationFinality","Grandpa authorities set ID of the block right after …",73,null],[12,"finalized_triggered_authorities","","List of GrandPa authorities that need to finalize the …",73,null],[12,"finalized_scheduled_change","","Change in the GrandPa authorities list that has been …",73,null],[4,"FromGenesisStorageError","smoldot::chain::chain_information","Error when building the chain information from the …",null,null],[13,"GrandpaConfigLoad","","Error when retrieving the GrandPa configuration.",74,null],[13,"AuraConfigLoad","","Error when retrieving the Aura algorithm configuration.",74,null],[13,"BabeConfigLoad","","Error when retrieving the Babe algorithm configuration.",74,null],[13,"MultipleConsensusAlgorithms","","Multiple consensus algorithms have been detected.",74,null],[3,"FinalizedScheduledChange","","",null,null],[12,"trigger_block_height","","",75,null],[12,"new_authorities_list","","",75,null],[3,"ChainInformationRef","","Equivalent to a [<code>ChainInformation</code>] but referencing an …",null,null],[12,"finalized_block_header","","See equivalent field in [<code>ChainInformation</code>].",76,null],[12,"consensus","","Extra items that depend on the consensus engine.",76,null],[12,"finality","","Extra items that depend on the finality engine.",76,null],[4,"ChainInformationConsensusRef","","Extra items that depend on the consensus engine.",null,null],[13,"AllAuthorized","","See [<code>ChainInformationConsensus::AllAuthorized</code>].",77,null],[13,"Aura","","Chain is using the Aura consensus engine.",77,null],[12,"finalized_authorities_list","smoldot::chain::chain_information::ChainInformationConsensusRef","See equivalent field in [<code>ChainInformationConsensus</code>].",78,null],[12,"slot_duration","","See equivalent field in [<code>ChainInformationConsensus</code>].",78,null],[13,"Babe","smoldot::chain::chain_information","Chain is using the Babe consensus engine.",77,null],[12,"slots_per_epoch","smoldot::chain::chain_information::ChainInformationConsensusRef","See equivalent field in [<code>ChainInformationConsensus</code>].",79,null],[12,"finalized_block_epoch_information","","See equivalent field in [<code>ChainInformationConsensus</code>].",79,null],[12,"finalized_next_epoch_transition","","See equivalent field in [<code>ChainInformationConsensus</code>].",79,null],[3,"BabeEpochInformationRef","smoldot::chain::chain_information","Information about a Babe epoch.",null,null],[12,"epoch_index","","See equivalent field in [<code>BabeEpochInformation</code>].",80,null],[12,"start_slot_number","","See equivalent field in [<code>BabeEpochInformation</code>].",80,null],[12,"authorities","","See equivalent field in [<code>BabeEpochInformation</code>].",80,null],[12,"randomness","","See equivalent field in [<code>BabeEpochInformation</code>].",80,null],[12,"c","","See equivalent field in [<code>BabeEpochInformation</code>].",80,null],[12,"allowed_slots","","See equivalent field in [<code>BabeEpochInformation</code>].",80,null],[4,"ChainInformationFinalityRef","","Extra items that depend on the finality engine.",null,null],[13,"Outsourced","","See equivalent variant in [<code>ChainInformationFinality</code>].",81,null],[13,"Grandpa","","See equivalent variant in [<code>ChainInformationFinality</code>].",81,null],[12,"after_finalized_block_authorities_set_id","smoldot::chain::chain_information::ChainInformationFinalityRef","See equivalent field in [<code>ChainInformationFinality</code>].",82,null],[12,"finalized_triggered_authorities","","See equivalent field in [<code>ChainInformationFinality</code>].",82,null],[12,"finalized_scheduled_change","","See equivalent field in [<code>ChainInformationFinality</code>].",82,null],[0,"fork_tree","smoldot::chain","Data structure containing trees of nodes.",null,null],[3,"ForkTree","smoldot::chain::fork_tree","Tree of nodes. Each node contains a value of type <code>T</code>.",null,null],[11,"new","","Initializes a new <code>ForkTree</code>.",83,[[]]],[11,"with_capacity","","Initializes a new <code>ForkTree</code> with a certain pre-allocated …",83,[[]]],[11,"reserve","","Reserves additional capacity for at least <code>additional</code> new …",83,[[]]],[11,"clear","","Removes all elements in the tree, leaving it empty.",83,[[]]],[11,"shrink_to_fit","","Shrink the capacity of the tree as much as possible.",83,[[]]],[11,"is_empty","","Returns true if there isn\'t any element in the tree.",83,[[]]],[11,"len","","Returns the number of elements in the tree.",83,[[]]],[11,"iter","","Returns an iterator to all the node values without any …",83,[[]]],[11,"get","","Returns the value of the node with the given index.",83,[[["nodeindex",3]],["option",4]]],[11,"get_mut","","Returns the value of the node with the given index.",83,[[["nodeindex",3]],["option",4]]],[11,"prune_ancestors","","Removes from the tree:",83,[[["nodeindex",3]],["pruneancestorsiter",3]]],[11,"common_ancestor","","Returns the common ancestor between <code>node1</code> and <code>node2</code>, if …",83,[[["nodeindex",3]],[["option",4],["nodeindex",3]]]],[11,"is_ancestor","","Returns true if <code>maybe_ancestor</code> is an ancestor of …",83,[[["nodeindex",3]]]],[11,"ascend_and_descend","","Returns two iterators: the first iterator enumerates the …",83,[[["nodeindex",3]]]],[11,"node_to_root_path","","Enumerates all the nodes, starting from the the given …",83,[[["nodeindex",3]]]],[11,"root_to_node_path","","Same as [<code>ForkTree::node_to_root_path</code>], but gives the path …",83,[[["nodeindex",3]]]],[11,"find","","Finds the first node in the tree that matches the given …",83,[[],[["option",4],["nodeindex",3]]]],[11,"insert","","Inserts a new node in the tree.",83,[[["option",4],["nodeindex",3]],["nodeindex",3]]],[3,"PruneAncestorsIter","","Iterator of elements removed when pruning ancestors.",null,null],[3,"PrunedNode","","Node removed by [<code>ForkTree::prune_ancestors</code>].",null,null],[12,"index","","Former index of the node. This index is no longer valid.",84,null],[12,"is_prune_target_ancestor","","True if this node is an ancestor of the target of the …",84,null],[12,"user_data","","Value that was passed to [<code>ForkTree::insert</code>].",84,null],[3,"NodeIndex","","Index of a node within a [<code>ForkTree</code>]. Never invalidated …",null,null],[0,"sync","smoldot::chain","Syncing, short for synchronizing, consists in …",null,null],[0,"optimistic","smoldot::chain::sync","Optimistic header and body syncing.",null,null],[3,"Config","smoldot::chain::sync::optimistic","Configuration for the [<code>OptimisticSync</code>].",null,null],[12,"chain_information","","Information about the latest finalized block and its …",85,null],[12,"sources_capacity","","Pre-allocated capacity for the number of block sources.",85,null],[12,"blocks_capacity","","Pre-allocated capacity for the number of blocks between …",85,null],[12,"blocks_request_granularity","","Maximum number of blocks returned by a response.",85,null],[12,"download_ahead_blocks","","Number of blocks to download ahead of the best block.",85,null],[12,"source_selection_randomness_seed","","Seed used by the PRNG (Pseudo-Random Number Generator) …",85,null],[12,"full","","If true, the block bodies and storage are also …",85,null],[3,"RequestId","","Identifier for an ongoing request in the [<code>OptimisticSync</code>].",null,null],[3,"SourceId","","Identifier for a source in the [<code>OptimisticSync</code>].",null,null],[3,"OptimisticSync","","Optimistic headers-only syncing.",null,null],[3,"Block","","",null,null],[12,"header","","Header of the block.",86,null],[12,"body","","List of SCALE-encoded extrinsics that form the block\'s …",86,null],[12,"justification","","SCALE-encoded justification of this block, if any.",86,null],[12,"storage_top_trie_changes","","Changes to the storage made by this block compared to its …",86,null],[12,"offchain_storage_changes","","List of changes to the offchain storage that this block …",86,null],[12,"user_data","","User data associated to the block.",86,null],[11,"new","","Builds a new [<code>OptimisticSync</code>].",87,[[["config",3]]]],[11,"as_chain_information","","Builds a [<code>chain_information::ChainInformationRef</code>] struct …",87,[[],["chaininformationref",3]]],[11,"finalized_block_header","","Returns the header of the finalized block.",87,[[],["headerref",3]]],[11,"best_block_header","","Returns the header of the best block.",87,[[],["headerref",3]]],[11,"best_block_number","","Returns the number of the best block.",87,[[]]],[11,"best_block_hash","","Returns the hash of the best block.",87,[[]]],[11,"add_source","","Inform the [<code>OptimisticSync</code>] of a new potential source of …",87,[[],["sourceid",3]]],[11,"raise_source_best_block","","Updates the best known block of the source.",87,[[["sourceid",3]]]],[11,"remove_source","","Inform the [<code>OptimisticSync</code>] that a source of blocks is no …",87,[[["sourceid",3]]]],[11,"next_request_action","","Returns an iterator that extracts all requests that need …",87,[[],[["option",4],["requestaction",4]]]],[11,"finish_request","","Update the [<code>OptimisticSync</code>] with the outcome of a request.",87,[[["result",4],["requestfail",4],["requestid",3]]]],[11,"process_one","","Process the next block in the queue of verification.",87,[[["duration",3]],["processone",4]]],[3,"RequestSuccessBlock","","",null,null],[12,"scale_encoded_header","","",88,null],[12,"scale_encoded_justification","","",88,null],[12,"scale_encoded_extrinsics","","",88,null],[12,"user_data","","",88,null],[4,"ProcessOne","","State of the processing of blocks.",null,null],[13,"Idle","","No processing is necessary.",89,null],[12,"sync","smoldot::chain::sync::optimistic::ProcessOne","The state machine. The [<code>OptimisticSync::process_one</code>] …",90,null],[13,"Reset","smoldot::chain::sync::optimistic","An issue happened when verifying the block or its …",89,null],[12,"sync","smoldot::chain::sync::optimistic::ProcessOne","The state machine. The [<code>OptimisticSync::process_one</code>] …",91,null],[12,"previous_best_height","","Height of the best block before the reset.",91,null],[12,"reason","","Problem that happened and caused the reset.",91,null],[13,"NewBest","smoldot::chain::sync::optimistic","Processing of the block is over.",89,null],[12,"sync","smoldot::chain::sync::optimistic::ProcessOne","The state machine. The [<code>OptimisticSync::process_one</code>] …",92,null],[12,"new_best_number","","",92,null],[12,"new_best_hash","","",92,null],[13,"Finalized","smoldot::chain::sync::optimistic","Processing of the block is over. The block has been …",89,null],[12,"sync","smoldot::chain::sync::optimistic::ProcessOne","The state machine. The [<code>OptimisticSync::process_one</code>] …",93,null],[12,"finalized_blocks","","Blocks that have been finalized. Includes the block that …",93,null],[13,"FinalizedStorageGet","smoldot::chain::sync::optimistic","Loading a storage value of the finalized block is …",89,null],[13,"FinalizedStoragePrefixKeys","","Fetching the list of keys of the finalized block with a …",89,null],[13,"FinalizedStorageNextKey","","Fetching the key of the finalized block storage that …",89,null],[3,"StorageGet","","Loading a storage value is required in order to continue.",null,null],[11,"key","","Returns the key whose value must be passed to […",94,[[]]],[11,"key_as_vec","","Returns the key whose value must be passed to […",94,[[],["vec",3]]],[11,"inject_value","","Injects the corresponding storage value.",94,[[["option",4]],["processone",4]]],[3,"StoragePrefixKeys","","Fetching the list of keys with a given prefix is required …",null,null],[11,"prefix","","Returns the prefix whose keys to load.",95,[[]]],[11,"inject_keys","","Injects the list of keys.",95,[[],["processone",4]]],[3,"StorageNextKey","","Fetching the key that follows a given one is required in …",null,null],[11,"key","","Returns the key whose next key must be passed back.",96,[[]]],[11,"inject_key","","Injects the key.",96,[[["option",4]],["processone",4]]],[4,"RequestAction","","Request that should be emitted towards a certain source.",null,null],[13,"Start","","A request must be emitted for the given source.",97,null],[12,"source_id","smoldot::chain::sync::optimistic::RequestAction","Source where to request blocks from.",98,null],[12,"source","","User data of source where to request blocks from.",98,null],[12,"start","","Must be used to accept the request.",98,null],[12,"block_height","","Height of the block to request.",98,null],[12,"num_blocks","","Number of blocks to request. Always smaller than the …",98,null],[13,"Cancel","smoldot::chain::sync::optimistic","The given [<code>RequestId</code>] is no longer valid.",97,null],[12,"request_id","smoldot::chain::sync::optimistic::RequestAction","Identifier for the request. No longer valid.",99,null],[12,"user_data","","User data associated with the request.",99,null],[12,"source_id","","Source where to request blocks from.",99,null],[12,"source","","User data of source where to request blocks from.",99,null],[3,"Start","smoldot::chain::sync::optimistic","Must be used to accept the request.",null,null],[11,"start","","Updates the [<code>OptimisticSync</code>] with the fact that the …",100,[[],["requestid",3]]],[4,"FinishRequestOutcome","","",null,null],[13,"Queued","","",101,null],[13,"SourcePunished","","",101,null],[4,"RequestFail","","Reason why a request has failed.",null,null],[13,"BlocksUnavailable","","Requested blocks aren\'t available from this source.",102,null],[3,"RequestsDrain","","Iterator that drains requests after a source has been …",null,null],[4,"ResetCause","","Problem that happened and caused the reset.",null,null],[13,"JustificationError","","Error while verifying a justification.",103,null],[13,"InvalidHeader","","Error while decoding a header.",103,null],[13,"HeaderError","","Error while verifying a header.",103,null],[13,"HeaderBodyError","","Error while verifying a header and body.",103,null],[13,"NonCanonical","","Received block isn\'t a child of the current best block.",103,null],[13,"UnexpectedBlockNumber","","Received block number doesn\'t match expected number.",103,null],[12,"expected","smoldot::chain::sync::optimistic::ResetCause","Number of the block that was expected to be verified next.",104,null],[12,"actual","","Number of the block that was verified.",104,null],[0,"chain_spec","smoldot","Substrate chain configuration.",null,null],[3,"LightSyncState","smoldot::chain_spec","",null,null],[11,"as_chain_information","","",105,[[],["chaininformation",3]]],[3,"ChainSpec","","A configuration of a chain. Can be used to build a …",null,null],[11,"light_sync_state","","",106,[[],[["option",4],["lightsyncstate",3]]]],[11,"from_json_bytes","","Parse JSON content into a [<code>ChainSpec</code>].",106,[[],[["result",4],["parseerror",3]]]],[11,"name","","Returns the name of the chain. Meant to be displayed to …",106,[[]]],[11,"id","","Returns the identifier of the chain. Similar to the name, …",106,[[]]],[11,"chain_type","","Returns a string indicating the type of chain.",106,[[]]],[11,"boot_nodes","","Returns the list of bootnode addresses in the chain specs.",106,[[]]],[11,"telemetry_endpoints","","Returns the list of libp2p multiaddresses of the default …",106,[[]]],[11,"protocol_id","","Returns the network protocol id that uniquely identifies …",106,[[]]],[11,"relay_chain","","",106,[[],["option",4]]],[11,"genesis_storage","","Returns the list of storage keys and values of the …",106,[[]]],[11,"properties","","Returns a list of arbitrary properties contained in the …",106,[[]]],[3,"ParseError","","Error that can happen when parsing a chain spec JSON.",null,null],[0,"database","smoldot","Persistent data storage.",null,null],[0,"finalized_serialize","smoldot::database","Serializing/deserializing a […",null,null],[5,"encode_chain_information","smoldot::database::finalized_serialize","Stores the given information in the local storage.",null,[[["chaininformationref",3]],["string",3]]],[5,"decode_chain_information","","Loads information about the chain from the local storage.",null,[[],[["chaininformation",3],["corruptederror",3],["result",4]]]],[3,"CorruptedError","","Opaque error indicating a corruption in the data stored …",null,null],[0,"full_sled","smoldot::database","Filesystem-backed database containing all the information …",null,null],[5,"open","smoldot::database::full_sled","Opens the database using the given [<code>Config</code>].",null,[[["config",3]],[["slederror",3],["result",4],["databaseopen",4]]]],[3,"Config","","Configuration for the database.",null,null],[12,"ty","","Type of database.",107,null],[4,"ConfigTy","","Type of database.",null,null],[13,"Disk","","Store the database on disk. Path to the directory …",108,null],[13,"Memory","","Store the database in memory. The database is discarded …",108,null],[3,"DatabaseEmpty","","An open database. Holds file descriptors.",null,null],[4,"DatabaseOpen","","Either existing database or database prototype.",null,null],[13,"Open","","A database already existed and has now been opened.",109,null],[13,"Empty","","Either a database has just been created, or there existed …",109,null],[3,"SledFullDatabase","","An open database. Holds file descriptors.",null,null],[11,"best_block_hash","","Returns the hash of the block in the database whose …",110,[[],[["accesserror",4],["result",4]]]],[11,"finalized_block_hash","","Returns the hash of the finalized block in the database.",110,[[],[["accesserror",4],["result",4]]]],[11,"block_scale_encoded_header","","Returns the SCALE-encoded header of the given block, or …",110,[[],[["result",4],["option",4],["accesserror",4]]]],[11,"block_extrinsics","","Returns the list of extrinsics of the given block, or <code>None</code>…",110,[[],[["result",4],["accesserror",4],["option",4]]]],[11,"block_hash_by_number","","Returns the hashes of the blocks given a block number.",110,[[],[["accesserror",4],["result",4]]]],[11,"to_chain_information","","Returns a [<code>chain_information::ChainInformation</code>] struct …",110,[[],[["finalizedaccesserror",4],["chaininformation",3],["result",4]]]],[11,"insert","","Insert a new block in the database.",110,[[],[["inserterror",4],["result",4]]]],[11,"set_finalized","","Changes the finalized block to the given one.",110,[[],[["result",4],["setfinalizederror",4]]]],[11,"finalized_block_storage_top_trie_get","","Returns the value associated to a key in the storage of …",110,[[],[["option",4],["result",4],["finalizedaccesserror",4]]]],[11,"finalized_block_storage_top_trie_next_key","","Returns the key in the storage of the finalized block …",110,[[],[["option",4],["result",4],["finalizedaccesserror",4]]]],[11,"finalized_block_storage_top_trie_keys","","Returns the list of keys of the storage of the finalized …",110,[[],[["result",4],["vec",3],["finalizedaccesserror",4]]]],[3,"VarLenBytes","","Bytes in the database.",null,null],[4,"AccessError","","Error while accessing some information.",null,null],[13,"Database","","Couldn\'t access the database.",111,null],[13,"Corrupted","","Database could be accessed, but its content is invalid.",111,null],[3,"SledError","","Low-level database error, such as an error while …",null,null],[4,"InsertError","","Error while calling [<code>SledFullDatabase::insert</code>].",null,null],[13,"Access","","Error accessing the database.",112,null],[13,"Duplicate","","Block was already in the database.",112,null],[13,"BadHeader","","Error when decoding the header to import.",112,null],[13,"MissingParent","","Parent of the block to insert isn\'t in the database.",112,null],[13,"FinalizedNephew","","Block isn\'t a descendant of the latest finalized block.",112,null],[4,"SetFinalizedError","","Error while calling [<code>SledFullDatabase::set_finalized</code>].",null,null],[13,"Access","","Error accessing the database.",113,null],[13,"UnknownBlock","","New finalized block isn\'t in the database.",113,null],[13,"RevertForbidden","","New finalized block must be a child of the previous …",113,null],[4,"FinalizedAccessError","","Error while accessing the storage of the finalized block.",null,null],[13,"Access","","Error accessing the database.",114,null],[13,"Obsolete","","Block hash passed as parameter is no longer the finalized …",114,null],[4,"CorruptedError","","Error in the content of the database.",null,null],[13,"BrokenChain","","The parent of a block in the database couldn\'t be found …",115,null],[13,"BestBlockHashNotFound","","",115,null],[13,"FinalizedBlockNumberNotFound","","",115,null],[13,"FinalizedBlockNumberOutOfRange","","",115,null],[13,"BestBlockHashBadLength","","",115,null],[13,"BlockHeaderNotInDatabase","","A block that is known to be in the database in missing …",115,null],[13,"BlockHeaderCorrupted","","",115,null],[13,"BlockHashLenInHashNumberMapping","","",115,null],[13,"BlockBodyCorrupted","","",115,null],[13,"NonFinalizedChangesMissing","","",115,null],[13,"InvalidBabeEpochInformation","","",115,null],[13,"InvalidGrandpaAuthoritiesSetId","","",115,null],[13,"InvalidGrandpaTriggeredAuthoritiesScheduledHeight","","",115,null],[13,"InvalidGrandpaAuthoritiesList","","",115,null],[13,"InvalidNumber","","",115,null],[13,"ConsensusAlgorithm","","Database stores information about more than one consensus …",115,null],[0,"executor","smoldot","WebAssembly runtime code execution.",null,null],[0,"host","smoldot::executor","Wasm virtual machine specific to the Substrate/Polkadot …",null,null],[3,"HostVmPrototype","smoldot::executor::host","Prototype for an [<code>HostVm</code>].",null,null],[11,"new","","Creates a new [<code>HostVmPrototype</code>]. Parses and potentially …",116,[[["exechint",4]],[["result",4],["newerr",4]]]],[11,"heap_pages","","Returns the number of heap pages that were passed to […",116,[[]]],[11,"run","","Starts the VM, calling the function passed as parameter.",116,[[],[["result",4],["readytorun",3],["starterr",4]]]],[11,"run_no_param","","Same as [<code>HostVmPrototype::run</code>], except that the function …",116,[[],[["result",4],["readytorun",3],["starterr",4]]]],[11,"run_vectored","","Same as [<code>HostVmPrototype::run</code>], except that the function …",116,[[],[["result",4],["readytorun",3],["starterr",4]]]],[4,"HostVm","","Running virtual machine.",null,null],[13,"ReadyToRun","","Wasm virtual machine is ready to be run. Call […",117,null],[13,"Finished","","Function execution has succeeded. Contains the return …",117,null],[13,"Error","","The Wasm blob did something that doesn\'t conform to the …",117,null],[12,"prototype","smoldot::executor::host::HostVm","Virtual machine ready to be used again.",118,null],[12,"error","","Error that happened.",118,null],[13,"ExternalStorageGet","smoldot::executor::host","Must load an storage value.",117,null],[13,"ExternalStorageSet","","Must set an storage value.",117,null],[13,"ExternalStorageAppend","","See documentation of [<code>ExternalStorageAppend</code>].",117,null],[13,"ExternalStorageClearPrefix","","Must remove all the storage values starting with a …",117,null],[13,"ExternalStorageRoot","","Need to provide the trie root of the storage.",117,null],[13,"ExternalStorageChangesRoot","","Need to provide the trie root of the changes trie.",117,null],[13,"ExternalStorageNextKey","","Need to provide the storage key that follows a specific …",117,null],[13,"ExternalOffchainStorageSet","","Must the set value of an offchain storage entry.",117,null],[13,"CallRuntimeVersion","","Need to call <code>Core_version</code> on the given Wasm code and …",117,null],[13,"StartStorageTransaction","","Declares the start of a storage transaction. See […",117,null],[13,"EndStorageTransaction","","Ends a storage transaction. All changes made to the …",117,null],[12,"resume","smoldot::executor::host::HostVm","Object used to resume execution.",119,null],[12,"rollback","","If true, changes must be rolled back.",119,null],[13,"LogEmit","smoldot::executor::host","Runtime has emitted a log entry.",117,null],[3,"ReadyToRun","","Virtual machine is ready to run.",null,null],[11,"run","","Runs the virtual machine until something important …",120,[[],["hostvm",4]]],[3,"Finished","","Function execution has succeeded. Contains the return …",null,null],[11,"value","","Returns the value the called function has returned.",121,[[]]],[11,"into_prototype","","Turns the virtual machine back into a prototype.",121,[[],["hostvmprototype",3]]],[3,"ExternalStorageGet","","Must provide the value of a storage entry.",null,null],[11,"key","","Returns the key whose value must be provided back with […",122,[[]]],[11,"offset","","Offset within the value that is requested.",122,[[]]],[11,"max_size","","Maximum size of the value to pass back.",122,[[]]],[11,"resume_full_value","","Same as [<code>ExternalStorageGet::resume</code>], but passes the full …",122,[[["option",4]],["hostvm",4]]],[11,"resume","","Writes the storage value in the Wasm VM\'s memory and …",122,[[["option",4]],["hostvm",4]]],[11,"resume_vectored","","Similar to [<code>ExternalStorageGet::resume</code>], but allows …",122,[[["option",4]],["hostvm",4]]],[3,"ExternalStorageSet","","Must set the value of a storage entry.",null,null],[11,"key","","Returns the key whose value must be set.",123,[[]]],[11,"value","","Returns the value to set.",123,[[],["option",4]]],[11,"resume","","Resumes execution after having set the value.",123,[[],["hostvm",4]]],[3,"ExternalStorageAppend","","Must load a storage value, treat it as if it was a …",null,null],[11,"key","","Returns the key whose value must be set.",124,[[]]],[11,"value","","Returns the value to append.",124,[[]]],[11,"resume","","Resumes execution after having set the value.",124,[[],["hostvm",4]]],[3,"ExternalStorageClearPrefix","","Must remove from the storage all keys which start with a …",null,null],[11,"prefix","","Returns the prefix whose keys must be removed.",125,[[]]],[11,"resume","","Resumes execution after having set the value.",125,[[],["hostvm",4]]],[3,"ExternalStorageRoot","","Must provide the trie root hash of the storage.",null,null],[11,"resume","","Writes the trie root hash to the Wasm VM and prepares it …",126,[[],["hostvm",4]]],[3,"ExternalStorageChangesRoot","","Must provide the trie root hash of the changes trie.",null,null],[11,"resume","","Writes the trie root hash to the Wasm VM and prepares it …",127,[[["option",4]],["hostvm",4]]],[3,"ExternalStorageNextKey","","Must provide the storage key that follows, in …",null,null],[11,"key","","Returns the key whose following key must be returned.",128,[[]]],[11,"resume","","Writes the follow-up key in the Wasm VM memory and …",128,[[["option",4]],["hostvm",4]]],[3,"CallRuntimeVersion","","Must provide the runtime version obtained by calling the …",null,null],[11,"wasm_code","","Returns the Wasm code whose runtime version must be …",129,[[]]],[11,"resume","","Writes the SCALE-encoded runtime version to the memory …",129,[[["result",4]],["hostvm",4]]],[3,"ExternalOffchainStorageSet","","Must set the value of the offchain storage.",null,null],[11,"key","","Returns the key whose value must be set.",130,[[]]],[11,"value","","Returns the value to set.",130,[[],["option",4]]],[11,"resume","","Resumes execution after having set the value.",130,[[],["hostvm",4]]],[3,"LogEmit","","Report about a log entry being emitted.",null,null],[11,"resume","","Resumes execution after having set the value.",131,[[],["hostvm",4]]],[3,"StartStorageTransaction","","Declares the start of a transaction.",null,null],[11,"resume","","Resumes execution after having acknowledged the event.",132,[[],["hostvm",4]]],[3,"EndStorageTransaction","","Declares the end of a transaction.",null,null],[11,"resume","","Resumes execution after having acknowledged the event.",133,[[],["hostvm",4]]],[4,"NewErr","","Error that can happen when initializing a VM.",null,null],[13,"VirtualMachine","","Error while initializing the virtual machine.",134,null],[13,"HeapBaseNotFound","","Couldn\'t find the <code>__heap_base</code> symbol in the Wasm code.",134,null],[4,"StartErr","","Error that can happen when starting a VM.",null,null],[13,"VirtualMachine","","Error while starting the virtual machine.",135,null],[13,"DataSizeOverflow","","The size of the input data is too large.",135,null],[4,"Error","","Reason why the Wasm blob isn\'t conforming to the runtime …",null,null],[13,"Trap","","Error in the Wasm code execution.",136,null],[13,"BadReturnValue","","A non-<code>i64</code> value has been returned by the Wasm entry point.",136,null],[12,"actual","smoldot::executor::host::Error","Type that has actually gotten returned. <code>None</code> for \\\"void\\\".",137,null],[13,"ReturnedPtrOutOfRange","smoldot::executor::host","The pointer and size returned by the Wasm entry point …",136,null],[12,"pointer","smoldot::executor::host::Error","Pointer that got returned.",138,null],[12,"size","","Size that got returned.",138,null],[12,"memory_size","","Size of the virtual memory.",138,null],[13,"ReturnValueTypeMismatch","smoldot::executor::host","An host_fn wants to returns a certain value, but the Wasm …",136,null],[13,"ParamsCountMismatch","","Mismatch between the number of parameters expected and …",136,null],[12,"function","smoldot::executor::host::Error","Name of the function being called whose number of …",139,null],[12,"expected","","Expected number of parameters.",139,null],[12,"actual","","Number of parameters that have been passed.",139,null],[13,"ParamDecodeError","smoldot::executor::host","Failed to decode a SCALE-encoded parameter.",136,null],[13,"WrongParamTy","","The type of one of the parameters is wrong.",136,null],[12,"function","smoldot::executor::host::Error","Name of the function being called where a type mismatch …",140,null],[12,"param_num","","Index of the invalid parameter. The first parameter has …",140,null],[12,"expected","","Type of the value that was expected.",140,null],[12,"actual","","Type of the value that got passed.",140,null],[13,"ParamOutOfRange","smoldot::executor::host","One parameter is expected to point to a buffer, but the …",136,null],[12,"function","smoldot::executor::host::Error","Name of the function being called where a type mismatch …",141,null],[12,"param_num","","Index of the invalid parameter. The first parameter has …",141,null],[12,"pointer","","Pointer passed as parameter.",141,null],[12,"length","","Expected length of the buffer.",141,null],[13,"Utf8Error","smoldot::executor::host","One parameter is expected to point to a UTF-8 string, but …",136,null],[12,"function","smoldot::executor::host::Error","Name of the function being called where a type mismatch …",142,null],[12,"param_num","","Index of the invalid parameter. The first parameter has …",142,null],[12,"error","","Decoding error that happened.",142,null],[13,"NestedTransaction","smoldot::executor::host","Called <code>ext_storage_start_transaction_version_1</code> with a …",136,null],[13,"NoActiveTransaction","","Called <code>ext_storage_rollback_transaction_version_1</code> or …",136,null],[13,"FinishedWithPendingTransaction","","Execution has finished while a transaction started with …",136,null],[13,"OutOfMemory","","Error when allocating memory for a return type.",136,null],[12,"function","smoldot::executor::host::Error","Name of the function being called.",143,null],[12,"requested_size","","Size of the requested allocation.",143,null],[13,"FreeError","smoldot::executor::host","Called <code>ext_allocator_free_version_1</code> with an invalid …",136,null],[12,"pointer","smoldot::executor::host::Error","Pointer that was expected to be free\'d.",144,null],[0,"read_only_runtime_host","smoldot::executor","Wasm virtual machine, with automatic storage overlay and …",null,null],[3,"Config","smoldot::executor::read_only_runtime_host","Configuration for [<code>run</code>].",null,null],[12,"virtual_machine","","Virtual machine to be run.",145,null],[12,"function_to_call","","Name of the function to be called.",145,null],[12,"parameter","","Parameter of the call, as an iterator of bytes. The …",145,null],[5,"run","","Start running the WebAssembly virtual machine.",null,[[["config",3]],[["result",4],["starterr",4],["runtimehostvm",4]]]],[3,"Success","","Execution is successful.",null,null],[12,"virtual_machine","","Contains the output value of the runtime, and the virtual …",146,null],[12,"logs","","Concatenation of all the log messages printed by the …",146,null],[3,"SuccessVirtualMachine","","Function execution has succeeded. Contains the return …",null,null],[11,"value","","Returns the value the called function has returned.",147,[[]]],[11,"into_prototype","","Turns the virtual machine back into a prototype.",147,[[],["hostvmprototype",3]]],[4,"Error","","Error that can happen during the execution.",null,null],[13,"WasmVm","","Error while executing the Wasm virtual machine.",148,null],[12,"error","smoldot::executor::read_only_runtime_host::Error","Error that happened.",149,null],[12,"logs","","Concatenation of all the log messages printed by the …",149,null],[13,"LogsTooLong","smoldot::executor::read_only_runtime_host","Size of the logs generated by the runtime exceeds the …",148,null],[13,"ForbiddenHostCall","","",148,null],[4,"RuntimeHostVm","","Current state of the execution.",null,null],[13,"Finished","","Execution is over.",150,null],[13,"StorageGet","","Loading a storage value is required in order to continue.",150,null],[13,"NextKey","","Fetching the key that follows a given one is required in …",150,null],[3,"StorageGet","","Loading a storage value is required in order to continue.",null,null],[11,"key","","Returns the key whose value must be passed to […",151,[[]]],[11,"key_as_vec","","Returns the key whose value must be passed to […",151,[[],["vec",3]]],[11,"inject_value","","Injects the corresponding storage value.",151,[[["option",4]],["runtimehostvm",4]]],[3,"NextKey","","Fetching the key that follows a given one is required in …",null,null],[11,"key","","Returns the key whose next key must be passed back.",152,[[]]],[11,"inject_key","","Injects the key.",152,[[["option",4]],["runtimehostvm",4]]],[0,"runtime_host","smoldot::executor","Wasm virtual machine, with automatic storage overlay and …",null,null],[3,"Config","smoldot::executor::runtime_host","Configuration for [<code>run</code>].",null,null],[12,"virtual_machine","","Virtual machine to be run.",153,null],[12,"function_to_call","","Name of the function to be called.",153,null],[12,"parameter","","Parameter of the call, as an iterator of bytes. The …",153,null],[12,"top_trie_root_calculation_cache","","Optional cache of the trie root calculation to use. Must …",153,null],[12,"storage_top_trie_changes","","Initial state of [<code>Success::storage_top_trie_changes</code>]. The …",153,null],[12,"offchain_storage_changes","","Initial state of [<code>Success::offchain_storage_changes</code>]. The …",153,null],[5,"run","","Start running the WebAssembly virtual machine.",null,[[["config",3]],[["result",4],["starterr",4],["runtimehostvm",4]]]],[3,"Success","","Execution is successful.",null,null],[12,"virtual_machine","","Contains the output value of the runtime, and the virtual …",154,null],[12,"storage_top_trie_changes","","List of changes to the storage top trie that the block …",154,null],[12,"offchain_storage_changes","","List of changes to the offchain storage that this block …",154,null],[12,"top_trie_root_calculation_cache","","Cache used for calculating the top trie root.",154,null],[12,"logs","","Concatenation of all the log messages printed by the …",154,null],[3,"SuccessVirtualMachine","","Function execution has succeeded. Contains the return …",null,null],[11,"value","","Returns the value the called function has returned.",155,[[]]],[11,"into_prototype","","Turns the virtual machine back into a prototype.",155,[[],["hostvmprototype",3]]],[4,"Error","","Error that can happen during the execution.",null,null],[13,"WasmVm","","Error while executing the Wasm virtual machine.",156,null],[12,"error","smoldot::executor::runtime_host::Error","Error that happened.",157,null],[12,"logs","","Concatenation of all the log messages printed by the …",157,null],[13,"LogsTooLong","smoldot::executor::runtime_host","Size of the logs generated by the runtime exceeds the …",156,null],[4,"RuntimeHostVm","","Current state of the execution.",null,null],[13,"Finished","","Execution is over.",158,null],[13,"StorageGet","","Loading a storage value is required in order to continue.",158,null],[13,"PrefixKeys","","Fetching the list of keys with a given prefix is required …",158,null],[13,"NextKey","","Fetching the key that follows a given one is required in …",158,null],[3,"StorageGet","","Loading a storage value is required in order to continue.",null,null],[11,"key","","Returns the key whose value must be passed to […",159,[[]]],[11,"key_as_vec","","Returns the key whose value must be passed to […",159,[[],["vec",3]]],[11,"inject_value","","Injects the corresponding storage value.",159,[[["option",4]],["runtimehostvm",4]]],[3,"PrefixKeys","","Fetching the list of keys with a given prefix is required …",null,null],[11,"prefix","","Returns the prefix whose keys to load.",160,[[]]],[11,"inject_keys","","Injects the list of keys.",160,[[],["runtimehostvm",4]]],[3,"NextKey","","Fetching the key that follows a given one is required in …",null,null],[11,"key","","Returns the key whose next key must be passed back.",161,[[]]],[11,"inject_key","","Injects the key.",161,[[["option",4]],["runtimehostvm",4]]],[0,"vm","smoldot::executor","General-purpose WebAssembly virtual machine.",null,null],[3,"VirtualMachinePrototype","smoldot::executor::vm","",null,null],[11,"new","","Creates a new process state machine from the given module.",162,[[["exechint",4]],[["result",4],["newerr",4]]]],[11,"global_value","","Returns the value of a global that the module exports.",162,[[],[["result",4],["globalvalueerr",4]]]],[11,"start","","Turns this prototype into an actual virtual machine. This …",162,[[],[["virtualmachine",3],["starterr",4],["result",4]]]],[3,"VirtualMachine","","",null,null],[11,"run","","Starts or continues execution of this thread.",163,[[["wasmvalue",4],["option",4]],[["runerr",4],["result",4],["execoutcome",4]]]],[11,"memory_size","","Returns the size of the memory, in bytes.",163,[[]]],[11,"read_memory","","Copies the given memory range into a <code>Vec<u8></code>.",163,[[],[["result",4],["outofboundserror",3]]]],[11,"write_memory","","Write the data at the given memory location.",163,[[],[["outofboundserror",3],["result",4]]]],[11,"into_prototype","","Turns back this virtual machine into a prototype.",163,[[],["virtualmachineprototype",3]]],[4,"ExecHint","","Hint used by the implementation to decide which kind of …",null,null],[13,"CompileAheadOfTime","","The WebAssembly code will be instantiated once and run …",164,null],[13,"Oneshot","","The WebAssembly code is expected to be only run once.",164,null],[13,"Untrusted","","The WebAssembly code running through this VM is untrusted.",164,null],[3,"Signature","","Low-level Wasm function signature.",null,null],[11,"new","","Creates a [<code>Signature</code>] from the given parameter types and …",165,[[],["signature",3]]],[11,"parameters","","Returns a list of all the types of the parameters.",165,[[]]],[11,"return_type","","Returns the type of the return type of the function. <code>None</code> …",165,[[],[["option",4],["valuetype",4]]]],[4,"WasmValue","","Value that a Wasm function can accept or produce.",null,null],[13,"I32","","A 32-bits integer. There is no fundamental difference …",166,null],[13,"I64","","A 32-bits integer. There is no fundamental difference …",166,null],[4,"ValueType","","Type of a value passed as parameter or returned by a …",null,null],[13,"I32","","A 32-bits integer. Used for both signed and unsigned …",167,null],[13,"I64","","A 64-bits integer. Used for both signed and unsigned …",167,null],[11,"ty","","Returns the type corresponding to this value.",166,[[],["valuetype",4]]],[11,"into_i32","","Unwraps [<code>WasmValue::I32</code>] into its value.",166,[[],["option",4]]],[11,"into_i64","","Unwraps [<code>WasmValue::I64</code>] into its value.",166,[[],["option",4]]],[3,"UnsupportedTypeError","","Error used in the conversions between VM implementation …",null,null],[4,"ExecOutcome","","Outcome of the <code>run</code> function.",null,null],[13,"Finished","","The execution has finished.",168,null],[12,"return_value","smoldot::executor::vm::ExecOutcome","Return value of the function.",169,null],[13,"Interrupted","smoldot::executor::vm","The virtual machine has been paused due to a call to a …",168,null],[12,"id","smoldot::executor::vm::ExecOutcome","Identifier of the function to call. Corresponds to the …",170,null],[12,"params","","Parameters of the function call.",170,null],[3,"Trap","smoldot::executor::vm","Opaque error that happened during execution, such as an …",null,null],[4,"NewErr","","Error that can happen when initializing a […",null,null],[13,"ModuleError","","Error while parsing or compiling the WebAssembly code.",171,null],[13,"MemoryIsntMemory","","If a \\\"memory\\\" symbol is provided, it must be a memory.",171,null],[13,"IndirectTableIsntTable","","If a \\\"__indirect_function_table\\\" symbol is provided, it …",171,null],[4,"StartErr","","Error that can happen when calling […",null,null],[13,"FunctionNotFound","","Couldn\'t find the requested function.",172,null],[13,"NotAFunction","","The requested function has been found in the list of …",172,null],[13,"SignatureNotSupported","","The requested function has a signature that isn\'t …",172,null],[3,"ModuleError","","Opaque error indicating an error while parsing or …",null,null],[3,"OutOfBoundsError","","Error while reading memory.",null,null],[4,"RunErr","","Error that can happen when resuming the execution of a …",null,null],[13,"Poisoned","","The state machine is poisoned.",173,null],[13,"BadValueTy","","Passed a wrong value back.",173,null],[12,"expected","smoldot::executor::vm::RunErr","Type of the value that was expected.",174,null],[12,"obtained","","Type of the value that was actually passed.",174,null],[4,"GlobalValueErr","smoldot::executor::vm","Error that can happen when calling […",null,null],[13,"NotFound","","Couldn\'t find requested symbol.",175,null],[13,"Invalid","","Requested symbol isn\'t a <code>u32</code>.",175,null],[17,"DEFAULT_HEAP_PAGES","smoldot::executor","Default number of heap pages if the storage doesn\'t …",null,null],[5,"core_version","","Runs the <code>Core_version</code> function using the given virtual …",null,[[["hostvmprototype",3]],["result",4]]],[3,"CoreVersion","","Buffer storing the SCALE-encoded core version.",null,null],[11,"decode","","",176,[[],["coreversionref",3]]],[3,"CoreVersionRef","","Runtime specifications, once decoded.",null,null],[12,"spec_name","","",177,null],[12,"impl_name","","",177,null],[12,"authoring_version","","",177,null],[12,"spec_version","","",177,null],[12,"impl_version","","",177,null],[12,"apis","","",177,null],[12,"transaction_version","","<code>None</code> if the field is missing.",177,null],[0,"finality","smoldot","Finality consists is declaring a block as irreversible. …",null,null],[0,"grandpa","smoldot::finality","",null,null],[0,"chain_config","smoldot::finality::grandpa","",null,null],[3,"GrandpaGenesisConfiguration","smoldot::finality::grandpa::chain_config","Grandpa configuration of a chain, as extracted from the …",null,null],[12,"initial_authorities","","Authorities of the authorities set 0. These are the …",178,null],[11,"from_genesis_storage","","Retrieves the configuration from the storage of the …",178,[[],[["fromgenesisstorageerror",4],["result",4]]]],[4,"FromGenesisStorageError","","Error when retrieving the Grandpa configuration.",null,null],[13,"RuntimeNotFound","","Runtime couldn\'t be found in the genesis storage.",179,null],[13,"HeapPagesNotFound","","Number of heap pages couldn\'t be found in the genesis …",179,null],[13,"HeapPagesDecode","","Failed to decode heap pages from the genesis storage.",179,null],[13,"UnknownEncodingVersionNumber","","Version number of the encoded authorities list isn\'t …",179,null],[13,"OutputDecode","","Error while decoding the SCALE-encoded list.",179,null],[13,"VmInitialization","","Error when initializing the virtual machine.",179,null],[13,"VmError","","Error while executing the runtime.",179,null],[11,"is_function_not_found","","Returns <code>true</code> if this error is about an invalid function.",179,[[]]],[4,"FromVmPrototypeError","","Error when retrieving the Grandpa configuration.",null,null],[13,"VmStart","","Error when initializing the virtual machine.",180,null],[13,"Trapped","","Crash while running the virtual machine.",180,null],[13,"HostFunctionNotAllowed","","Virtual machine tried to call a host function that isn\'t …",180,null],[11,"is_function_not_found","","Returns <code>true</code> if this error is about an invalid function.",180,[[]]],[0,"warp_sync","smoldot::finality::grandpa","",null,null],[3,"Verifier","smoldot::finality::grandpa::warp_sync","",null,null],[11,"new","","",181,[[["grandpawarpsyncresponsefragment",3],["vec",3],["chaininformation",3]]]],[11,"next","","",181,[[],[["next",4],["result",4],["verifyerror",4]]]],[4,"Next","","",null,null],[13,"NotFinished","","",182,null],[13,"Success","","",182,null],[0,"justification","smoldot::finality","Justifications contain a proof of the finality of a block.",null,null],[0,"decode","smoldot::finality::justification","",null,null],[5,"decode","smoldot::finality::justification::decode","Attempt to decode the given SCALE-encoded justification.",null,[[],[["justificationref",3],["result",4],["error",3]]]],[5,"decode_partial","","Attempt to decode the given SCALE-encoded justification.",null,[[],[["result",4],["error",3]]]],[3,"JustificationRef","","Decoded justification.",null,null],[12,"round","","",183,null],[12,"target_hash","","",183,null],[12,"target_number","","",183,null],[12,"precommits","","",183,null],[12,"votes_ancestries","","",183,null],[3,"Justification","","Decoded justification.",null,null],[12,"round","","",184,null],[12,"target_hash","","",184,null],[12,"target_number","","",184,null],[12,"precommits","","",184,null],[3,"PrecommitsRef","","",null,null],[11,"iter","","",185,[[]]],[3,"PrecommitsRefIter","","",null,null],[3,"PrecommitRef","","",null,null],[12,"target_hash","","Hash of the block concerned by the pre-commit.",186,null],[12,"target_number","","Height of the block concerned by the pre-commit.",186,null],[12,"signature","","Ed25519 signature made with […",186,null],[12,"authority_public_key","","Authority that signed the precommit. Must be part of the …",186,null],[11,"decode_partial","","Decodes a SCALE-encoded precommit.",186,[[],[["result",4],["error",3]]]],[3,"Precommit","","",null,null],[12,"target_hash","","Hash of the block concerned by the pre-commit.",187,null],[12,"target_number","","Height of the block concerned by the pre-commit.",187,null],[12,"signature","","Ed25519 signature made with […",187,null],[12,"authority_public_key","","Authority that signed the precommit. Must be part of the …",187,null],[3,"VotesAncestriesIter","","Iterator towards the headers of the vote ancestries.",null,null],[3,"Error","","Potential error when decoding a justification.",null,null],[0,"verify","smoldot::finality::justification","",null,null],[3,"Config","smoldot::finality::justification::verify","Configuration for a justification verification process.",null,null],[12,"justification","","Justification to verify.",188,null],[12,"authorities_set_id","","",188,null],[12,"authorities_list","","List of authorities that are allowed to emit pre-commits …",188,null],[5,"verify","","Verifies that a justification is valid.",null,[[["config",3]],[["result",4],["error",4]]]],[4,"Error","","Error that can happen while verifying a justification.",null,null],[13,"BadPublicKey","","One of the public keys is invalid.",189,null],[13,"BadSignature","","One of the signatures can\'t be verified.",189,null],[13,"DuplicateSignature","","One authority has produced two signatures.",189,null],[13,"NotAuthority","","One of the public keys isn\'t in the list of authorities.",189,null],[13,"NotEnoughSignatures","","Justification doesn\'t contain enough authorities …",189,null],[0,"header","smoldot","Parsing SCALE-encoded header.",null,null],[4,"AuraConsensusLogRef","smoldot::header","A consensus log item for AURA.",null,null],[13,"AuthoritiesChange","","List of authorities has changed.",190,null],[13,"OnDisabled","","Disable the authority with given index.",190,null],[4,"AuraConsensusLog","","A consensus log item for AURA.",null,null],[13,"AuthoritiesChange","","List of authorities has changed.",191,null],[13,"OnDisabled","","Disable the authority with given index.",191,null],[3,"AuraAuthoritiesIter","","List of authorities in an AURA context.",null,null],[3,"AuraAuthorityRef","","",null,null],[12,"public_key","","Sr25519 public key.",192,null],[3,"AuraAuthority","","",null,null],[12,"public_key","","Sr25519 public key.",193,null],[3,"AuraPreDigest","","AURA slot number pre-digest.",null,null],[12,"slot_number","","Slot number when the block was produced.",194,null],[4,"BabeConsensusLogRef","","A consensus log item for BABE.",null,null],[13,"NextEpochData","","The epoch has changed. This provides information about …",195,null],[13,"OnDisabled","","Disable the authority with given index.",195,null],[13,"NextConfigData","","The epoch has changed, and the epoch after the current …",195,null],[4,"BabeConsensusLog","","A consensus log item for BABE.",null,null],[13,"NextEpochData","","The epoch has changed. This provides information about …",196,null],[13,"OnDisabled","","Disable the authority with given index.",196,null],[13,"NextConfigData","","The epoch has changed, and the epoch after the current …",196,null],[3,"BabeNextEpochRef","","Information about the next epoch. This is broadcast in …",null,null],[12,"authorities","","The authorities.",197,null],[12,"randomness","","The value of randomness to use for the slot-assignment.",197,null],[3,"BabeNextEpoch","","Information about the next epoch. This is broadcast in …",null,null],[12,"authorities","","The authorities.",198,null],[12,"randomness","","The value of randomness to use for the slot-assignment.",198,null],[3,"BabeAuthoritiesIter","","List of authorities in a BABE context.",null,null],[3,"BabeAuthorityRef","","",null,null],[12,"public_key","","Sr25519 public key.",199,null],[12,"weight","","Arbitrary number indicating the weight of the authority.",199,null],[3,"BabeAuthority","","",null,null],[12,"public_key","","Sr25519 public key.",200,null],[12,"weight","","Arbitrary number indicating the weight of the authority.",200,null],[3,"BabeNextConfig","","Information about the next epoch config, if changed. This …",null,null],[12,"c","","Value of <code>c</code> in <code>BabeEpochConfiguration</code>.",201,null],[12,"allowed_slots","","Value of <code>allowed_slots</code> in <code>BabeEpochConfiguration</code>.",201,null],[4,"BabeAllowedSlots","","Types of allowed slots.",null,null],[13,"PrimarySlots","","Only allow primary slot claims.",202,null],[13,"PrimaryAndSecondaryPlainSlots","","Allow primary and secondary plain slot claims.",202,null],[13,"PrimaryAndSecondaryVRFSlots","","Allow primary and secondary VRF slot claims.",202,null],[4,"BabePreDigestRef","","A BABE pre-runtime digest. This contains all data …",null,null],[13,"Primary","","A primary VRF-based slot assignment.",203,null],[13,"SecondaryPlain","","A secondary deterministic slot assignment.",203,null],[13,"SecondaryVRF","","A secondary deterministic slot assignment with VRF …",203,null],[4,"BabePreDigest","","A BABE pre-runtime digest. This contains all data …",null,null],[13,"Primary","","A primary VRF-based slot assignment.",204,null],[13,"SecondaryPlain","","A secondary deterministic slot assignment.",204,null],[13,"SecondaryVRF","","A secondary deterministic slot assignment with VRF …",204,null],[3,"BabePrimaryPreDigestRef","","Raw BABE primary slot assignment pre-digest.",null,null],[12,"authority_index","","Authority index",205,null],[12,"slot_number","","Slot number",205,null],[12,"vrf_output","","VRF output",205,null],[12,"vrf_proof","","VRF proof",205,null],[3,"BabePrimaryPreDigest","","Raw BABE primary slot assignment pre-digest.",null,null],[12,"authority_index","","Authority index",206,null],[12,"slot_number","","Slot number",206,null],[12,"vrf_output","","VRF output",206,null],[12,"vrf_proof","","VRF proof",206,null],[3,"BabeSecondaryPlainPreDigest","","BABE secondary slot assignment pre-digest.",null,null],[12,"authority_index","","Authority index",207,null],[12,"slot_number","","Slot number",207,null],[3,"BabeSecondaryVRFPreDigestRef","","BABE secondary deterministic slot assignment with VRF …",null,null],[12,"authority_index","","Authority index",208,null],[12,"slot_number","","Slot number",208,null],[12,"vrf_output","","VRF output",208,null],[12,"vrf_proof","","VRF proof",208,null],[3,"BabeSecondaryVRFPreDigest","","BABE secondary deterministic slot assignment with VRF …",null,null],[12,"authority_index","","Authority index",209,null],[12,"slot_number","","Slot number",209,null],[12,"vrf_output","","VRF output",209,null],[12,"vrf_proof","","VRF proof",209,null],[4,"GrandpaConsensusLogRef","","A consensus log item for GrandPa.",null,null],[13,"ScheduledChange","","Schedule an authority set change.",210,null],[13,"ForcedChange","","Force an authority set change.",210,null],[12,"reset_block_height","smoldot::header::GrandpaConsensusLogRef","",211,null],[12,"change","","",211,null],[13,"OnDisabled","smoldot::header","Note that the authority with given index is disabled …",210,null],[13,"Pause","","A signal to pause the current authority set after the …",210,null],[13,"Resume","","A signal to resume the current authority set after the …",210,null],[4,"GrandpaConsensusLog","","A consensus log item for GrandPa.",null,null],[13,"ScheduledChange","","Schedule an authority set change.",212,null],[13,"ForcedChange","","Force an authority set change.",212,null],[12,"reset_block_height","smoldot::header::GrandpaConsensusLog","",213,null],[12,"change","","",213,null],[13,"OnDisabled","smoldot::header","Note that the authority with given index is disabled …",212,null],[13,"Pause","","A signal to pause the current authority set after the …",212,null],[13,"Resume","","A signal to resume the current authority set after the …",212,null],[3,"GrandpaScheduledChangeRef","","A scheduled change of authority set.",null,null],[12,"next_authorities","","The new authorities after the change, along with their …",214,null],[12,"delay","","The number of blocks to delay.",214,null],[3,"GrandpaScheduledChange","","A scheduled change of authority set.",null,null],[12,"next_authorities","","The new authorities after the change, along with their …",215,null],[12,"delay","","The number of blocks to delay.",215,null],[3,"GrandpaAuthoritiesIter","","List of authorities in a GrandPa context.",null,null],[3,"GrandpaAuthorityRef","","",null,null],[12,"public_key","","Ed25519 public key.",216,null],[12,"weight","","Arbitrary number indicating the weight of the authority.",216,null],[3,"GrandpaAuthority","","",null,null],[12,"public_key","","Ed25519 public key.",217,null],[12,"weight","","Arbitrary number indicating the weight of the authority.",217,null],[5,"hash_from_scale_encoded_header","","Returns a hash of a SCALE-encoded header.",null,[[]]],[5,"hash_from_scale_encoded_header_vectored","","Returns a hash of a SCALE-encoded header.",null,[[]]],[5,"decode","","Attempt to decode the given SCALE-encoded header.",null,[[],[["error",4],["result",4],["headerref",3]]]],[5,"decode_partial","","Attempt to decode the given SCALE-encoded header.",null,[[],[["result",4],["error",4]]]],[4,"Error","","Potential error when decoding a header.",null,null],[13,"TooShort","","Header is not long enough.",218,null],[13,"TooLong","","Header is too long.",218,null],[13,"BlockNumberDecodeError","","Error while decoding the block number.",218,null],[13,"DigestLenDecodeError","","Error while decoding the digest length.",218,null],[13,"DigestItemLenDecodeError","","Error while decoding a digest log item length.",218,null],[13,"DigestItemDecodeError","","Error while decoding a digest item.",218,null],[13,"UnknownDigestLogType","","Digest log item with an unrecognized type.",218,null],[13,"SealIsntLastItem","","Found a seal that isn\'t the last item in the list.",218,null],[13,"BadAuraSealLength","","Bad length of an AURA seal.",218,null],[13,"BadAuraConsensusRefType","","",218,null],[13,"BadAuraAuthoritiesListLen","","",218,null],[13,"MultipleAuraPreRuntimeDigests","","There are multiple Aura pre-runtime digests in the block …",218,null],[13,"BadBabeSealLength","","Bad length of a BABE seal.",218,null],[13,"BadBabePreDigestRefType","","",218,null],[13,"BadBabeConsensusRefType","","",218,null],[13,"MultipleBabePreRuntimeDigests","","There are multiple Babe pre-runtime digests in the block …",218,null],[13,"MultipleBabeEpochDescriptors","","There are multiple Babe epoch descriptor digests in the …",218,null],[13,"MultipleBabeConfigDescriptors","","There are multiple Babe configuration descriptor digests …",218,null],[13,"UnexpectedBabeConfigDescriptor","","Found a Babe configuration change digest without an epoch …",218,null],[13,"GrandpaConsensusLogDecodeError","","",218,null],[13,"UnknownConsensusEngine","","Unknown consensus engine specified in a digest log.",218,null],[3,"HeaderRef","","Header of a block, after decoding.",null,null],[12,"parent_hash","","Hash of the parent block stored in the header.",219,null],[12,"number","","Block number stored in the header.",219,null],[12,"state_root","","The state trie merkle root",219,null],[12,"extrinsics_root","","The merkle root of the extrinsics.",219,null],[12,"digest","","List of auxiliary data appended to the block header.",219,null],[11,"scale_encoding","","Returns an iterator to list of buffers which, when …",219,[[]]],[11,"scale_encoding_vec","","Equivalent to [<code>HeaderRef::scale_encoding</code>] but returns the …",219,[[],["vec",3]]],[11,"hash","","Builds the hash of the header.",219,[[]]],[3,"Header","","Header of a block, after decoding.",null,null],[12,"parent_hash","","Hash of the parent block stored in the header.",220,null],[12,"number","","Block number stored in the header.",220,null],[12,"state_root","","The state trie merkle root",220,null],[12,"extrinsics_root","","The merkle root of the extrinsics.",220,null],[12,"digest","","List of auxiliary data appended to the block header.",220,null],[11,"scale_encoding","","Returns an iterator to list of buffers which, when …",220,[[]]],[11,"hash","","Builds the hash of the header.",220,[[]]],[3,"DigestRef","","Generic header digest.",null,null],[11,"empty","","Returns a digest with empty logs.",221,[[],["digestref",3]]],[11,"has_any_aura","","Returns true if the list has any item that belong to the …",221,[[]]],[11,"has_any_babe","","Returns true if the list has any item that belong to the …",221,[[]]],[11,"aura_seal","","Returns the Aura seal digest item, if any.",221,[[],["option",4]]],[11,"aura_pre_runtime","","Returns the Aura pre-runtime digest item, if any.",221,[[],[["option",4],["aurapredigest",3]]]],[11,"babe_seal","","Returns the Babe seal digest item, if any.",221,[[],["option",4]]],[11,"babe_pre_runtime","","Returns the Babe pre-runtime digest item, if any.",221,[[],[["option",4],["babepredigestref",4]]]],[11,"babe_epoch_information","","Returns the Babe epoch information stored in the header, …",221,[[],["option",4]]],[11,"pop_seal","","If the last element of the list is a seal, removes it …",221,[[],[["option",4],["seal",4]]]],[11,"logs","","Returns an iterator to the log items in this digest.",221,[[],["logsiter",3]]],[11,"scale_encoding","","Returns an iterator to list of buffers which, when …",221,[[]]],[11,"from_slice","","Turns an already-decoded list of items into a [<code>DigestRef</code>].",221,[[],[["result",4],["error",4]]]],[4,"Seal","","Seal poped using [<code>DigestRef::pop_seal</code>].",null,null],[13,"Aura","","",222,null],[13,"Babe","","",222,null],[3,"Digest","","Generic header digest.",null,null],[11,"logs","","Returns an iterator to the log items in this digest.",223,[[],["logsiter",3]]],[11,"aura_seal","","Returns the Aura seal digest item, if any.",223,[[],["option",4]]],[11,"push_aura_seal","","Pushes an Aura seal at the end of the list. Returns an …",223,[[],["result",4]]],[11,"babe_seal","","Returns the Babe seal digest item, if any.",223,[[],["option",4]]],[11,"push_babe_seal","","Pushes a Babe seal at the end of the list. Returns an …",223,[[],["result",4]]],[11,"babe_pre_runtime","","Returns the Babe pre-runtime digest item, if any.",223,[[],[["option",4],["babepredigestref",4]]]],[11,"babe_epoch_information","","Returns the Babe epoch information stored in the header, …",223,[[],["option",4]]],[3,"LogsIter","","Iterator towards the digest log items.",null,null],[4,"DigestItemRef","","",null,null],[13,"AuraPreDigest","","",224,null],[13,"AuraSeal","","Block signature made using the AURA consensus engine.",224,null],[13,"AuraConsensus","","",224,null],[13,"BabePreDigest","","",224,null],[13,"BabeConsensus","","",224,null],[13,"BabeSeal","","Block signature made using the BABE consensus engine.",224,null],[13,"GrandpaConsensus","","",224,null],[13,"ChangesTrieRoot","","",224,null],[13,"ChangesTrieSignal","","",224,null],[11,"is_aura","","True if the item is relevant to the Aura consensus engine.",224,[[]]],[11,"is_babe","","True if the item is relevant to the Babe consensus engine.",224,[[]]],[11,"scale_encoding","","Returns an iterator to list of buffers which, when …",224,[[]]],[4,"DigestItem","","",null,null],[13,"AuraPreDigest","","",225,null],[13,"AuraConsensus","","",225,null],[13,"AuraSeal","","Block signature made using the AURA consensus engine.",225,null],[13,"BabePreDigest","","",225,null],[13,"BabeConsensus","","",225,null],[13,"BabeSeal","","Block signature made using the BABE consensus engine.",225,null],[13,"GrandpaConsensus","","",225,null],[13,"ChangesTrieRoot","","",225,null],[13,"ChangesTrieSignal","","",225,null],[4,"ChangesTrieSignal","","Available changes trie signals.",null,null],[13,"NewConfiguration","","New changes trie configuration is enacted, starting from <strong>…",226,null],[3,"ChangesTrieConfiguration","","Substrate changes trie configuration.",null,null],[12,"digest_interval","","Interval (in blocks) at which level1-digests are created. …",227,null],[12,"digest_levels","","Maximal number of digest levels in hierarchy. 0 means …",227,null],[0,"informant","smoldot","Information string printed out.",null,null],[3,"InformantLine","smoldot::informant","Values used to build the informant line. Implements the […",null,null],[12,"enable_colors","","If true, ANSI escape characters will be written out.",228,null],[12,"chain_name","","Name of the chain.",228,null],[12,"relay_chain","","Extra fields related to the relay chain.",228,null],[12,"max_line_width","","Maximum number of characters of the informant line.",228,null],[12,"num_network_connections","","Number of network connections we are having with the rest …",228,null],[12,"network_known_best","","Best block currently being propagated on the …",228,null],[12,"best_number","","Number of the best block that we have locally.",228,null],[12,"best_hash","","Hash of the best block that we have locally.",228,null],[12,"finalized_number","","Number of the latest finalized block we have locally.",228,null],[12,"finalized_hash","","Hash of the latest finalized block we have locally.",228,null],[3,"RelayChain","","Extra fields if a relay chain exists.",null,null],[12,"chain_name","","Name of the chain.",229,null],[12,"best_number","","Number of the best block that we have locally.",229,null],[3,"HashDisplay","","Implements <code>fmt::Display</code> and displays hashes in a nice way.",null,null],[12,"0","","",230,null],[0,"json_rpc","smoldot","JSON-RPC servers. Trusted access to the blockchain.",null,null],[0,"methods","smoldot::json_rpc","List of requests and how to answer them.",null,null],[5,"parse_json_call","smoldot::json_rpc::methods","Parses a JSON call (usually received from a JSON-RPC …",null,[[],[["result",4],["parseerror",4]]]],[4,"ParseError","","Error produced by [<code>parse_json_call</code>].",null,null],[13,"JsonRpcParse","","Could not parse the body of the message as a valid …",231,null],[13,"UnknownMethod","","Call concerns a method that isn\'t recognized.",231,null],[13,"UnknownNotification","","Call concerns a notification that isn\'t recognized.",231,null],[3,"JsonRpcParseError","","Could not parse the body of the message as a valid …",null,null],[4,"MethodCall","","",null,null],[13,"account_nextIndex","","",232,null],[13,"author_hasKey","","",232,null],[13,"author_hasSessionKeys","","",232,null],[13,"author_insertKey","","",232,null],[13,"author_pendingExtrinsics","","",232,null],[13,"author_removeExtrinsic","","",232,null],[13,"author_rotateKeys","","",232,null],[13,"author_submitAndWatchExtrinsic","","",232,null],[13,"author_submitExtrinsic","","",232,null],[12,"transaction","smoldot::json_rpc::methods::MethodCall","",233,null],[13,"author_unwatchExtrinsic","smoldot::json_rpc::methods","",232,null],[13,"babe_epochAuthorship","","",232,null],[13,"chain_getBlock","","",232,null],[12,"hash","smoldot::json_rpc::methods::MethodCall","",234,null],[13,"chain_getBlockHash","smoldot::json_rpc::methods","",232,null],[12,"height","smoldot::json_rpc::methods::MethodCall","",235,null],[13,"chain_getFinalizedHead","smoldot::json_rpc::methods","",232,null],[13,"chain_getHeader","","",232,null],[12,"hash","smoldot::json_rpc::methods::MethodCall","",236,null],[13,"chain_subscribeAllHeads","smoldot::json_rpc::methods","",232,null],[13,"chain_subscribeFinalizedHeads","","",232,null],[13,"chain_subscribeNewHeads","","",232,null],[13,"chain_unsubscribeAllHeads","","",232,null],[12,"subscription","smoldot::json_rpc::methods::MethodCall","",237,null],[13,"chain_unsubscribeFinalizedHeads","smoldot::json_rpc::methods","",232,null],[12,"subscription","smoldot::json_rpc::methods::MethodCall","",238,null],[13,"chain_unsubscribeNewHeads","smoldot::json_rpc::methods","",232,null],[12,"subscription","smoldot::json_rpc::methods::MethodCall","",239,null],[13,"childstate_getKeys","smoldot::json_rpc::methods","",232,null],[13,"childstate_getStorage","","",232,null],[13,"childstate_getStorageHash","","",232,null],[13,"childstate_getStorageSize","","",232,null],[13,"grandpa_roundState","","",232,null],[13,"offchain_localStorageGet","","",232,null],[13,"offchain_localStorageSet","","",232,null],[13,"payment_queryInfo","","",232,null],[13,"rpc_methods","","",232,null],[13,"state_call","","",232,null],[13,"state_getKeys","","",232,null],[13,"state_getKeysPaged","","",232,null],[12,"prefix","smoldot::json_rpc::methods::MethodCall","",240,null],[12,"count","","",240,null],[12,"start_key","","",240,null],[12,"hash","","",240,null],[13,"state_getMetadata","smoldot::json_rpc::methods","",232,null],[13,"state_getPairs","","",232,null],[13,"state_getReadProof","","",232,null],[13,"state_getRuntimeVersion","","",232,null],[13,"state_getStorage","","",232,null],[12,"key","smoldot::json_rpc::methods::MethodCall","",241,null],[12,"hash","","",241,null],[13,"state_getStorageHash","smoldot::json_rpc::methods","",232,null],[13,"state_getStorageSize","","",232,null],[13,"state_queryStorage","","",232,null],[13,"state_queryStorageAt","","",232,null],[12,"keys","smoldot::json_rpc::methods::MethodCall","",242,null],[12,"at","","",242,null],[13,"state_subscribeRuntimeVersion","smoldot::json_rpc::methods","",232,null],[13,"state_subscribeStorage","","",232,null],[12,"list","smoldot::json_rpc::methods::MethodCall","",243,null],[13,"state_unsubscribeRuntimeVersion","smoldot::json_rpc::methods","",232,null],[13,"state_unsubscribeStorage","","",232,null],[12,"subscription","smoldot::json_rpc::methods::MethodCall","",244,null],[13,"system_accountNextIndex","smoldot::json_rpc::methods","",232,null],[13,"system_addReservedPeer","","",232,null],[13,"system_chain","","",232,null],[13,"system_chainType","","",232,null],[13,"system_dryRun","","",232,null],[13,"system_health","","",232,null],[13,"system_localListenAddresses","","",232,null],[13,"system_localPeerId","","",232,null],[13,"system_name","","",232,null],[13,"system_networkState","","",232,null],[13,"system_nodeRoles","","",232,null],[13,"system_peers","","",232,null],[13,"system_properties","","",232,null],[13,"system_removeReservedPeer","","",232,null],[13,"system_version","","",232,null],[11,"method_names","","Returns a list of RPC method names of all the methods in …",232,[[]]],[4,"Response","","",null,null],[13,"account_nextIndex","","",245,null],[13,"author_hasKey","","",245,null],[13,"author_hasSessionKeys","","",245,null],[13,"author_insertKey","","",245,null],[13,"author_pendingExtrinsics","","",245,null],[13,"author_removeExtrinsic","","",245,null],[13,"author_rotateKeys","","",245,null],[13,"author_submitAndWatchExtrinsic","","",245,null],[13,"author_submitExtrinsic","","",245,null],[13,"author_unwatchExtrinsic","","",245,null],[13,"babe_epochAuthorship","","",245,null],[13,"chain_getBlock","","",245,null],[13,"chain_getBlockHash","","",245,null],[13,"chain_getFinalizedHead","","",245,null],[13,"chain_getHeader","","",245,null],[13,"chain_subscribeAllHeads","","",245,null],[13,"chain_subscribeFinalizedHeads","","",245,null],[13,"chain_subscribeNewHeads","","",245,null],[13,"chain_unsubscribeAllHeads","","",245,null],[13,"chain_unsubscribeFinalizedHeads","","",245,null],[13,"chain_unsubscribeNewHeads","","",245,null],[13,"childstate_getKeys","","",245,null],[13,"childstate_getStorage","","",245,null],[13,"childstate_getStorageHash","","",245,null],[13,"childstate_getStorageSize","","",245,null],[13,"grandpa_roundState","","",245,null],[13,"offchain_localStorageGet","","",245,null],[13,"offchain_localStorageSet","","",245,null],[13,"payment_queryInfo","","",245,null],[13,"rpc_methods","","",245,null],[13,"state_call","","",245,null],[13,"state_getKeys","","",245,null],[13,"state_getKeysPaged","","",245,null],[13,"state_getMetadata","","",245,null],[13,"state_getPairs","","",245,null],[13,"state_getReadProof","","",245,null],[13,"state_getRuntimeVersion","","",245,null],[13,"state_getStorage","","",245,null],[13,"state_getStorageHash","","",245,null],[13,"state_getStorageSize","","",245,null],[13,"state_queryStorage","","",245,null],[13,"state_queryStorageAt","","",245,null],[13,"state_subscribeRuntimeVersion","","",245,null],[13,"state_subscribeStorage","","",245,null],[13,"state_unsubscribeRuntimeVersion","","",245,null],[13,"state_unsubscribeStorage","","",245,null],[13,"system_accountNextIndex","","",245,null],[13,"system_addReservedPeer","","",245,null],[13,"system_chain","","",245,null],[13,"system_chainType","","",245,null],[13,"system_dryRun","","",245,null],[13,"system_health","","",245,null],[13,"system_localListenAddresses","","",245,null],[13,"system_localPeerId","","",245,null],[13,"system_name","","",245,null],[13,"system_networkState","","",245,null],[13,"system_nodeRoles","","",245,null],[13,"system_peers","","",245,null],[13,"system_properties","","",245,null],[13,"system_removeReservedPeer","","",245,null],[13,"system_version","","",245,null],[11,"to_json_response","","Serializes the response into a JSON string.",245,[[],["string",3]]],[3,"HexString","","",null,null],[12,"0","","",246,null],[3,"HashHexString","","",null,null],[12,"0","","",247,null],[3,"Block","","",null,null],[12,"extrinsics","","",248,null],[12,"header","","",248,null],[12,"justification","","",248,null],[3,"Header","","",null,null],[12,"parent_hash","","",249,null],[12,"extrinsics_root","","",249,null],[12,"state_root","","",249,null],[12,"number","","",249,null],[12,"digest","","",249,null],[3,"HeaderDigest","","",null,null],[12,"logs","","",250,null],[3,"RpcMethods","","",null,null],[12,"version","","",251,null],[12,"methods","","",251,null],[3,"RuntimeVersion","","",null,null],[12,"spec_name","","",252,null],[12,"impl_name","","",252,null],[12,"authoring_version","","",252,null],[12,"spec_version","","",252,null],[12,"impl_version","","",252,null],[12,"transaction_version","","",252,null],[12,"apis","","",252,null],[3,"StorageChangeSet","","",null,null],[12,"block","","",253,null],[12,"changes","","",253,null],[3,"SystemHealth","","",null,null],[12,"is_syncing","","",254,null],[12,"peers","","",254,null],[12,"should_have_peers","","",254,null],[3,"SystemPeer","","",null,null],[12,"peer_id","","",255,null],[12,"roles","","",255,null],[12,"best_hash","","",255,null],[12,"best_number","","",255,null],[0,"parse","smoldot::json_rpc","Parse JSON-RPC method calls and notifications, and build …",null,null],[5,"parse_call","smoldot::json_rpc::parse","Parses a JSON-encoded RPC method call or notification.",null,[[],[["result",4],["call",3],["parseerror",3]]]],[3,"Call","","Parsed JSON-RPC call.",null,null],[12,"id_json","","JSON-formatted identifier of the request. <code>None</code> for …",256,null],[12,"method","","Name of the method that is being called.",256,null],[12,"params_json","","JSON-formatted list of parameters.",256,null],[3,"ParseError","","Error while parsing a call.",null,null],[5,"build_success_response","","Builds a JSON response.",null,[[],["string",3]]],[5,"build_subscription_event","","Builds a JSON event to a subscription.",null,[[],["string",3]]],[5,"build_error_response","","Builds a JSON response.",null,[[["option",4],["errorresponse",4]],["string",3]]],[4,"ErrorResponse","","Error that can be reported to the JSON-RPC client.",null,null],[13,"ParseError","","Invalid JSON was received by the server.",257,null],[13,"InvalidRequest","","The JSON sent is not a valid Request object.",257,null],[13,"MethodNotFound","","The method does not exist / is not available.",257,null],[13,"InvalidParams","","Invalid method parameter(s).",257,null],[13,"InternalError","","Internal JSON-RPC error.",257,null],[13,"ServerError","","Other internal server error. Contains a more precise …",257,null],[13,"ApplicationDefined","","Method-specific error. Contains a more precise error code …",257,null],[0,"websocket_server","smoldot::json_rpc","WebSocket server.",null,null],[3,"Config","smoldot::json_rpc::websocket_server","Configuration for a [<code>WsServer</code>].",null,null],[12,"bind_address","","IP address to try to bind to.",258,null],[12,"max_frame_size","","Maximum size, in bytes, of a frame sent by the remote.",258,null],[12,"send_buffer_len","","Number of pending messages to buffer up for sending …",258,null],[12,"capacity","","Pre-allocated capacity for the list of connections.",258,null],[3,"ConnectionId","","Identifier for a connection with regard to a [<code>WsServer</code>].",null,null],[3,"WsServer","","WebSockets listening socket and list of open connections.",null,null],[11,"new","","Try opening a TCP listening socket.",259,[[["config",3]]]],[11,"local_addr","","Address of the local TCP listening socket, as provided by …",259,[[],[["error",3],["result",4],["socketaddr",4]]]],[11,"accept","","Accepts the pending connection.",259,[[],["connectionid",3]]],[11,"reject","","Reject the pending connection.",259,[[]]],[11,"is_empty","","Returns <code>true</code> if there isn\'t any active healthy connection.",259,[[]]],[11,"len","","Returns the number of active healthy connections.",259,[[]]],[11,"connection_user_data","","Returns the user data associated to a connection.",259,[[["connectionid",3]]]],[11,"connection_mut_user_data","","Returns the user data associated to a connection.",259,[[["connectionid",3]]]],[11,"close","","Destroys a connection.",259,[[["connectionid",3]]]],[11,"queue_send","","Queues a text frame to be sent on the given connection.",259,[[["connectionid",3],["string",3]]]],[11,"next_event","","Returns the next event happening on the server.",259,[[]]],[4,"Event","","Event that has happened on a [<code>WsServer</code>].",null,null],[13,"ConnectionOpen","","A new TCP connection has arrived on the listening socket.",260,null],[12,"address","smoldot::json_rpc::websocket_server::Event","Address of the remote, as provided by the operating …",261,null],[13,"ConnectionError","smoldot::json_rpc::websocket_server","An error has happened on a connection. The connection is …",260,null],[12,"connection_id","smoldot::json_rpc::websocket_server::Event","Identifier of the connection. This identifier might be …",262,null],[12,"user_data","","User data associated with the connection.",262,null],[13,"TextFrame","smoldot::json_rpc::websocket_server","A text frame has been received on a connection.",260,null],[12,"connection_id","smoldot::json_rpc::websocket_server::Event","Identifier of the connection that sent the frame.",263,null],[12,"user_data","","User data associated with the connection.",263,null],[12,"message","","Message sent by the remote. Its content is entirely …",263,null],[0,"libp2p","smoldot","Collection of libp2p connections.",null,null],[3,"Multiaddr","smoldot::libp2p","Representation of a Multiaddr.",null,null],[3,"Multiaddr","smoldot::libp2p::multiaddr","Representation of a Multiaddr.",null,null],[3,"Iter","","Iterator over <code>Multiaddr</code> [<code>Protocol</code>]s.",null,null],[5,"wrap","smoldot::libp2p::multiaddr::multihash","Wraps a hash digest in Multihash with the given Mutlihash …",null,[[],["multihashgeneric",3]]],[6,"BoxedMultihashDigest","","This type makes it easier to interact with hashers",null,null],[6,"Multihash","","This type is using the default Multihash code table",null,null],[8,"MultihashDigest","","The <code>MultihashDigest</code> trait specifies an interface common …",null,null],[10,"code","","The Mutlihash byte value.",264,[[]]],[10,"digest","","Hash some input and return the digest.",264,[[],["multihashgeneric",3]]],[10,"input","","Digest data, updating the internal state.",264,[[]]],[10,"result","","Retrieve the computed <code>MultihashGeneric</code>, consuming the …",264,[[],["multihashgeneric",3]]],[10,"result_reset","","Retrieve result and reset hasher instance.",264,[[],["multihashgeneric",3]]],[10,"reset","","Reset hasher instance to its initial state.",264,[[]]],[3,"MultihashGeneric","","Representation of a valid multihash. This enforces …",null,null],[6,"MultihashRef","","This type is using the default Multihash code table",null,null],[3,"MultihashRefGeneric","","Represents a valid multihash.",null,null],[8,"Multihasher","","The <code>Multihasher</code> trait specifies an interface common for …",null,null],[18,"CODE","","The multihash code.",265,null],[10,"digest","","Hash some input and return the digest.",265,[[],["multihashgeneric",3]]],[4,"DecodeError","","Error that can happen when decoding some bytes.",null,null],[13,"BadInputLength","","The input doesn\'t have a correct length.",266,null],[13,"UnknownCode","","The code of the hashing algorithm is incorrect.",266,null],[3,"DecodeOwnedError","","Error that can happen when decoding some bytes.",null,null],[12,"error","","The error.",267,null],[12,"data","","The data whose decoding was attempted.",267,null],[4,"EncodeError","","Error that can happen when encoding some bytes into a …",null,null],[13,"UnsupportedType","","The requested hash algorithm isn\'t supported by this …",268,null],[13,"UnsupportedInputLength","","The input length is too large for the hash algorithm.",268,null],[4,"Code","","The code of Multihash.",null,null],[13,"Identity","","Identity (Raw binary)",269,null],[13,"Sha1","","SHA-1 (20-byte hash size)",269,null],[13,"Sha2_256","","SHA-256 (32-byte hash size)",269,null],[13,"Sha2_512","","SHA-512 (64-byte hash size)",269,null],[13,"Sha3_224","","SHA3-224 (28-byte hash size)",269,null],[13,"Sha3_256","","SHA3-256 (32-byte hash size)",269,null],[13,"Sha3_384","","SHA3-384 (48-byte hash size)",269,null],[13,"Sha3_512","","SHA3-512 (64-byte hash size)",269,null],[13,"Keccak224","","Keccak-224 (28-byte hash size)",269,null],[13,"Keccak256","","Keccak-256 (32-byte hash size)",269,null],[13,"Keccak384","","Keccak-384 (48-byte hash size)",269,null],[13,"Keccak512","","Keccak-512 (64-byte hash size)",269,null],[13,"Blake2b256","","BLAKE2b-256 (32-byte hash size)",269,null],[13,"Blake2b512","","BLAKE2b-512 (64-byte hash size)",269,null],[13,"Blake2s128","","BLAKE2s-128 (16-byte hash size)",269,null],[13,"Blake2s256","","BLAKE2s-256 (32-byte hash size)",269,null],[3,"Identity","","The Identity hasher.",null,null],[3,"Sha1","","The SHA-1 hasher.",null,null],[3,"Sha2_256","","The SHA2-256 hasher.",null,null],[3,"Sha2_512","","The SHA2-512 hasher.",null,null],[3,"Sha3_224","","The SHA3-224 hasher.",null,null],[3,"Sha3_256","","The SHA3-256 hasher.",null,null],[3,"Sha3_384","","The SHA3-384 hasher.",null,null],[3,"Sha3_512","","The SHA3-512 hasher.",null,null],[3,"Keccak224","","The Keccak-224 hasher.",null,null],[3,"Keccak256","","The Keccak-256 hasher.",null,null],[3,"Keccak384","","The Keccak-384 hasher.",null,null],[3,"Keccak512","","The Keccak-512 hasher.",null,null],[3,"Blake2b256","","The Blake2b-256 hasher.",null,null],[3,"Blake2b512","","The Blake2b-512 hasher.",null,null],[3,"Blake2s128","","The Blake2s-128 hasher.",null,null],[3,"Blake2s256","","The Blake2s-256 hasher.",null,null],[6,"Result","smoldot::libp2p::multiaddr","",null,null],[4,"Error","","Error types",null,null],[13,"DataLessThanLen","","",270,null],[13,"InvalidMultiaddr","","",270,null],[13,"InvalidProtocolString","","",270,null],[13,"InvalidUvar","","",270,null],[13,"ParsingError","","",270,null],[13,"UnknownProtocolId","","",270,null],[13,"UnknownProtocolString","","",270,null],[4,"Protocol","","<code>Protocol</code> describes all possible multiaddress protocols.",null,null],[13,"Dccp","","",271,null],[13,"Dns","","",271,null],[13,"Dns4","","",271,null],[13,"Dns6","","",271,null],[13,"Dnsaddr","","",271,null],[13,"Http","","",271,null],[13,"Https","","",271,null],[13,"Ip4","","",271,null],[13,"Ip6","","",271,null],[13,"P2pWebRtcDirect","","",271,null],[13,"P2pWebRtcStar","","",271,null],[13,"P2pWebSocketStar","","",271,null],[13,"Memory","","Contains the \\\"port\\\" to contact. Similar to TCP or UDP, 0 …",271,null],[13,"Onion","","",271,null],[13,"Onion3","","",271,null],[13,"P2p","","",271,null],[13,"P2pCircuit","","",271,null],[13,"Quic","","",271,null],[13,"Sctp","","",271,null],[13,"Tcp","","",271,null],[13,"Udp","","",271,null],[13,"Udt","","",271,null],[13,"Unix","","",271,null],[13,"Utp","","",271,null],[13,"Ws","","",271,null],[13,"Wss","","",271,null],[3,"Onion3Addr","","Represents an Onion v3 address",null,null],[4,"FromUrlErr","","Error while parsing an URL.",null,null],[13,"BadUrl","","Failed to parse the URL.",272,null],[13,"UnsupportedScheme","","The URL scheme was not recognized.",272,null],[13,"InformationLoss","","Some information in the URL would be lost. Never returned …",272,null],[5,"from_url","","Attempts to parse an URL into a multiaddress.",null,[[],[["result",4],["multiaddr",3],["fromurlerr",4]]]],[5,"from_url_lossy","","Attempts to parse an URL into a multiaddress. Ignores …",null,[[],[["result",4],["multiaddr",3],["fromurlerr",4]]]],[14,"multiaddr","","Easy way for a user to create a <code>Multiaddr</code>.",null,null],[0,"connection","smoldot::libp2p","Module containing everything related to the processing of …",null,null],[0,"established","smoldot::libp2p::connection","State machine handling a single TCP or WebSocket libp2p …",null,null],[3,"Established","smoldot::libp2p::connection::established","State machine of a fully-established connection.",null,null],[11,"read_write","","Reads data coming from the socket from <code>incoming_data</code>, …",273,[[["option",4]],[["error",4],["result",4],["readwrite",3]]]],[11,"add_request","","Sends a request to the remote.",273,[[["vec",3]],["substreamid",3]]],[11,"notifications_substream_user_data_mut","","Returns the user dat associated to a notifications …",273,[[["substreamid",3]],["option",4]]],[11,"open_notifications_substream","","Opens a outgoing substream with the given protocol, …",273,[[["vec",3]],["substreamid",3]]],[11,"accept_in_notifications_substream","","Accepts an inbound notifications protocol. Must be called …",273,[[["substreamid",3],["vec",3]]]],[11,"reject_in_notifications_substream","","Rejects an inbound notifications protocol. Must be called …",273,[[["substreamid",3]]]],[11,"write_notification_unbounded","","Queues a notification to be written out on the given …",273,[[["substreamid",3],["vec",3]]]],[11,"notification_substream_queued_bytes","","Returns the number of bytes waiting to be sent out on …",273,[[["substreamid",3]]]],[11,"close_notifications_substream","","Closes a notifications substream.",273,[[["substreamid",3]]]],[3,"SubstreamId","","Identifier of a request or a notifications substream.",null,null],[3,"ReadWrite","","Outcome of [<code>Established::read_write</code>].",null,null],[12,"connection","","Connection object yielded back.",274,null],[12,"read_bytes","","Number of bytes at the start of the incoming buffer that …",274,null],[12,"written_bytes","","Number of bytes written to the outgoing buffer. These …",274,null],[12,"write_close","","If <code>true</code>, the writing side the connection must be closed. …",274,null],[12,"wake_up_after","","If <code>Some</code>, [<code>Established::read_write</code>] should be called again …",274,null],[12,"event","","Event that happened on the connection.",274,null],[4,"Event","","Event that happened on the connection. See […",null,null],[13,"RequestIn","","Received a request in the context of a request-response …",275,null],[12,"id","smoldot::libp2p::connection::established::Event","Identifier of the request. Needs to be provided back when …",276,null],[12,"protocol_index","","Index of the request-response protocol the request was …",276,null],[12,"request","","Bytes of the request. Its interpretation is out of scope …",276,null],[13,"Response","smoldot::libp2p::connection::established","Received a response to a previously emitted request on a …",275,null],[12,"response","smoldot::libp2p::connection::established::Event","Bytes of the response. Its interpretation is out of scope …",277,null],[12,"id","","Identifier of the request. Value that was returned by […",277,null],[12,"user_data","","Value that was passed to [<code>Established::add_request</code>].",277,null],[13,"NotificationsInOpen","smoldot::libp2p::connection::established","Remote has opened an inbound notifications substream.",275,null],[12,"id","smoldot::libp2p::connection::established::Event","Identifier of the substream. Needs to be provided back …",278,null],[12,"protocol_index","","Index of the notifications protocol concerned by the …",278,null],[12,"handshake","","Handshake sent by the remote. Its interpretation is out …",278,null],[13,"NotificationsInOpenCancel","smoldot::libp2p::connection::established","Remote has canceled an inbound notifications substream …",275,null],[12,"id","smoldot::libp2p::connection::established::Event","Identifier of the substream.",279,null],[12,"protocol_index","","Index of the notifications protocol concerned by the …",279,null],[13,"NotificationIn","smoldot::libp2p::connection::established","Remote has sent a notification on an inbound …",275,null],[12,"id","smoldot::libp2p::connection::established::Event","Identifier of the substream.",280,null],[12,"notification","","Notification sent by the remote.",280,null],[13,"NotificationsOutAccept","smoldot::libp2p::connection::established","Remote has accepted a substream opened with […",275,null],[12,"id","smoldot::libp2p::connection::established::Event","Identifier of the substream. Value that was returned by […",281,null],[12,"remote_handshake","","Handshake sent back by the remote. Its interpretation is …",281,null],[13,"NotificationsOutReject","smoldot::libp2p::connection::established","Remote has rejected a substream opened with […",275,null],[12,"id","smoldot::libp2p::connection::established::Event","Identifier of the substream. Value that was returned by […",282,null],[12,"user_data","","Value that was passed to […",282,null],[13,"NotificationsOutCloseDemanded","smoldot::libp2p::connection::established","Remote has closed an outgoing notifications substream, …",275,null],[12,"id","smoldot::libp2p::connection::established::Event","Identifier of the substream. Value that was returned by […",283,null],[13,"NotificationsOutReset","smoldot::libp2p::connection::established","Remote has reset an outgoing notifications substream. The …",275,null],[12,"id","smoldot::libp2p::connection::established::Event","Identifier of the substream. Value that was returned by […",284,null],[12,"user_data","","Value that was passed to […",284,null],[4,"Error","smoldot::libp2p::connection::established","Error during a connection. The connection should be shut …",null,null],[13,"Noise","","Error in the noise cipher. Data has most likely been …",285,null],[13,"Yamux","","Error in the yamux multiplexing protocol.",285,null],[4,"RequestError","","Error that can happen during a request in a …",null,null],[13,"Timeout","","Remote hasn\'t answered in time.",286,null],[13,"ProtocolNotAvailable","","Remote doesn\'t support this protocol.",286,null],[13,"SubstreamClosed","","Remote has decided to close the substream. This most …",286,null],[13,"SubstreamReset","","Remote has decided to RST the substream. This most likely …",286,null],[13,"NegotiationError","","Error during protocol negotiation.",286,null],[13,"ResponseLebError","","Error while receiving the response.",286,null],[3,"ConnectionPrototype","","Successfully negotiated connection. Ready to be turned …",null,null],[11,"into_connection","","Turns this prototype into an actual connection.",287,[[["config",3]],["established",3]]],[3,"Config","","Configuration to turn a [<code>ConnectionPrototype</code>] into a […",null,null],[12,"request_protocols","","List of request-response protocols supported for incoming …",288,null],[12,"notifications_protocols","","List of notifications protocols supported for incoming …",288,null],[12,"ping_protocol","","Name of the ping protocol on the network.",288,null],[12,"randomness_seed","","Seed used for the randomness specific to this connection.",288,null],[3,"ConfigRequestResponse","","Configuration for a request-response protocol.",null,null],[12,"name","","Name of the protocol transferred on the wire.",289,null],[12,"max_request_size","","",289,null],[12,"max_response_size","","",289,null],[12,"inbound_allowed","","If true, incoming substreams are allowed to negotiate …",289,null],[3,"ConfigNotifications","","Configuration for a notifications protocol.",null,null],[12,"name","","Name of the protocol transferred on the wire.",290,null],[12,"max_handshake_size","","Maximum size, in bytes, of the handshake that can be …",290,null],[12,"max_notification_size","","Maximum size, in bytes, of a notification that can be …",290,null],[0,"handshake","smoldot::libp2p::connection","State machine handling the handshake with a TCP or …",null,null],[4,"Handshake","smoldot::libp2p::connection::handshake","Current state of a connection handshake.",null,null],[13,"Healthy","","Connection handshake in progress.",291,null],[13,"NoiseKeyRequired","","Connection handshake has reached the noise handshake, and …",291,null],[13,"Success","","Handshake has succeeded. Connection is now open.",291,null],[12,"remote_peer_id","smoldot::libp2p::connection::handshake::Handshake","Network identity of the remote.",292,null],[12,"connection","","Prototype for the connection.",292,null],[11,"new","smoldot::libp2p::connection::handshake","Shortcut for [<code>HealthyHandshake::new</code>] wrapped in a […",291,[[]]],[3,"HealthyHandshake","","Connection handshake in progress.",null,null],[11,"new","","Initializes a new state machine.",293,[[]]],[11,"read_write","","Feeds data coming from a socket through <code>incoming_data</code>, …",293,[[],[["handshakeerror",4],["result",4]]]],[3,"NoiseKeyRequired","","Connection handshake has reached the noise handshake, and …",null,null],[11,"resume","","Turn this [<code>NoiseKeyRequired</code>] back into a [<code>HealthyHandshake</code>…",294,[[["noisekey",3]],["healthyhandshake",3]]],[4,"HandshakeError","","Error during a connection handshake. The connection …",null,null],[13,"MultistreamSelect","","Protocol error during a multistream-select negotiation.",295,null],[13,"NoiseHandshake","","Protocol error during the noise handshake.",295,null],[13,"NoEncryptionProtocol","","No encryption protocol in common with the remote.",295,null],[13,"NoMultiplexingProtocol","","No multiplexing protocol in common with the remote.",295,null],[13,"Noise","","Error in the noise cipher. Data has most likely been …",295,null],[0,"multistream_select","smoldot::libp2p::connection","Multistream-select is a protocol whose purpose is to …",null,null],[4,"Config","smoldot::libp2p::connection::multistream_select","Configuration of a multistream-select protocol.",null,null],[13,"Dialer","","Local node is the dialing side and requests the specific …",296,null],[12,"requested_protocol","smoldot::libp2p::connection::multistream_select::Config","Name of the protocol to try negotiate. The …",297,null],[13,"Listener","smoldot::libp2p::connection::multistream_select","Local node is the listening side.",296,null],[12,"supported_protocols","smoldot::libp2p::connection::multistream_select::Config","List of protocol names that are supported. In case of …",298,null],[4,"Negotiation","smoldot::libp2p::connection::multistream_select","Current state of a multistream-select negotiation.",null,null],[13,"InProgress","","Negotiation is still in progress. Use the provided […",299,null],[13,"Success","","Negotiation has ended successfully. A protocol has been …",299,null],[13,"NotAvailable","","Negotiation has ended, but there isn\'t any protocol in …",299,null],[11,"new","","Shortcut method for [<code>InProgress::new</code>] and wrapping the […",299,[[["config",4]]]],[3,"InProgress","","Negotiation in progress.",null,null],[11,"new","","Initializes a new handshake state machine.",300,[[["config",4]]]],[11,"read_write","","Feeds data coming from a socket through <code>incoming_data</code>, …",300,[[],[["result",4],["error",4]]]],[11,"read_write_vec","","Similar to [<code>InProgress::read_write</code>], but write the …",300,[[],[["result",4],["error",4]]]],[4,"Error","","Error that can happen during the negotiation.",null,null],[13,"Frame","","Error while decoding a frame length, or frame size limit …",301,null],[13,"BadHandshake","","Unknown handshake or unknown multistream-select protocol …",301,null],[13,"InvalidCommand","","Received empty command.",301,null],[13,"UnexpectedProtocolRequestAnswer","","Received answer to protocol request that doesn\'t match …",301,null],[4,"MessageOut","","Message on the multistream-select protocol.",null,null],[13,"Handshake","","",302,null],[13,"Ls","","",302,null],[13,"LsResponse","","",302,null],[13,"ProtocolRequest","","",302,null],[13,"ProtocolOk","","",302,null],[13,"ProtocolNa","","",302,null],[11,"into_bytes","","Returns the bytes representation of this message, as a …",302,[[]]],[11,"write_out","","Write to the given buffer the bytes of the message, …",302,[[]]],[0,"noise","smoldot::libp2p::connection","Noise protocol libp2p layer.",null,null],[17,"PROTOCOL_NAME","smoldot::libp2p::connection::noise","Name of the protocol, typically used when negotiated it …",null,null],[3,"NoiseKey","","The noise key is the key exchanged during the noise …",null,null],[11,"new","","Generates a new private and public key pair signed with …",303,[[]]],[3,"UnsignedNoiseKey","","Prototype for a [<code>NoiseKey</code>].",null,null],[11,"random","","Generates a new private and public key pair.",304,[[]]],[11,"payload_to_sign","","Returns the data that has to be signed.",304,[[]]],[11,"payload_to_sign_as_vec","","Returns the data that has to be signed.",304,[[],["vec",3]]],[11,"sign","","Turns this [<code>UnsignedNoiseKey</code>] into a [<code>NoiseKey</code>] after …",304,[[],["noisekey",3]]],[3,"Noise","","State of the noise encryption/decryption cipher.",null,null],[11,"inject_inbound_data","","Feeds data received from the wire.",305,[[],[["result",4],["ciphererror",3]]]],[11,"is_initiator","","Returns true if the local side has opened the connection.",305,[[]]],[11,"decoded_inbound_data","","",305,[[]]],[11,"consume_inbound_data","","",305,[[]]],[11,"encrypt","","Reads data from <code>payload</code> and writes it to <code>destination</code>. …",305,[[]]],[11,"encrypt_size_conv","","Returns the size of unencrypted data that fits a buffer …",305,[[]]],[4,"NoiseHandshake","","State of a Noise handshake.",null,null],[13,"InProgress","","Handshake still in progress. More data needs to be sent …",306,null],[13,"Success","","Noise handshake has successfully completed.",306,null],[12,"cipher","smoldot::libp2p::connection::noise::NoiseHandshake","Object to use to encrypt and decrypt all further …",307,null],[12,"remote_peer_id","","[<code>PeerId</code>] of the remote.",307,null],[3,"HandshakeInProgress","smoldot::libp2p::connection::noise","Handshake still in progress. More data needs to be sent …",null,null],[11,"new","","Shortcut function that calls [<code>HandshakeInProgress::new</code>] …",306,[[["noisekey",3]]]],[11,"new","","Initializes a new noise handshake state machine.",308,[[["noisekey",3]]]],[11,"read_write","","Feeds data coming from a socket through <code>incoming_data</code>, …",308,[[],[["result",4],["handshakeerror",4]]]],[4,"HandshakeError","","Potential error during the noise handshake.",null,null],[13,"Cipher","","Error in the decryption state machine.",309,null],[13,"PayloadDecode","","Failed to decode the payload as the …",309,null],[13,"InvalidKey","","Key passed as part of the payload failed to decode into a …",309,null],[13,"UnexpectedPayload","","Received a payload as part of a handshake message when …",309,null],[13,"SignatureVerificationFailed","","Signature of the noise public key by the libp2p key …",309,null],[3,"CipherError","","Error while decoding data.",null,null],[3,"PayloadDecodeError","","Error while decoding the handshake.",null,null],[0,"yamux","smoldot::libp2p::connection","Yamux multiplexing protocol.",null,null],[17,"PROTOCOL_NAME","smoldot::libp2p::connection::yamux","Name of the protocol, typically used when negotiated it …",null,null],[3,"Yamux","","",null,null],[11,"new","","Initializes a new yamux state machine.",310,[[["config",3]],["yamux",3]]],[11,"open_substream","","Opens a new substream.",310,[[],["substreammut",3]]],[11,"user_datas","","Returns an iterator to the list of all substream user …",310,[[]]],[11,"substream_by_id","","Returns a reference to a substream by its ID. Returns <code>None</code>…",310,[[["substreamid",3]],[["option",4],["substreammut",3]]]],[11,"incoming_data","","Process some incoming data.",310,[[],[["error",4],["result",4],["incomingdataoutcome",3]]]],[11,"extract_out","","Returns an object that provides an iterator to a list of …",310,[[],["extractout",3]]],[11,"accept_pending_substream","","",310,[[],["substreammut",3]]],[11,"reject_pending_substream","","",310,[[]]],[3,"Config","","Configuration for a new [<code>Yamux</code>].",null,null],[12,"is_initiator","","<code>true</code> if the local machine has initiated the connection. …",311,null],[12,"capacity","","Expected number of substreams simultaneously open, both …",311,null],[12,"randomness_seed","","Seed used for the randomness. Used to avoid HashDos …",311,null],[3,"SubstreamMut","","Reference to a substream within the [<code>Yamux</code>].",null,null],[11,"id","","Identifier of the substream.",312,[[],["substreamid",3]]],[11,"user_data","","Returns the user data associated to this substream.",312,[[]]],[11,"into_user_data","","Returns the user data associated to this substream.",312,[[]]],[11,"write","","Appends data to the buffer of data to send out on this …",312,[[["vec",3]]]],[11,"queued_bytes","","Returns the number of bytes queued for writing on this …",312,[[]]],[11,"close","","Marks the substream as closed. It is no longer possible …",312,[[],["option",4]]],[11,"reset","","Abruptly shuts down the substream. Its identifier is now …",312,[[]]],[3,"ExtractOut","","",null,null],[11,"buffers","","Returns the list of buffers to write.",313,[[]]],[3,"SubstreamId","","Identifier of a substream in the context of a connection.",null,null],[3,"IncomingDataOutcome","","",null,null],[12,"yamux","","Yamux object on which [<code>Yamux::incoming_data</code>] has been …",314,null],[12,"bytes_read","","Number of bytes read from the incoming buffer. These …",314,null],[12,"detail","","Detail about the incoming data. <code>None</code> if nothing of …",314,null],[4,"IncomingDataDetail","","Details about the incoming data.",null,null],[13,"IncomingSubstream","","Remote has requested to open a new substream.",315,null],[13,"DataFrame","","Received data corresponding to a substream.",315,null],[12,"start_offset","smoldot::libp2p::connection::yamux::IncomingDataDetail","Offset in the buffer passed to [<code>Yamux::incoming_data</code>] …",316,null],[12,"substream_id","","Substream the data belongs to. Guaranteed to be valid.",316,null],[13,"StreamClosed","smoldot::libp2p::connection::yamux","Remote has closed its writing side of the substream.",315,null],[12,"substream_id","smoldot::libp2p::connection::yamux::IncomingDataDetail","Substream that got closed.",317,null],[12,"user_data","","If <code>None</code>, the local writing side is still open and needs …",317,null],[13,"StreamReset","smoldot::libp2p::connection::yamux","Remote has asked to reset a substream.",315,null],[12,"substream_id","smoldot::libp2p::connection::yamux::IncomingDataDetail","Substream that has been destroyed. No longer valid.",318,null],[12,"user_data","","User data that was associated to this substream.",318,null],[4,"Error","smoldot::libp2p::connection::yamux","Error while decoding the yamux stream.",null,null],[13,"UnknownVersion","","Unknown version number in a header.",319,null],[13,"BadFrameType","","Unrecognized value for the type of frame as indicated in …",319,null],[13,"UnknownFlags","","Received flags whose meaning is unknown.",319,null],[13,"BadPingFlags","","Received a PING frame with invalid flags.",319,null],[13,"ZeroSubstreamId","","Substream ID was zero in a data of window update frame.",319,null],[13,"UnexpectedSyn","","Received a SYN flag with a known substream ID.",319,null],[13,"CreditsExceeded","","Remote tried to send more data than it was allowed to.",319,null],[13,"LocalCreditsOverflow","","Number of credits allocated to the local node has …",319,null],[13,"WriteAfterFin","","Remote sent additional data on a substream after having …",319,null],[13,"DataWithRst","","Remote has sent a data frame containing data at the same …",319,null],[0,"discovery","smoldot::libp2p","Mechanisms related to discovering nodes that are part of …",null,null],[0,"kademlia","smoldot::libp2p::discovery","",null,null],[3,"Kademlia","smoldot::libp2p::discovery::kademlia","Data structure containing the k-buckets and the state of …",null,null],[11,"new","","Initializes a new empty data structure with empty …",320,[[]]],[5,"build_find_node_request","","Builds a wire message to send on the Kademlia …",null,[[],["vec",3]]],[5,"decode_find_node_response","","Decodes a response to a request built using […",null,[[],[["result",4],["vec",3],["decodefindnoderesponseerror",4]]]],[4,"DecodeFindNodeResponseError","","Error potentially returned by [<code>decode_find_node_response</code>].",null,null],[13,"ProtobufDecode","","Error while decoding the protobuf encoding.",321,null],[13,"BadResponseTy","","Response isn\'t a response to a find node request.",321,null],[13,"BadPeerId","","Error while parsing a [<code>peer_id::PeerId</code>] in the response.",321,null],[13,"BadMultiaddr","","Error while parsing a [<code>multiaddr::Multiaddr</code>] in the …",321,null],[3,"ProtobufDecodeError","","Error while decoding the protobuf encoding.",null,null],[0,"peer_id","smoldot::libp2p","",null,null],[4,"PublicKey","smoldot::libp2p::peer_id","Public key of a node\'s identity.",null,null],[13,"Ed25519","","An ed25519 public key.",322,null],[11,"into_protobuf_encoding","","Encode the public key into a protobuf structure for …",322,[[],["vec",3]]],[11,"from_protobuf_encoding","","Decode a public key from a protobuf structure, e.g. read …",322,[[],[["fromprotobufencodingerror",4],["result",4],["publickey",4]]]],[11,"into_peer_id","","Convert the [<code>PublicKey</code>] into the corresponding [<code>PeerId</code>].",322,[[],["peerid",3]]],[11,"verify","","Verifies whether the given signature is valid for the …",322,[[],["result",4]]],[4,"FromProtobufEncodingError","","Error potentially returned by […",null,null],[13,"ProtobufDecodeError","","Error decoding the protobuf message.",323,null],[13,"UnknownAlgorithm","","Public key algorithm unknown.",323,null],[13,"BadEd25519Key","","Ed25519 key doesn\'t have a correct length.",323,null],[13,"UnsupportedAlgorithm","","Algorithms other than ed25519 aren\'t supported.",323,null],[3,"PeerId","","Identifier of a node of the network.",null,null],[11,"from_public_key","","Builds the [<code>PeerId</code>] corresponding to a public key.",324,[[["publickey",4]],["peerid",3]]],[11,"from_bytes","","Checks whether <code>data</code> is a valid [<code>PeerId</code>].",324,[[["vec",3]],[["peerid",3],["result",4]]]],[11,"from_multihash","","Turns a <code>Multihash</code> into a <code>PeerId</code>. If the multihash doesn\'t …",324,[[["multihash",6]],[["peerid",3],["result",4]]]],[11,"into_bytes","","Returns a raw bytes representation of this <code>PeerId</code>.",324,[[],["vec",3]]],[11,"as_bytes","","Returns a raw bytes representation of this <code>PeerId</code>.",324,[[]]],[11,"to_base58","","Returns a base-58 encoded string of this <code>PeerId</code>.",324,[[],["string",3]]],[11,"is_public_key","","Checks whether the public key passed as parameter matches …",324,[[["publickey",4]],["option",4]]],[4,"FromBytesError","","Error when turning bytes into a [<code>PeerId</code>].",null,null],[13,"DecodeError","","Failed to decode bytes into a multihash.",325,null],[13,"InvalidMultihash","","Multihash isn\'t a valid [<code>PeerId</code>].",325,null],[4,"FromMultihashError","","Error when turning a mulithash into a [<code>PeerId</code>].",null,null],[13,"BadAlgorithm","","Algorithm used into the multihash isn\'t correct.",326,null],[13,"InvalidPublicKey","","Multihash uses the identity algorithm, but the data isn\'t …",326,null],[4,"ParseError","","Error when parsing a string to a [<code>PeerId</code>].",null,null],[13,"Bs58","","Error decoding the base58 encoding.",327,null],[13,"Multihash","","Decoded bytes aren\'t a valid [<code>PeerId</code>].",327,null],[3,"Bs58DecodeError","","Error when decoding base58 encoding.",null,null],[0,"peerset","smoldot::libp2p","Data structure storing a networking state. Helper for …",null,null],[3,"Config","smoldot::libp2p::peerset","Configuration for a [<code>Peerset</code>].",null,null],[12,"peers_capacity","","Capacity to reserve for containers having a number of …",328,null],[12,"num_overlay_networks","","Number of overlay networks managed by the [<code>Peerset</code>]. The …",328,null],[12,"randomness_seed","","Seed for the randomness used to decide how peers are …",328,null],[3,"Peerset","","See the module-level documentation.",null,null],[4,"SubstreamDirection","","Direction of a substream.",null,null],[13,"In","","Substream opened by the remote.",329,null],[13,"Out","","Substream opened by the local node.",329,null],[11,"new","","Creates a [<code>Peerset</code>] with the given configuration.",330,[[["config",3]]]],[11,"num_established_connections","","Returns the number of established connections in the …",330,[[]]],[11,"connections_peer_ids","","Returns the [<code>PeerId</code>]s of all active connections.",330,[[]]],[11,"num_overlay_networks","","Returns the number of overlay networks registered towards …",330,[[]]],[11,"overlay_network_nodes","","Returns the list of nodes that belong to the given …",330,[[]]],[11,"random_connected_closed_node","","Returns a random node in the list of nodes that match the …",330,[[],[["nodemutknown",3],["option",4]]]],[11,"random_not_connected","","Returns a random node in the list of nodes that match the …",330,[[],[["nodemutknown",3],["option",4]]]],[11,"pending_mut","","Gives access to a pending connection within the [<code>Peerset</code>].",330,[[["connectionid",3]],[["pendingmut",3],["option",4]]]],[11,"connection_mut","","Gives access to a connection within the [<code>Peerset</code>].",330,[[["connectionid",3]],[["connectionmut",3],["option",4]]]],[11,"pending_or_connection_mut","","Gives access to a connection within the [<code>Peerset</code>].",330,[[["connectionid",3]],[["option",4],["pendingorconnectionmut",4]]]],[11,"node_mut","","Gives access to the state of the node with the given …",330,[[["peerid",3]],["nodemut",4]]],[4,"PendingOrConnectionMut","","Access to a connection in the [<code>Peerset</code>].",null,null],[13,"Pending","","Connection is in the pending state.",331,null],[13,"Connection","","Connection is in the established state.",331,null],[3,"ConnectionId","","Identifier for a connection in a [<code>Peerset</code>].",null,null],[3,"ConnectionMut","","Access to a connection in the [<code>Peerset</code>].",null,null],[11,"id","","Returns the identifier of this connection.",332,[[],["connectionid",3]]],[11,"peer_id","","[<code>PeerId</code>] the connection is connected to.",332,[[],["peerid",3]]],[11,"is_inbound","","Returns true if the connection is inbound.",332,[[]]],[11,"add_pending_substream","","Adds a pending substream of the given overlay network and …",332,[[["substreamdirection",4]],["result",4]]],[11,"confirm_substream","","Turns a pending substream into an established substream.",332,[[["substreamdirection",4]],["result",4]]],[11,"pending_substream_user_data_mut","","Returns the user data, if any, of a pending substream on …",332,[[["substreamdirection",4]],["option",4]]],[11,"remove_pending_substream","","Removes a pending substream.",332,[[["substreamdirection",4]],["result",4]]],[11,"has_open_substream","","Returns <code>true</code> if there exists an open substream on this …",332,[[["substreamdirection",4]]]],[11,"open_substreams_mut","","Returns the list of open substreams of this connection.",332,[[]]],[11,"user_data_mut","","Gives access to the user data associated with the …",332,[[]]],[11,"into_user_data","","Gives access to the user data associated with the …",332,[[]]],[11,"remove","","Removes the connection from the data structure.",332,[[]]],[3,"PendingMut","","Access to a connection in the [<code>Peerset</code>].",null,null],[11,"peer_id","","[<code>PeerId</code>] the connection is trying to connect to.",333,[[],["peerid",3]]],[11,"address","","Address the connection is trying to reach.",333,[[],["multiaddr",3]]],[11,"into_established","","Turns this pending connection into an established …",333,[[],["connectionmut",3]]],[11,"user_data_mut","","Gives access to the user data associated with the …",333,[[]]],[11,"into_user_data","","Gives access to the user data associated with the …",333,[[]]],[11,"remove","","Removes the pending connection from the data structure.",333,[[]]],[11,"remove_and_purge_address","","Same as [<code>PendingMut::remove</code>], but additionally removes …",333,[[]]],[4,"NodeMut","","Access to a node in the [<code>Peerset</code>].",null,null],[13,"Known","","Node is already known to the data structure.",334,null],[13,"Unknown","","Node isn\'t known by the data structure.",334,null],[11,"or_insert_with","","If [<code>NodeMut::Unknown</code>], calls the passed closure in order …",334,[[],["nodemutknown",3]]],[11,"or_default","","Shortcut for <code>or_insert_with(Default::default)</code>.",334,[[],["nodemutknown",3]]],[11,"into_known","","Shortcut method. If [<code>NodeMut::Known</code>], returns a <code>Some</code> …",334,[[],[["nodemutknown",3],["option",4]]]],[3,"NodeMutKnown","","Access to a node is already known to the data structure.",null,null],[11,"peer_id","","Returns the network identity of the node.",335,[[],["peerid",3]]],[11,"add_inbound_connection","","Adds in the data structure an inbound connection with …",335,[[],["connectionid",3]]],[11,"add_outbound_attempt","","",335,[[["multiaddr",3]],["connectionid",3]]],[11,"connections","","Returns an iterator to the list of current established …",335,[[]]],[11,"pending_connections","","Returns an iterator to the list of current pending …",335,[[]]],[11,"add_known_address","","Adds an address to the list of addresses the node is …",335,[[["multiaddr",3]]]],[11,"remove_known_address","","Removes an address from the list of known addresses.",335,[[["multiaddr",3]],["result",4]]],[11,"known_addresses","","Returns an iterator to the list of addresses known for …",335,[[]]],[11,"known_addresses_no_pending","","Returns an iterator to the list of addresses known for …",335,[[]]],[11,"add_to_overlay","","Adds the node to an overlay network.",335,[[]]],[11,"remove_from_overlay","","Removes the node from an overlay network.",335,[[]]],[11,"user_data_mut","","Gives access to the user data associated with the node.",335,[[]]],[11,"into_user_data","","Gives access to the user data associated with the node.",335,[[]]],[3,"NodeMutUnknown","","Access to a node that isn\'t known to the data structure.",null,null],[11,"peer_id","","Returns the [<code>PeerId</code>] of that node.",336,[[],["peerid",3]]],[11,"insert","","Inserts the node into the data structure. Returns a […",336,[[],["nodemutknown",3]]],[3,"Config","smoldot::libp2p","Configuration for a [<code>Network</code>].",null,null],[12,"randomness_seed","","Seed for the randomness within the networking state …",337,null],[12,"listen_addresses","","Addresses to listen for incoming connections.",337,null],[12,"overlay_networks","","",337,null],[12,"request_response_protocols","","",337,null],[12,"ping_protocol","","Name of the ping protocol on the network.",337,null],[12,"known_nodes","","",337,null],[12,"noise_key","","Key used for the encryption layer. This is a Noise static …",337,null],[12,"pending_api_events_buffer_size","","Number of events that can be buffered internally before …",337,null],[3,"OverlayNetwork","","Configuration for a specific overlay network.",null,null],[12,"protocol_name","","Name of the protocol negotiated on the wire.",338,null],[12,"fallback_protocol_names","","Optional alternative names for this protocol. Can …",338,null],[12,"max_handshake_size","","Maximum size, in bytes, of the handshake that can be …",338,null],[12,"max_notification_size","","Maximum size, in bytes, of a notification that can be …",338,null],[12,"bootstrap_nodes","","List of node identities that are known to belong to this …",338,null],[12,"in_slots","","",338,null],[12,"out_slots","","",338,null],[3,"PendingId","","Identifier of a pending connection requested by the …",null,null],[3,"ConnectionId","","Identifier of a connection spawned by the [<code>Network</code>].",null,null],[3,"Network","","Data structure containing the list of all connections, …",null,null],[11,"new","","Initializes a new network data structure.",339,[[["config",3]]]],[11,"num_established_connections","","Returns the number of established TCP connections, both …",339,[[]]],[11,"peers_list_lock","","Returns an iterator to the list of [<code>PeerId</code>]s that we have …",339,[[]]],[11,"add_addresses","","",339,[[["peerid",3]]]],[11,"add_incoming_connection","","",339,[[["multiaddr",3],["multiaddr",3]],["connectionid",3]]],[11,"request","","Sends a request to the given peer, and waits for a …",339,[[["vec",3],["peerid",3]]]],[11,"queue_notification","","Adds a notification to the queue of notifications to send …",339,[[["peerid",3]]]],[11,"pending_outcome_ok","","After calling [<code>Network::fill_out_slots</code>], notifies the […",339,[[["pendingid",3]]]],[11,"pending_outcome_err","","After calling [<code>Network::fill_out_slots</code>], notifies the […",339,[[["pendingid",3]]]],[11,"accept_notifications_in","","",339,[[["vec",3],["connectionid",3]]]],[11,"next_event","","Returns the next event produced by the service.",339,[[]]],[11,"read_write","","PanicPanics if <code>connection_id</code> isn\'t a valid connection.",339,[[["option",4],["connectionid",3]]]],[11,"open_next_substream","","",339,[[]]],[11,"fill_out_slots","","Spawns new outgoing connections in order to fill empty …",339,[[]]],[3,"StartConnect","","User must start connecting to the given multiaddress.",null,null],[12,"id","","",340,null],[12,"multiaddr","","",340,null],[4,"Event","","Event generated by [<code>Network::next_event</code>].",null,null],[13,"Connected","","Established a transport-level connection (e.g. a TCP …",341,null],[13,"Disconnected","","A transport-level connection (e.g. a TCP socket) has been …",341,null],[12,"peer_id","smoldot::libp2p::Event","",342,null],[12,"user_data","","",342,null],[12,"out_overlay_network_indices","","",342,null],[12,"in_overlay_network_indices","","",342,null],[13,"NotificationsOutAccept","smoldot::libp2p","",341,null],[12,"id","smoldot::libp2p::Event","",343,null],[12,"peer_id","","",343,null],[12,"overlay_network_index","","",343,null],[12,"remote_handshake","","",343,null],[13,"NotificationsOutReject","smoldot::libp2p","",341,null],[12,"id","smoldot::libp2p::Event","",344,null],[12,"peer_id","","",344,null],[12,"overlay_network_index","","",344,null],[13,"NotificationsOutClose","smoldot::libp2p","",341,null],[12,"id","smoldot::libp2p::Event","",345,null],[12,"peer_id","","",345,null],[12,"overlay_network_index","","",345,null],[13,"NotificationsInOpen","smoldot::libp2p","",341,null],[12,"id","smoldot::libp2p::Event","",346,null],[12,"overlay_network_index","","",346,null],[12,"remote_handshake","","",346,null],[13,"NotificationsIn","smoldot::libp2p","",341,null],[12,"id","smoldot::libp2p::Event","",347,null],[12,"peer_id","","",347,null],[12,"has_symmetric_substream","","<code>true</code> if there exists an open outbound substream with this …",347,null],[12,"overlay_network_index","","",347,null],[12,"notification","","",347,null],[3,"ReadWrite","smoldot::libp2p","Outcome of calling [<code>Network::read_write</code>].",null,null],[12,"read_bytes","","Number of bytes at the start of the incoming buffer that …",348,null],[12,"written_bytes","","Number of bytes written to the outgoing buffer. These …",348,null],[12,"wake_up_after","","If <code>Some</code>, [<code>Network::read_write</code>] should be called again …",348,null],[12,"wake_up_future","","[<code>Network::read_write</code>] should be called again when this […",348,null],[12,"write_close","","If <code>true</code>, the writing side the connection must be closed. …",348,null],[3,"ConnectionReadyFuture","","Future ready when a connection has data to give out via […",null,null],[4,"ConnectionError","","Protocol error within the context of a connection. See […",null,null],[13,"Established","","Protocol error after the connection has been established.",349,null],[13,"Handshake","","Protocol error during the handshake phase.",349,null],[13,"PeerIdMismatch","","Mismatch between the actual [<code>PeerId</code>] and the [<code>PeerId</code>] …",349,null],[3,"SubstreamOpen","","",null,null],[11,"overlay_network_index","","Returns the index of the overlay network whose …",350,[[]]],[11,"open","","Perform the substream opening.",350,[[]]],[4,"RequestError","","Error potentially returned by [<code>Network::request</code>].",null,null],[13,"NotConnected","","Not connected to target.",351,null],[13,"ConnectionClosed","","Connection has been unexpectedly closed by the remote …",351,null],[13,"Connection","","Error in the context of the connection.",351,null],[4,"QueueNotificationError","","Error potentially returned by [<code>Network::queue_notification</code>…",null,null],[13,"NotConnected","","Not connected to target.",352,null],[13,"NoSubstream","","No substream with the given target of the given protocol.",352,null],[13,"QueueFull","","Queue of notifications with that peer is full.",352,null],[0,"metadata","smoldot","Runtime-provided metadata",null,null],[0,"decode","smoldot::metadata","",null,null],[3,"MetadataRef","smoldot::metadata::decode","",null,null],[12,"modules","","",353,null],[12,"extrinsic","","",353,null],[3,"ModuleMetadataRef","","All metadata about an runtime module.",null,null],[12,"name","","",354,null],[12,"storage","","",354,null],[12,"calls","","",354,null],[12,"event","","",354,null],[12,"constants","","",354,null],[12,"errors","","",354,null],[3,"StorageMetadataRef","","All metadata of the storage.",null,null],[12,"prefix","","The common prefix used by all storage entries.",355,null],[12,"entries","","",355,null],[3,"StorageEntryMetadataRef","","All the metadata about one storage entry.",null,null],[12,"name","","",356,null],[12,"modifier","","",356,null],[12,"ty","","",356,null],[12,"default","","",356,null],[12,"documentation","","",356,null],[4,"StorageEntryModifier","","A storage entry modifier.",null,null],[13,"Optional","","",357,null],[13,"Default","","",357,null],[4,"StorageEntryTypeRef","","A storage entry type.",null,null],[13,"Plain","","",358,null],[13,"Map","","",358,null],[12,"hasher","smoldot::metadata::decode::StorageEntryTypeRef","",359,null],[12,"key","","",359,null],[12,"value","","",359,null],[13,"DoubleMap","smoldot::metadata::decode","",358,null],[12,"hasher","smoldot::metadata::decode::StorageEntryTypeRef","",360,null],[12,"key1","","",360,null],[12,"key2","","",360,null],[12,"value","","",360,null],[12,"key2_hasher","","",360,null],[4,"StorageHasher","smoldot::metadata::decode","Hasher used by storage maps",null,null],[13,"Blake2_128","","",361,null],[13,"Blake2_256","","",361,null],[13,"Blake2_128Concat","","",361,null],[13,"Twox128","","",361,null],[13,"Twox256","","",361,null],[13,"Twox64Concat","","",361,null],[13,"Identity","","",361,null],[3,"FunctionMetadataRef","","All the metadata about a function.",null,null],[12,"name","","",362,null],[12,"arguments","","",362,null],[12,"documentation","","",362,null],[3,"FunctionArgumentMetadataRef","","All the metadata about a function argument.",null,null],[12,"name","","",363,null],[12,"ty","","",363,null],[3,"EventMetadataRef","","All the metadata about an event.",null,null],[12,"name","","",364,null],[12,"arguments","","",364,null],[12,"documentation","","",364,null],[3,"ModuleConstantMetadataRef","","All the metadata about one module constant.",null,null],[12,"name","","",365,null],[12,"ty","","",365,null],[12,"value","","",365,null],[12,"documentation","","",365,null],[3,"ErrorMetadataRef","","All the metadata about a module error.",null,null],[12,"name","","",366,null],[12,"documentation","","",366,null],[3,"ExtrinsicMetadataRef","","",null,null],[12,"version","","Extrinsic version.",367,null],[12,"signed_extensions","","The signed extensions in the order they appear in the …",367,null],[3,"DecodeError","","Error that can happen during the decoding.",null,null],[3,"UndecodedIter","","",null,null],[5,"metadata_from_runtime_code","smoldot::metadata","Retrieves the SCALE-encoded metadata from the runtime …",null,[[],[["vec",3],["result",4],["error",4]]]],[5,"metadata_from_virtual_machine_prototype","","Retrieves the SCALE-encoded metadata from the given …",null,[[["hostvmprototype",3]],[["result",4],["error",4]]]],[4,"Error","","Error when retrieving the metadata.",null,null],[13,"VmInitialization","","Error when initializing the virtual machine.",368,null],[13,"VmStart","","Error when starting the virtual machine.",368,null],[13,"Trapped","","Crash while running the virtual machine.",368,null],[13,"HostFunctionNotAllowed","","Virtual machine tried to call a host function that isn\'t …",368,null],[13,"BadLengthPrefix","","Length prefix doesn\'t match actual length of the metadata.",368,null],[5,"decode","","Decodes the given SCALE-encoded metadata.",null,[[],[["metadataref",3],["result",4],["decodeerror",3]]]],[0,"network","smoldot","",null,null],[3,"Multiaddr","smoldot::network","Representation of a Multiaddr.",null,null],[0,"protocol","","Substrate/Polkadot-specific protocols on top of libp2p.",null,null],[3,"BlockAnnouncesHandshakeRef","smoldot::network::protocol","Decoded handshake sent or received when opening a block …",null,null],[12,"role","","Role a node reports playing on the network.",369,null],[12,"best_number","","Height of the best block according to this node.",369,null],[12,"best_hash","","Hash of the best block according to this node.",369,null],[12,"genesis_hash","","Hash of the genesis block according to this node.",369,null],[4,"Role","","Role a node reports playing on the network.",null,null],[13,"Full","","",370,null],[13,"Light","","",370,null],[13,"Authority","","",370,null],[3,"BlockAnnounceRef","","Decoded block announcement notification.",null,null],[12,"header","","Header of the announced block.",371,null],[12,"is_best","","True if the block is the new best block of the announcer.",371,null],[5,"encode_block_announce","","Turns a block announcement into its SCALE-encoding ready …",null,[[["blockannounceref",3]]]],[5,"decode_block_announce","","Decodes a block announcement.",null,[[],[["blockannounceref",3],["decodeblockannounceerror",3],["result",4]]]],[3,"DecodeBlockAnnounceError","","Error potentially returned by […",null,null],[5,"encode_block_announces_handshake","","Turns a block announces handshake into its SCALE-encoding …",null,[[["blockannounceshandshakeref",3]]]],[5,"decode_block_announces_handshake","","Decodes a SCALE-encoded block announces handshake.",null,[[],[["result",4],["blockannounceshandshakeref",3],["blockannounceshandshakedecodeerror",3]]]],[3,"BlockAnnouncesHandshakeDecodeError","","Error potentially returned by […",null,null],[3,"BlocksRequestConfig","","Description of a block request that can be sent to a peer.",null,null],[12,"start","","First block that the remote must return.",372,null],[12,"desired_count","","Number of blocks to request. The remote is free to return …",372,null],[12,"direction","","Whether the first block should be the one with the …",372,null],[12,"fields","","Which fields should be present in the response.",372,null],[4,"BlocksRequestDirection","","Whether the first block should be the one with the …",null,null],[13,"Ascending","","Blocks should be returned in ascending number, starting …",373,null],[13,"Descending","","Blocks should be returned in descending number, starting …",373,null],[3,"BlocksRequestFields","","Which fields should be present in the response.",null,null],[12,"header","","",374,null],[12,"body","","",374,null],[12,"justification","","",374,null],[4,"BlocksRequestConfigStart","","Which block the remote must return first.",null,null],[13,"Hash","","Hash of the block.",375,null],[13,"Number","","Number of the block, where 0 would be the genesis block.",375,null],[5,"build_block_request","","Builds the bytes corresponding to a block request.",null,[[["blocksrequestconfig",3]]]],[5,"decode_block_response","","Decodes a response to a block request.",null,[[],[["result",4],["decodeblockresponseerror",4],["vec",3]]]],[3,"BlockData","","Block sent in a block response.",null,null],[12,"hash","","Block hash.",376,null],[12,"header","","SCALE-encoded block header, if requested.",376,null],[12,"body","","Block body, if requested.",376,null],[12,"justification","","Justification, if requested and available.",376,null],[4,"DecodeBlockResponseError","","Error potentially returned by [<code>decode_block_response</code>].",null,null],[13,"ProtobufDecode","","Error while decoding the protobuf encoding.",377,null],[13,"InvalidHashLength","","Hash length isn\'t of the correct length.",377,null],[13,"BodyDecodeError","","",377,null],[4,"GrandpaNotificationRef","","",null,null],[13,"Vote","","",378,null],[13,"Commit","","",378,null],[13,"Neighbor","","",378,null],[13,"CatchUpRequest","","",378,null],[13,"CatchUp","","",378,null],[3,"VoteMessageRef","","",null,null],[12,"round_number","","",379,null],[12,"set_id","","",379,null],[12,"message","","",379,null],[12,"signature","","",379,null],[12,"authority_public_key","","",379,null],[4,"MessageRef","","",null,null],[13,"Prevote","","",380,null],[13,"Precommit","","",380,null],[13,"PrimaryPropose","","",380,null],[3,"UnsignedPrevoteRef","","",null,null],[12,"target_hash","","",381,null],[12,"target_number","","",381,null],[3,"UnsignedPrecommitRef","","",null,null],[12,"target_hash","","",382,null],[12,"target_number","","",382,null],[3,"PrimaryProposeRef","","",null,null],[12,"target_hash","","",383,null],[12,"target_number","","",383,null],[3,"CommitMessageRef","","",null,null],[12,"round_number","","",384,null],[12,"set_id","","",384,null],[12,"message","","",384,null],[3,"CompactCommitRef","","",null,null],[12,"target_hash","","",385,null],[12,"target_number","","",385,null],[12,"precommits","","",385,null],[12,"auth_data","","List of ed25519 signatures and public keys.",385,null],[3,"NeighborPacket","","",null,null],[12,"round_number","","",386,null],[12,"set_id","","",386,null],[12,"commit_finalized_height","","",386,null],[3,"CatchUpRequest","","",null,null],[12,"round_number","","",387,null],[12,"set_id","","",387,null],[3,"CatchUpRef","","",null,null],[12,"round_number","","",388,null],[12,"prevotes","","",388,null],[12,"precommits","","",388,null],[12,"base_hash","","",388,null],[12,"base_number","","",388,null],[3,"PrevoteRef","","",null,null],[12,"target_hash","","Hash of the block concerned by the pre-vote.",389,null],[12,"target_number","","Height of the block concerned by the pre-vote.",389,null],[12,"signature","","Ed25519 signature made with […",389,null],[12,"authority_public_key","","Authority that signed the pre-vote. Must be part of the …",389,null],[5,"decode_grandpa_notification","","Attempt to decode the given SCALE-encoded Grandpa …",null,[[],[["grandpanotificationref",4],["decodegrandpanotificationerror",3],["result",4]]]],[3,"DecodeGrandpaNotificationError","","Error potentially returned by [<code>decode_grandpa_notification</code>…",null,null],[3,"GrandpaWarpSyncResponseFragment","","",null,null],[12,"header","","",390,null],[12,"justification","","",390,null],[4,"DecodeGrandpaWarpSyncResponseError","","Error returned by [<code>decode_grandpa_warp_sync_response</code>].",null,null],[13,"BadResponse","","",391,null],[5,"decode_grandpa_warp_sync_response","","",null,[[],[["result",4],["vec",3],["decodegrandpawarpsyncresponseerror",4]]]],[3,"StorageProofRequestConfig","","Description of a storate proof request that can be sent …",null,null],[12,"block_hash","","Hash of the block to request the storage of.",392,null],[12,"keys","","List of storage keys to query.",392,null],[5,"build_storage_proof_request","","Builds the bytes corresponding to a storage proof request.",null,[[["storageproofrequestconfig",3]]]],[5,"decode_storage_proof_response","","Decodes a response to a storage proof request.",null,[[],[["decodestorageproofresponseerror",4],["result",4],["vec",3]]]],[4,"DecodeStorageProofResponseError","","Error potentially returned by […",null,null],[13,"ProtobufDecode","","Error while decoding the protobuf encoding.",393,null],[13,"BadResponseTy","","Response isn\'t a response to a storage proof request.",393,null],[13,"ProofDecodeError","","Failed to decode response as a storage proof.",393,null],[3,"ProtobufDecodeError","","Error while decoding the protobuf encoding.",null,null],[0,"service","smoldot::network","",null,null],[3,"Config","smoldot::network::service","Configuration for a [<code>ChainNetwork</code>].",null,null],[12,"randomness_seed","","Seed for the randomness within the networking state …",394,null],[12,"listen_addresses","","Addresses to listen for incoming connections.",394,null],[12,"chains","","List of blockchain peer-to-peer networks to be connected …",394,null],[12,"known_nodes","","",394,null],[12,"noise_key","","Key used for the encryption layer. This is a Noise static …",394,null],[12,"pending_api_events_buffer_size","","Number of events that can be buffered internally before …",394,null],[3,"ChainConfig","","Configuration for a specific overlay network.",null,null],[12,"protocol_id","","Identifier of the protocol, used on the wire to determine …",395,null],[12,"bootstrap_nodes","","List of node identities that are known to belong to this …",395,null],[12,"in_slots","","",395,null],[12,"out_slots","","",395,null],[12,"best_hash","","Hash of the best block according to the local node.",395,null],[12,"best_number","","Height of the best block according to the local node.",395,null],[12,"genesis_hash","","Hash of the genesis block (i.e. block number 0) according …",395,null],[12,"role","","",395,null],[3,"PendingId","","Identifier of a pending connection requested by the …",null,null],[3,"ConnectionId","","Identifier of a connection spawned by the [<code>ChainNetwork</code>].",null,null],[3,"ChainNetwork","","Data structure containing the list of all connections, …",null,null],[11,"new","","Initializes a new [<code>ChainNetwork</code>].",396,[[["config",3]]]],[11,"num_established_connections","","Returns the number of established TCP connections, both …",396,[[]]],[11,"num_chains","","Returns the number of chains. Always equal to the length …",396,[[]]],[11,"add_incoming_connection","","",396,[[["multiaddr",3],["multiaddr",3]],["connectionid",3]]],[11,"blocks_request","","Sends a blocks request to the given peer.",396,[[["blocksrequestconfig",3],["peerid",3]]]],[11,"grandpa_warp_sync_request","","",396,[[["peerid",3]]]],[11,"storage_proof_request","","Sends a storage request to the given peer.",396,[[["storageproofrequestconfig",3],["peerid",3]]]],[11,"announce_transaction","","",396,[[["peerid",3]]]],[11,"pending_outcome_ok","","After calling [<code>ChainNetwork::fill_out_slots</code>], notifies …",396,[[["pendingid",3]]]],[11,"pending_outcome_err","","After calling [<code>ChainNetwork::fill_out_slots</code>], notifies …",396,[[["pendingid",3]]]],[11,"next_event","","Returns the next event produced by the service.",396,[[]]],[11,"kademlia_discovery_round","","Performs a round of Kademlia discovery.",396,[[]]],[11,"next_substream","","Waits until a connection is in a state in which a …",396,[[]]],[11,"fill_out_slots","","Spawns new outgoing connections in order to fill empty …",396,[[]]],[11,"read_write","","PanicPanics if <code>connection_id</code> isn\'t a valid connection.",396,[[["connectionid",3],["option",4]]]],[11,"peers_list","","Returns an iterator to the list of [<code>PeerId</code>]s that we have …",396,[[]]],[3,"StartConnect","","User must start connecting to the given multiaddress.",null,null],[12,"id","","",397,null],[12,"multiaddr","","",397,null],[4,"Event","","Event generated by [<code>ChainNetwork::next_event</code>].",null,null],[13,"Connected","","Established a transport-level connection (e.g. a TCP …",398,null],[13,"Disconnected","","A transport-level connection (e.g. a TCP socket) has been …",398,null],[12,"peer_id","smoldot::network::service::Event","",399,null],[12,"chain_indices","","",399,null],[13,"ChainConnected","smoldot::network::service","",398,null],[12,"chain_index","smoldot::network::service::Event","",400,null],[12,"peer_id","","",400,null],[12,"role","","Role the node reports playing on the network.",400,null],[12,"best_number","","Height of the best block according to this node.",400,null],[12,"best_hash","","Hash of the best block according to this node.",400,null],[13,"ChainDisconnected","smoldot::network::service","",398,null],[12,"chain_index","smoldot::network::service::Event","",401,null],[12,"peer_id","","",401,null],[13,"BlockAnnounce","smoldot::network::service","",398,null],[12,"chain_index","smoldot::network::service::Event","",402,null],[12,"peer_id","","",402,null],[12,"announce","","",402,null],[3,"EncodedBlockAnnounceHandshake","smoldot::network::service","Undecoded but valid block announce handshake.",null,null],[11,"decode","","Returns the decoded version of the handshake.",403,[[],["blockannounceshandshakeref",3]]],[3,"EncodedBlockAnnounce","","Undecoded but valid block announce.",null,null],[11,"decode","","Returns the decoded version of the announcement.",404,[[],["blockannounceref",3]]],[3,"DiscoveryInsert","","Successfull outcome to […",null,null],[11,"insert","","Insert the results in the [<code>ChainNetwork</code>].",405,[[]]],[3,"ReadWrite","","Outcome of calling [<code>ChainNetwork::read_write</code>].",null,null],[12,"read_bytes","","Number of bytes at the start of the incoming buffer that …",406,null],[12,"written_bytes","","Number of bytes written to the outgoing buffer. These …",406,null],[12,"wake_up_after","","If <code>Some</code>, [<code>ChainNetwork::read_write</code>] should be called …",406,null],[12,"wake_up_future","","[<code>ChainNetwork::read_write</code>] should be called again when …",406,null],[12,"write_close","","If <code>true</code>, the writing side the connection must be closed. …",406,null],[3,"SubstreamOpen","","",null,null],[11,"open","","",407,[[]]],[4,"DiscoveryError","","Error during [<code>ChainNetwork::kademlia_discovery_round</code>].",null,null],[13,"NoPeer","","",408,null],[13,"RequestFailed","","",408,null],[13,"DecodeError","","",408,null],[4,"BlocksRequestError","","Error returned by [<code>ChainNetwork::blocks_request</code>].",null,null],[13,"Request","","",409,null],[13,"Decode","","",409,null],[4,"StorageProofRequestError","","Error returned by [<code>ChainNetwork::storage_proof_request</code>].",null,null],[13,"Request","","",410,null],[13,"Decode","","",410,null],[4,"GrandpaWarpSyncRequestError","","Error returned by [<code>ChainNetwork::grandpa_warp_sync_request</code>…",null,null],[13,"Request","","",411,null],[13,"Decode","","",411,null],[0,"trie","smoldot","Radix-16 Merkle-Patricia trie.",null,null],[0,"calculate_root","smoldot::trie","Freestanding function that calculates the root of a …",null,null],[3,"CalculationCache","smoldot::trie::calculate_root","Cache containing intermediate calculation steps.",null,null],[11,"empty","","Builds a new empty cache.",412,[[]]],[11,"storage_value_update","","Notify the cache that a storage value at the given key …",412,[[]]],[11,"prefix_remove_update","","Notify the cache that all the storage values whose key …",412,[[]]],[5,"root_merkle_value","","Start calculating the Merkle value of the root node.",null,[[["option",4],["calculationcache",3]],["rootmerklevaluecalculation",4]]],[4,"RootMerkleValueCalculation","","Current state of the [<code>RootMerkleValueCalculation</code>] and how …",null,null],[13,"Finished","","The calculation is finished.",413,null],[12,"hash","smoldot::trie::calculate_root::RootMerkleValueCalculation","Root hash that has been calculated.",414,null],[12,"cache","","Cache of the calculation that can be passed next time.",414,null],[13,"AllKeys","smoldot::trie::calculate_root","Request to return the list of all the keys in the trie. …",413,null],[13,"StorageValue","","Request the value of the node with a specific key. Call […",413,null],[3,"AllKeys","","Request to return the list of all the keys in the …",null,null],[11,"inject","","Indicates the list of all keys of the trie and advances …",415,[[],["rootmerklevaluecalculation",4]]],[3,"StorageValue","","Request the value of the node with a specific key. Call […",null,null],[11,"key","","Returns the key whose value is being requested.",416,[[]]],[11,"inject","","Indicates the storage value and advances the calculation.",416,[[["option",4]],["rootmerklevaluecalculation",4]]],[0,"node_value","smoldot::trie","Calculation of the Merkle value of a node given the …",null,null],[3,"Config","smoldot::trie::node_value","Information about a node whose Merkle value is to be …",null,null],[12,"ty","","Type of node.",417,null],[12,"children","","Iterator to the Merkle values of the 16 possible children …",417,null],[12,"stored_value","","Value of the node in the storage.",417,null],[4,"NodeTy","","Type of node whose node value is to be calculated.",null,null],[13,"Root","","Node is the root node of the trie.",418,null],[12,"key","smoldot::trie::node_value::NodeTy","Key of the node, as an iterator of nibbles. This is the …",419,null],[13,"NonRoot","smoldot::trie::node_value","Node is not the root node of the trie.",418,null],[12,"partial_key","smoldot::trie::node_value::NodeTy","Partial key of the node, as an iterator of nibbles.",420,null],[5,"calculate_merkle_root","smoldot::trie::node_value","Calculates the Merkle value of a node given the …",null,[[["config",3]],["output",3]]],[3,"Output","","Output of the calculation.",null,null],[11,"from_bytes","","Builds an [<code>Output</code>] from a slice of bytes.",421,[[],["output",3]]],[0,"proof_verify","smoldot::trie","Verification of a trie proof.",null,null],[3,"Config","smoldot::trie::proof_verify","Configuration to pass to [<code>verify_proof</code>].",null,null],[12,"requested_key","","Key whose storage value needs to be found.",422,null],[12,"trie_root_hash","","Merkle value (or node value) of the root node of the trie.",422,null],[12,"proof","","List of node values of nodes found in the trie. No …",422,null],[5,"verify_proof","","Find the storage value of the requested key (as …",null,[[["config",3]],[["option",4],["result",4],["error",4]]]],[4,"Error","","Possible error returned by [<code>verify_proof</code>]",null,null],[13,"TrieRootNotFound","","Trie root wasn\'t found in the proof.",423,null],[13,"InvalidNodeValue","","One of the node values in the proof has an invalid format.",423,null],[13,"MissingProofEntry","","Missing an entry in the proof.",423,null],[0,"trie_structure","smoldot::trie","Manages the structure of a trie. Allows inserting and …",null,null],[3,"TrieStructure","smoldot::trie::trie_structure","Stores the structure of a trie, including branch nodes …",null,null],[11,"new","","Builds a new empty trie.",424,[[]]],[11,"with_capacity","","Builds a new empty trie with a capacity for the given …",424,[[]]],[11,"capacity","","Returns the number of nodes (storage or branch nodes) the …",424,[[]]],[11,"is_empty","","Returns <code>true</code> if the trie doesn\'t contain any node.",424,[[]]],[11,"len","","Returns the number of nodes, both branch and storage …",424,[[]]],[11,"shrink_to_fit","","Reduces the capacity of the trie as much as possible.",424,[[]]],[11,"root_node","","Returns the root node of the trie, or <code>None</code> if the trie is …",424,[[],[["nodeaccess",4],["option",4]]]],[11,"node","","Returns an [<code>Entry</code>] corresponding to the node whose key is …",424,[[],["entry",4]]],[11,"existing_node","","Returns the node with the given key, or <code>None</code> if no such …",424,[[],[["nodeaccess",4],["option",4]]]],[11,"remove_prefix","","Removes all nodes whose key starts with the given prefix.",424,[[],[["nodeaccess",4],["option",4]]]],[11,"structure_equal","","Returns true if the structure of this trie is the same as …",424,[[["triestructure",3]]]],[11,"node_by_index","","Returns the [<code>NodeAccess</code>] of the node at the given index, …",424,[[["nodeindex",3]],[["nodeaccess",4],["option",4]]]],[11,"node_full_key_by_index","","Returns the key of the node at the given index, or <code>None</code> …",424,[[["nodeindex",3]],["option",4]]],[3,"NodeIndex","","Index of a node in the trie. Never invalidated, except …",null,null],[4,"Entry","","Access to a entry for a potential node within the […",null,null],[13,"Occupied","","There exists a node with this key.",425,null],[13,"Vacant","","This entry is vacant.",425,null],[11,"into_vacant","","Returns <code>Some</code> if <code>self</code> is an [<code>Entry::Vacant</code>].",425,[[],[["option",4],["vacant",3]]]],[11,"into_occupied","","Returns <code>Some</code> if <code>self</code> is an [<code>Entry::Occupied</code>].",425,[[],[["option",4],["nodeaccess",4]]]],[4,"NodeAccess","","Access to a node within the [<code>TrieStructure</code>].",null,null],[13,"Storage","","",426,null],[13,"Branch","","",426,null],[11,"into_storage","","Returns <code>Some</code> if <code>self</code> is an [<code>NodeAccess::Storage</code>].",426,[[],[["option",4],["storagenodeaccess",3]]]],[11,"node_index","","Returns an opaque [<code>NodeIndex</code>] representing the node in …",426,[[],["nodeindex",3]]],[11,"into_parent","","Returns the parent of this node, or <code>None</code> if this is the …",426,[[],[["option",4],["nodeaccess",4]]]],[11,"parent","","Returns the parent of this node, or <code>None</code> if this is the …",426,[[],[["nodeaccess",4],["option",4]]]],[11,"child_user_data","","Returns the user data of the child at the given index.",426,[[["nibble",3]],["option",4]]],[11,"child","","Returns the child of this node at the given index.",426,[[["nibble",3]],[["nodeaccess",4],["option",4]]]],[11,"into_child","","Returns the child of this node given the given index.",426,[[["nibble",3]],[["nodeaccess",4],["result",4]]]],[11,"into_first_child","","Returns the first child of this node.",426,[[],[["nodeaccess",4],["result",4]]]],[11,"into_next_sibling","","Returns the next sibling of this node.",426,[[],[["nodeaccess",4],["result",4]]]],[11,"is_root_node","","Returns true if this node is the root node of the trie.",426,[[]]],[11,"full_key","","Returns the full key of the node.",426,[[]]],[11,"partial_key","","Returns the partial key of the node.",426,[[]]],[11,"user_data","","Returns the user data stored in the node.",426,[[]]],[11,"has_storage_value","","Returns true if the node has a storage value associated …",426,[[]]],[3,"StorageNodeAccess","","Access to a node within the [<code>TrieStructure</code>] that is known …",null,null],[11,"node_index","","Returns an opaque [<code>NodeIndex</code>] representing the node in …",427,[[],["nodeindex",3]]],[11,"into_parent","","Returns the parent of this node, or <code>None</code> if this is the …",427,[[],[["option",4],["nodeaccess",4]]]],[11,"parent","","Returns the parent of this node, or <code>None</code> if this is the …",427,[[],[["nodeaccess",4],["option",4]]]],[11,"into_first_child","","Returns the first child of this node.",427,[[],[["nodeaccess",4],["result",4]]]],[11,"into_next_sibling","","Returns the next sibling of this node.",427,[[],[["nodeaccess",4],["result",4]]]],[11,"child","","Returns the child of this node at the given index.",427,[[["nibble",3]],[["nodeaccess",4],["option",4]]]],[11,"child_user_data","","Returns the user data of the child at the given index.",427,[[["nibble",3]],["option",4]]],[11,"into_child","","Returns the child of this node given the given index.",427,[[["nibble",3]],[["nodeaccess",4],["result",4]]]],[11,"is_root_node","","Returns true if this node is the root node of the trie.",427,[[]]],[11,"full_key","","Returns the full key of the node.",427,[[]]],[11,"partial_key","","Returns the partial key of the node.",427,[[]]],[11,"user_data","","Returns the user data associated to this node.",427,[[]]],[11,"remove","","Removes the storage value and returns what this changes …",427,[[],["remove",4]]],[4,"Remove","","Outcome of the removal of a storage value.",null,null],[13,"StorageToBranch","","Removing the storage value didn\'t change the structure of …",428,null],[13,"SingleRemoveChild","","Removing the storage value removed the node that …",428,null],[12,"child","smoldot::trie::trie_structure::Remove","Unique child that the removed node had. The parent and …",429,null],[12,"user_data","","User data that was in the removed node.",429,null],[13,"SingleRemoveNoChild","smoldot::trie::trie_structure","Removing the storage value removed the node that …",428,null],[12,"parent","smoldot::trie::trie_structure::Remove","Parent that the removed node had.",430,null],[12,"user_data","","User data that was in the removed node.",430,null],[13,"TrieNowEmpty","smoldot::trie::trie_structure","The trie was empty apart from this node. It is now …",428,null],[12,"user_data","smoldot::trie::trie_structure::Remove","User data that was in the removed node.",431,null],[13,"BranchAlsoRemoved","smoldot::trie::trie_structure","Removing the storage value removed two nodes from the …",428,null],[12,"sibling","smoldot::trie::trie_structure::Remove","Sibling of the removed node. The parent and partial key …",432,null],[12,"storage_user_data","","User data that was in the removed storage node.",432,null],[12,"branch_user_data","","User data that was in the removed branch node (former …",432,null],[3,"BranchNodeAccess","smoldot::trie::trie_structure","Access to a node within the [<code>TrieStructure</code>] that is known …",null,null],[11,"node_index","","Returns an opaque [<code>NodeIndex</code>] representing the node in …",433,[[],["nodeindex",3]]],[11,"into_parent","","Returns the parent of this node, or <code>None</code> if this is the …",433,[[],[["option",4],["nodeaccess",4]]]],[11,"parent","","Returns the parent of this node, or <code>None</code> if this is the …",433,[[],[["nodeaccess",4],["option",4]]]],[11,"into_first_child","","Returns the first child of this node.",433,[[],[["nodeaccess",4],["result",4]]]],[11,"into_next_sibling","","Returns the next sibling of this node.",433,[[],[["nodeaccess",4],["result",4]]]],[11,"child","","Returns the child of this node at the given index.",433,[[["nibble",3]],[["nodeaccess",4],["option",4]]]],[11,"child_user_data","","Returns the user data of the child at the given index.",433,[[["nibble",3]],["option",4]]],[11,"into_child","","Returns the child of this node given the given index.",433,[[["nibble",3]],[["nodeaccess",4],["result",4]]]],[11,"is_root_node","","Returns true if this node is the root node of the trie.",433,[[]]],[11,"full_key","","Returns the full key of the node.",433,[[]]],[11,"partial_key","","Returns the partial key of the node.",433,[[]]],[11,"insert_storage_value","","Adds a storage value to this node, turning it into a […",433,[[],["storagenodeaccess",3]]],[11,"user_data","","Returns the user data associated to this node.",433,[[]]],[3,"Vacant","","Access to a non-existing node within the [<code>TrieStructure</code>].",null,null],[11,"insert_storage_value","","Prepare the operation of creating the node in question.",434,[[],["prepareinsert",4]]],[4,"PrepareInsert","","Preparation for a new node insertion.",null,null],[13,"One","","One node will be inserted in the trie.",435,null],[13,"Two","","Two nodes will be inserted in the trie.",435,null],[11,"insert","","Insert the new node. <code>branch_node_user_data</code> is discarded …",435,[[],["storagenodeaccess",3]]],[3,"PrepareInsertOne","","One node will be inserted in the trie.",null,null],[11,"insert","","Insert the new node.",436,[[],["storagenodeaccess",3]]],[3,"PrepareInsertTwo","","Two nodes will be inserted in the trie.",null,null],[11,"branch_node_key","","Key of the branch node that will be inserted.",437,[[]]],[11,"insert","","Insert the new node.",437,[[],["storagenodeaccess",3]]],[5,"bytes_to_nibbles","smoldot::trie","Turns an iterator of bytes into an iterator of nibbles …",null,[[],["bytestonibbles",3]]],[3,"BytesToNibbles","","Turns an iterator of bytes into an iterator of nibbles …",null,null],[3,"Nibble","","A single nibble with four bits.",null,null],[4,"NibbleFromU8Error","","Error when building a [<code>Nibble</code>] from a <code>u8</code>.",null,null],[13,"TooLarge","","The integer value is too large.",438,null],[3,"Trie","","Radix-16 Merkle-Patricia trie.",null,null],[11,"new","","Builds a new empty [<code>Trie</code>].",439,[[],["trie",3]]],[11,"insert","","Inserts a new entry in the trie.",439,[[]]],[11,"remove","","Removes an entry from the trie.",439,[[],[["option",4],["vec",3]]]],[11,"is_empty","","Returns true if the <code>Trie</code> is empty.",439,[[]]],[11,"clear","","Removes all the elements from the trie.",439,[[]]],[11,"root_merkle_value","","Calculates the Merkle value of the root node.",439,[[["calculationcache",3],["option",4]]]],[5,"empty_trie_merkle_value","","Returns the Merkle value of the root of an empty trie.",null,[[]]],[0,"verify","smoldot","Methods that verify whether a block is correct.",null,null],[0,"aura","smoldot::verify","AURA consensus.",null,null],[3,"VerifyConfig","smoldot::verify::aura","Configuration for [<code>verify_header</code>].",null,null],[12,"header","","Header of the block to verify.",440,null],[12,"parent_block_header","","Header of the parent of the block to verify.",440,null],[12,"now_from_unix_epoch","","Time elapsed since the Unix Epoch (i.e. 00:00:00 UTC on 1 …",440,null],[12,"current_authorities","","Aura authorities that must validate the block.",440,null],[12,"slot_duration","","Duration of a slot in milliseconds. Can be found by …",440,null],[3,"VerifySuccess","","Information yielded back after successfully verifying a …",null,null],[12,"authorities_change","","If true, the block has a change of authorities that must …",441,null],[4,"VerifyError","","Failure to verify a block.",null,null],[13,"MissingSeal","","The seal (containing the signature of the authority) is …",442,null],[13,"MissingPreRuntimeDigest","","No pre-runtime digest in the block header.",442,null],[13,"ParentIsntAuraConsensus","","Parent block doesn\'t contain any Aura information.",442,null],[13,"SlotNumberNotIncreasing","","Slot number must be strictly increasing between a parent …",442,null],[13,"TooFarInFuture","","Slot number starts too far in the future.",442,null],[13,"BadSignature","","Block header signature is invalid.",442,null],[13,"BadPublicKey","","Failed to parse ed25519 public key.",442,null],[13,"EmptyAuthorities","","List of authorities is empty.",442,null],[5,"verify_header","","Verifies whether a block header provides a correct proof …",null,[[["verifyconfig",3]],[["verifyerror",4],["verifysuccess",3],["result",4]]]],[0,"babe","smoldot::verify","BABE consensus.",null,null],[3,"VerifyConfig","smoldot::verify::babe","Configuration for [<code>verify_header</code>].",null,null],[12,"header","","Header of the block to verify.",443,null],[12,"parent_block_header","","Header of the parent of the block to verify.",443,null],[12,"now_from_unix_epoch","","Time elapsed since the Unix Epoch (i.e. 00:00:00 UTC on 1 …",443,null],[12,"slots_per_epoch","","Number of slots per epoch in the Babe configuration.",443,null],[12,"parent_block_epoch","","Epoch the parent block belongs to. Must be <code>None</code> if and …",443,null],[12,"parent_block_next_epoch","","Epoch that follows the epoch the parent block belongs to.",443,null],[3,"VerifySuccess","","Information yielded back after successfully verifying a …",null,null],[12,"slot_number","","Slot number the block belongs to.",444,null],[12,"epoch_transition_target","","If <code>Some</code>, the verified block contains an epoch transition …",444,null],[4,"VerifyError","","Failure to verify a block.",null,null],[13,"MissingSeal","","The seal (containing the signature of the authority) is …",445,null],[13,"MissingPreRuntimeDigest","","No pre-runtime digest in the block header.",445,null],[13,"ParentIsntBabeConsensus","","Parent block doesn\'t contain any Babe information.",445,null],[13,"SlotNumberNotIncreasing","","Slot number must be strictly increasing between a parent …",445,null],[13,"UnexpectedEpochChangeLog","","Block contains an epoch change digest log, but no epoch …",445,null],[13,"MissingEpochChangeLog","","Block is the first block after a new epoch, but it is …",445,null],[13,"InvalidAuthorityIndex","","Authority index stored within block is out of range.",445,null],[13,"BadSignature","","Block header signature is invalid.",445,null],[13,"BadVrfProof","","VRF proof in the block header is invalid.",445,null],[13,"BadSecondarySlotAuthor","","Block is a secondary slot claim and its author is not the …",445,null],[13,"OverPrimaryClaimThreshold","","VRF output is over threshold required to claim the …",445,null],[13,"ForbiddenSlotType","","Type of slot claim forbidden by current configuration.",445,null],[5,"verify_header","","Verifies whether a block header provides a correct proof …",null,[[["verifyconfig",3]],[["verifyerror",4],["verifysuccess",3],["result",4]]]],[0,"header_body","smoldot::verify","",null,null],[3,"Config","smoldot::verify::header_body","Configuration for a block verification.",null,null],[12,"parent_runtime","","Runtime used to check the new block. Must be built using …",446,null],[12,"parent_block_header","","Header of the parent of the block to verify.",446,null],[12,"consensus","","Configuration items related to the consensus engine.",446,null],[12,"block_header","","Header of the block to verify.",446,null],[12,"block_body","","Body of the block to verify.",446,null],[12,"top_trie_root_calculation_cache","","Optional cache corresponding to the storage trie root …",446,null],[4,"ConfigConsensus","","Extra items of [<code>Config</code>] that are dependant on the …",null,null],[13,"AllAuthorized","","Any node on the chain is allowed to produce blocks.",447,null],[13,"Aura","","Chain is using the Aura consensus engine.",447,null],[12,"current_authorities","smoldot::verify::header_body::ConfigConsensus","Aura authorities that must validate the block.",448,null],[12,"slot_duration","","Duration of a slot in milliseconds. Can be found by …",448,null],[12,"now_from_unix_epoch","","Time elapsed since the Unix Epoch (i.e. 00:00:00 UTC on 1 …",448,null],[13,"Babe","smoldot::verify::header_body","Chain is using the Babe consensus engine.",447,null],[12,"slots_per_epoch","smoldot::verify::header_body::ConfigConsensus","Number of slots per epoch in the Babe configuration.",449,null],[12,"parent_block_epoch","","Epoch the parent block belongs to. Must be <code>None</code> if and …",449,null],[12,"parent_block_next_epoch","","Epoch that follows the epoch the parent block belongs to.",449,null],[12,"now_from_unix_epoch","","Time elapsed since the Unix Epoch (i.e. 00:00:00 UTC on 1 …",449,null],[3,"Success","smoldot::verify::header_body","Block successfully verified.",null,null],[12,"parent_runtime","","Runtime that was passed by [<code>Config</code>].",450,null],[12,"new_runtime","","Contains <code>Some</code> if and only if […",450,null],[12,"consensus","","Extra items in [<code>Success</code>] relevant to the consensus engine.",450,null],[12,"storage_top_trie_changes","","List of changes to the storage top trie that the block …",450,null],[12,"offchain_storage_changes","","List of changes to the offchain storage that this block …",450,null],[12,"top_trie_root_calculation_cache","","Cache used for calculating the top trie root.",450,null],[12,"logs","","Concatenation of all the log messages printed by the …",450,null],[4,"SuccessConsensus","","Extra items in [<code>Success</code>] relevant to the consensus engine.",null,null],[13,"AllAuthorized","","[<code>ConfigConsensus::AllAuthorized</code>] was passed to [<code>Config</code>].",451,null],[13,"Aura","","Chain is using the Aura consensus engine.",451,null],[12,"authorities_change","smoldot::verify::header_body::SuccessConsensus","True if the list of authorities is modified by this block.",452,null],[13,"Babe","smoldot::verify::header_body","Chain is using the Babe consensus engine.",451,null],[12,"slot_number","smoldot::verify::header_body::SuccessConsensus","Slot number the block belongs to.",453,null],[12,"epoch_transition_target","","If <code>Some</code>, the verified block contains an epoch transition …",453,null],[4,"Error","smoldot::verify::header_body","Error that can happen during the verification.",null,null],[13,"Unsealed","","Error while verifying the unsealed block.",454,null],[13,"MultipleConsensusEngines","","Block header contains items relevant to multiple …",454,null],[13,"AuraVerification","","Failed to verify the authenticity of the block with the …",454,null],[13,"BabeVerification","","Failed to verify the authenticity of the block with the …",454,null],[13,"NewRuntimeCompilationError","","Error while compiling new runtime.",454,null],[13,"CodeKeyErased","","Block being verified has erased the <code>:code</code> key from the …",454,null],[13,"HeapPagesParseError","","Block has modified the <code>:heappages</code> key in a way that fails …",454,null],[13,"HeapPagesOnlyModification","","Block has modified the <code>:heappages</code> key without modifying …",454,null],[5,"verify","","Verifies whether a block is valid.",null,[[["config",3]],["verify",4]]],[4,"Verify","","Current state of the verification.",null,null],[13,"Finished","","Verification is over.",455,null],[13,"RuntimeCompilation","","A new runtime must be compiled.",455,null],[13,"StorageGet","","Loading a storage value is required in order to continue.",455,null],[13,"StoragePrefixKeys","","Fetching the list of keys with a given prefix is required …",455,null],[13,"StorageNextKey","","Fetching the key that follows a given one is required in …",455,null],[3,"StorageGet","","Loading a storage value is required in order to continue.",null,null],[11,"key","","Returns the key whose value must be passed to […",456,[[]]],[11,"key_as_vec","","Returns the key whose value must be passed to […",456,[[],["vec",3]]],[11,"inject_value","","Injects the corresponding storage value.",456,[[["option",4]],["verify",4]]],[3,"StoragePrefixKeys","","Fetching the list of keys with a given prefix is required …",null,null],[11,"prefix","","Returns the prefix whose keys to load.",457,[[]]],[11,"inject_keys","","Injects the list of keys.",457,[[],["verify",4]]],[3,"StorageNextKey","","Fetching the key that follows a given one is required in …",null,null],[11,"key","","Returns the key whose next key must be passed back.",458,[[]]],[11,"inject_key","","Injects the key.",458,[[["option",4]],["verify",4]]],[3,"RuntimeCompilation","","A new runtime must be compiled.",null,null],[11,"build","","Performs the runtime compilation.",459,[[],["verify",4]]],[0,"header_only","smoldot::verify","",null,null],[3,"Config","smoldot::verify::header_only","Configuration for a block verification.",null,null],[12,"parent_block_header","","Header of the parent of the block to verify.",460,null],[12,"block_header","","Header of the block to verify.",460,null],[12,"consensus","","Configuration items related to the consensus engine.",460,null],[4,"ConfigConsensus","","Extra items of [<code>Config</code>] that are dependant on the …",null,null],[13,"AllAuthorized","","Any node on the chain is allowed to produce blocks.",461,null],[13,"Aura","","Chain is using the Aura consensus engine.",461,null],[12,"current_authorities","smoldot::verify::header_only::ConfigConsensus","Aura authorities that must validate the block.",462,null],[12,"slot_duration","","Duration of a slot in milliseconds. Can be found by …",462,null],[12,"now_from_unix_epoch","","Time elapsed since the Unix Epoch (i.e. 00:00:00 UTC on 1 …",462,null],[13,"Babe","smoldot::verify::header_only","Chain is using the Babe consensus engine.",461,null],[12,"slots_per_epoch","smoldot::verify::header_only::ConfigConsensus","Number of slots per epoch in the Babe configuration.",463,null],[12,"parent_block_epoch","","Epoch the parent block belongs to. Must be <code>None</code> if and …",463,null],[12,"parent_block_next_epoch","","Epoch that follows the epoch the parent block belongs to.",463,null],[12,"now_from_unix_epoch","","Time elapsed since the Unix Epoch (i.e. 00:00:00 UTC on 1 …",463,null],[4,"Success","smoldot::verify::header_only","Block successfully verified.",null,null],[13,"AllAuthorized","","[<code>ConfigConsensus::AllAuthorized</code>] was passed to [<code>Config</code>].",464,null],[13,"Aura","","Chain is using the Aura consensus engine.",464,null],[12,"authorities_change","smoldot::verify::header_only::Success","True if the list of authorities is modified by this block.",465,null],[13,"Babe","smoldot::verify::header_only","Chain is using the Babe consensus engine.",464,null],[12,"slot_number","smoldot::verify::header_only::Success","Slot number the block belongs to.",466,null],[12,"epoch_transition_target","","If <code>Some</code>, the verified block contains an epoch transition …",466,null],[4,"Error","smoldot::verify::header_only","Error that can happen during the verification.",null,null],[13,"BadBlockNumber","","Number of the block to verify isn\'t equal to the parent …",467,null],[13,"BadParentHash","","Hash of the parent block doesn\'t match the hash in the …",467,null],[13,"MultipleConsensusEngines","","Block header contains items relevant to multiple …",467,null],[13,"AuraVerification","","Failed to verify the authenticity of the block with the …",467,null],[13,"BabeVerification","","Failed to verify the authenticity of the block with the …",467,null],[5,"verify","","Verifies whether a block is valid.",null,[[["config",3]],[["success",4],["result",4],["error",4]]]],[5,"calculate_genesis_block_header","smoldot","Builds the header of the genesis block, from the values …",null,[[],["header",3]]],[11,"from","smoldot::author::aura","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"into_any_arc","","",0,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",0,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",0,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",0,[[],["any",8]]],[11,"as_any_mut","","",0,[[],["any",8]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"into_any_arc","","",1,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",1,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",1,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",1,[[],["any",8]]],[11,"as_any_mut","","",1,[[],["any",8]]],[11,"equivalent","","",1,[[]]],[11,"from","smoldot::author::build","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"init","","",2,[[]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",2,[[]]],[11,"drop","","",2,[[]]],[11,"into_any_arc","","",2,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",2,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",2,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",2,[[],["any",8]]],[11,"as_any_mut","","",2,[[],["any",8]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"init","","",3,[[]]],[11,"deref","","",3,[[]]],[11,"deref_mut","","",3,[[]]],[11,"drop","","",3,[[]]],[11,"into_any_arc","","",3,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",3,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",3,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",3,[[],["any",8]]],[11,"as_any_mut","","",3,[[],["any",8]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"init","","",5,[[]]],[11,"deref","","",5,[[]]],[11,"deref_mut","","",5,[[]]],[11,"drop","","",5,[[]]],[11,"into_any","","",5,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",5,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",5,[[],["any",8]]],[11,"as_any_mut","","",5,[[],["any",8]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"init","","",6,[[]]],[11,"deref","","",6,[[]]],[11,"deref_mut","","",6,[[]]],[11,"drop","","",6,[[]]],[11,"into_any","","",6,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",6,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",6,[[],["any",8]]],[11,"as_any_mut","","",6,[[],["any",8]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"init","","",8,[[]]],[11,"deref","","",8,[[]]],[11,"deref_mut","","",8,[[]]],[11,"drop","","",8,[[]]],[11,"into_any_arc","","",8,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",8,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",8,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",8,[[],["any",8]]],[11,"as_any_mut","","",8,[[],["any",8]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"init","","",9,[[]]],[11,"deref","","",9,[[]]],[11,"deref_mut","","",9,[[]]],[11,"drop","","",9,[[]]],[11,"into_any_arc","","",9,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",9,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",9,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",9,[[],["any",8]]],[11,"as_any_mut","","",9,[[],["any",8]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"init","","",10,[[]]],[11,"deref","","",10,[[]]],[11,"deref_mut","","",10,[[]]],[11,"drop","","",10,[[]]],[11,"into_any","","",10,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",10,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",10,[[],["any",8]]],[11,"as_any_mut","","",10,[[],["any",8]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"vzip","","",11,[[]]],[11,"init","","",11,[[]]],[11,"deref","","",11,[[]]],[11,"deref_mut","","",11,[[]]],[11,"drop","","",11,[[]]],[11,"into_any","","",11,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",11,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",11,[[],["any",8]]],[11,"as_any_mut","","",11,[[],["any",8]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"vzip","","",12,[[]]],[11,"init","","",12,[[]]],[11,"deref","","",12,[[]]],[11,"deref_mut","","",12,[[]]],[11,"drop","","",12,[[]]],[11,"into_any","","",12,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",12,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",12,[[],["any",8]]],[11,"as_any_mut","","",12,[[],["any",8]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"vzip","","",13,[[]]],[11,"init","","",13,[[]]],[11,"deref","","",13,[[]]],[11,"deref_mut","","",13,[[]]],[11,"drop","","",13,[[]]],[11,"into_any","","",13,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",13,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",13,[[],["any",8]]],[11,"as_any_mut","","",13,[[],["any",8]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"vzip","","",14,[[]]],[11,"init","","",14,[[]]],[11,"deref","","",14,[[]]],[11,"deref_mut","","",14,[[]]],[11,"drop","","",14,[[]]],[11,"into_any","","",14,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",14,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",14,[[],["any",8]]],[11,"as_any_mut","","",14,[[],["any",8]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"vzip","","",15,[[]]],[11,"init","","",15,[[]]],[11,"deref","","",15,[[]]],[11,"deref_mut","","",15,[[]]],[11,"drop","","",15,[[]]],[11,"into_any","","",15,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",15,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",15,[[],["any",8]]],[11,"as_any_mut","","",15,[[],["any",8]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_string","","",16,[[],["string",3]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"vzip","","",16,[[]]],[11,"init","","",16,[[]]],[11,"deref","","",16,[[]]],[11,"deref_mut","","",16,[[]]],[11,"drop","","",16,[[]]],[11,"into_any_arc","","",16,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",16,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",16,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",16,[[],["any",8]]],[11,"as_any_mut","","",16,[[],["any",8]]],[11,"from","smoldot::author::runtime","",17,[[]]],[11,"into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"vzip","","",17,[[]]],[11,"init","","",17,[[]]],[11,"deref","","",17,[[]]],[11,"deref_mut","","",17,[[]]],[11,"drop","","",17,[[]]],[11,"into_any","","",17,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",17,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",17,[[],["any",8]]],[11,"as_any_mut","","",17,[[],["any",8]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"vzip","","",18,[[]]],[11,"init","","",18,[[]]],[11,"deref","","",18,[[]]],[11,"deref_mut","","",18,[[]]],[11,"drop","","",18,[[]]],[11,"into_any_arc","","",18,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",18,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",18,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",18,[[],["any",8]]],[11,"as_any_mut","","",18,[[],["any",8]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"vzip","","",19,[[]]],[11,"init","","",19,[[]]],[11,"deref","","",19,[[]]],[11,"deref_mut","","",19,[[]]],[11,"drop","","",19,[[]]],[11,"into_any","","",19,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",19,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",19,[[],["any",8]]],[11,"as_any_mut","","",19,[[],["any",8]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_string","","",20,[[],["string",3]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"vzip","","",20,[[]]],[11,"init","","",20,[[]]],[11,"deref","","",20,[[]]],[11,"deref_mut","","",20,[[]]],[11,"drop","","",20,[[]]],[11,"into_any_arc","","",20,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",20,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",20,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",20,[[],["any",8]]],[11,"as_any_mut","","",20,[[],["any",8]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"vzip","","",23,[[]]],[11,"init","","",23,[[]]],[11,"deref","","",23,[[]]],[11,"deref_mut","","",23,[[]]],[11,"drop","","",23,[[]]],[11,"into_any","","",23,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",23,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",23,[[],["any",8]]],[11,"as_any_mut","","",23,[[],["any",8]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"vzip","","",25,[[]]],[11,"init","","",25,[[]]],[11,"deref","","",25,[[]]],[11,"deref_mut","","",25,[[]]],[11,"drop","","",25,[[]]],[11,"into_any","","",25,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",25,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",25,[[],["any",8]]],[11,"as_any_mut","","",25,[[],["any",8]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"vzip","","",26,[[]]],[11,"init","","",26,[[]]],[11,"deref","","",26,[[]]],[11,"deref_mut","","",26,[[]]],[11,"drop","","",26,[[]]],[11,"into_any_arc","","",26,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",26,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",26,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",26,[[],["any",8]]],[11,"as_any_mut","","",26,[[],["any",8]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"vzip","","",27,[[]]],[11,"init","","",27,[[]]],[11,"deref","","",27,[[]]],[11,"deref_mut","","",27,[[]]],[11,"drop","","",27,[[]]],[11,"into_any_arc","","",27,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",27,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",27,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",27,[[],["any",8]]],[11,"as_any_mut","","",27,[[],["any",8]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"vzip","","",30,[[]]],[11,"init","","",30,[[]]],[11,"deref","","",30,[[]]],[11,"deref_mut","","",30,[[]]],[11,"drop","","",30,[[]]],[11,"into_any","","",30,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",30,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",30,[[],["any",8]]],[11,"as_any_mut","","",30,[[],["any",8]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"vzip","","",31,[[]]],[11,"init","","",31,[[]]],[11,"deref","","",31,[[]]],[11,"deref_mut","","",31,[[]]],[11,"drop","","",31,[[]]],[11,"into_any","","",31,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",31,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",31,[[],["any",8]]],[11,"as_any_mut","","",31,[[],["any",8]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"vzip","","",32,[[]]],[11,"init","","",32,[[]]],[11,"deref","","",32,[[]]],[11,"deref_mut","","",32,[[]]],[11,"drop","","",32,[[]]],[11,"into_any","","",32,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",32,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",32,[[],["any",8]]],[11,"as_any_mut","","",32,[[],["any",8]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"vzip","","",33,[[]]],[11,"init","","",33,[[]]],[11,"deref","","",33,[[]]],[11,"deref_mut","","",33,[[]]],[11,"drop","","",33,[[]]],[11,"into_any","","",33,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",33,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",33,[[],["any",8]]],[11,"as_any_mut","","",33,[[],["any",8]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"to_string","","",34,[[],["string",3]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"vzip","","",34,[[]]],[11,"init","","",34,[[]]],[11,"deref","","",34,[[]]],[11,"deref_mut","","",34,[[]]],[11,"drop","","",34,[[]]],[11,"into_any_arc","","",34,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",34,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",34,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",34,[[],["any",8]]],[11,"as_any_mut","","",34,[[],["any",8]]],[11,"equivalent","","",34,[[]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"to_string","","",35,[[],["string",3]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"vzip","","",35,[[]]],[11,"init","","",35,[[]]],[11,"deref","","",35,[[]]],[11,"deref_mut","","",35,[[]]],[11,"drop","","",35,[[]]],[11,"into_any_arc","","",35,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",35,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",35,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",35,[[],["any",8]]],[11,"as_any_mut","","",35,[[],["any",8]]],[11,"equivalent","","",35,[[]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"to_string","","",36,[[],["string",3]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"vzip","","",36,[[]]],[11,"init","","",36,[[]]],[11,"deref","","",36,[[]]],[11,"deref_mut","","",36,[[]]],[11,"drop","","",36,[[]]],[11,"into_any_arc","","",36,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",36,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",36,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",36,[[],["any",8]]],[11,"as_any_mut","","",36,[[],["any",8]]],[11,"equivalent","","",36,[[]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"to_string","","",37,[[],["string",3]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"vzip","","",37,[[]]],[11,"init","","",37,[[]]],[11,"deref","","",37,[[]]],[11,"deref_mut","","",37,[[]]],[11,"drop","","",37,[[]]],[11,"into_any_arc","","",37,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",37,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",37,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",37,[[],["any",8]]],[11,"as_any_mut","","",37,[[],["any",8]]],[11,"equivalent","","",37,[[]]],[11,"from","smoldot::chain::blocks_tree","",468,[[]]],[11,"into","","",468,[[]]],[11,"borrow","","",468,[[]]],[11,"borrow_mut","","",468,[[]]],[11,"try_from","","",468,[[],["result",4]]],[11,"try_into","","",468,[[],["result",4]]],[11,"type_id","","",468,[[],["typeid",3]]],[11,"vzip","","",468,[[]]],[11,"init","","",468,[[]]],[11,"deref","","",468,[[]]],[11,"deref_mut","","",468,[[]]],[11,"drop","","",468,[[]]],[11,"into_any_arc","","",468,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",468,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",468,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",468,[[],["any",8]]],[11,"as_any_mut","","",468,[[],["any",8]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_string","","",39,[[],["string",3]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"vzip","","",39,[[]]],[11,"init","","",39,[[]]],[11,"deref","","",39,[[]]],[11,"deref_mut","","",39,[[]]],[11,"drop","","",39,[[]]],[11,"into_any_arc","","",39,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",39,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",39,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",39,[[],["any",8]]],[11,"as_any_mut","","",39,[[],["any",8]]],[11,"from","","",469,[[]]],[11,"into","","",469,[[]]],[11,"into_iter","","",469,[[]]],[11,"borrow","","",469,[[]]],[11,"borrow_mut","","",469,[[]]],[11,"try_from","","",469,[[],["result",4]]],[11,"try_into","","",469,[[],["result",4]]],[11,"type_id","","",469,[[],["typeid",3]]],[11,"vzip","","",469,[[]]],[11,"init","","",469,[[]]],[11,"deref","","",469,[[]]],[11,"deref_mut","","",469,[[]]],[11,"drop","","",469,[[]]],[11,"into_any_arc","","",469,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",469,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",469,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",469,[[],["any",8]]],[11,"as_any_mut","","",469,[[],["any",8]]],[11,"nfd","","",469,[[],["decompositions",3]]],[11,"nfkd","","",469,[[],["decompositions",3]]],[11,"nfc","","",469,[[],["recompositions",3]]],[11,"nfkc","","",469,[[],["recompositions",3]]],[11,"cjk_compat_variants","","",469,[[],["replacements",3]]],[11,"stream_safe","","",469,[[],["streamsafe",3]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_string","","",42,[[],["string",3]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"vzip","","",42,[[]]],[11,"init","","",42,[[]]],[11,"deref","","",42,[[]]],[11,"deref_mut","","",42,[[]]],[11,"drop","","",42,[[]]],[11,"into_any_arc","","",42,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",42,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",42,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",42,[[],["any",8]]],[11,"as_any_mut","","",42,[[],["any",8]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"vzip","","",43,[[]]],[11,"init","","",43,[[]]],[11,"deref","","",43,[[]]],[11,"deref_mut","","",43,[[]]],[11,"drop","","",43,[[]]],[11,"into_any_arc","","",43,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",43,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",43,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",43,[[],["any",8]]],[11,"as_any_mut","","",43,[[],["any",8]]],[11,"from","","",470,[[]]],[11,"into","","",470,[[]]],[11,"borrow","","",470,[[]]],[11,"borrow_mut","","",470,[[]]],[11,"try_from","","",470,[[],["result",4]]],[11,"try_into","","",470,[[],["result",4]]],[11,"type_id","","",470,[[],["typeid",3]]],[11,"vzip","","",470,[[]]],[11,"init","","",470,[[]]],[11,"deref","","",470,[[]]],[11,"deref_mut","","",470,[[]]],[11,"drop","","",470,[[]]],[11,"into_any_arc","","",470,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",470,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",470,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",470,[[],["any",8]]],[11,"as_any_mut","","",470,[[],["any",8]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"vzip","","",45,[[]]],[11,"init","","",45,[[]]],[11,"deref","","",45,[[]]],[11,"deref_mut","","",45,[[]]],[11,"drop","","",45,[[]]],[11,"into_any","","",45,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",45,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",45,[[],["any",8]]],[11,"as_any_mut","","",45,[[],["any",8]]],[11,"from","","",471,[[]]],[11,"into","","",471,[[]]],[11,"borrow","","",471,[[]]],[11,"borrow_mut","","",471,[[]]],[11,"try_from","","",471,[[],["result",4]]],[11,"try_into","","",471,[[],["result",4]]],[11,"type_id","","",471,[[],["typeid",3]]],[11,"vzip","","",471,[[]]],[11,"init","","",471,[[]]],[11,"deref","","",471,[[]]],[11,"deref_mut","","",471,[[]]],[11,"drop","","",471,[[]]],[11,"into_any","","",471,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",471,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",471,[[],["any",8]]],[11,"as_any_mut","","",471,[[],["any",8]]],[11,"from","","",472,[[]]],[11,"into","","",472,[[]]],[11,"borrow","","",472,[[]]],[11,"borrow_mut","","",472,[[]]],[11,"try_from","","",472,[[],["result",4]]],[11,"try_into","","",472,[[],["result",4]]],[11,"type_id","","",472,[[],["typeid",3]]],[11,"vzip","","",472,[[]]],[11,"init","","",472,[[]]],[11,"deref","","",472,[[]]],[11,"deref_mut","","",472,[[]]],[11,"drop","","",472,[[]]],[11,"into_any","","",472,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",472,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",472,[[],["any",8]]],[11,"as_any_mut","","",472,[[],["any",8]]],[11,"from","","",473,[[]]],[11,"into","","",473,[[]]],[11,"borrow","","",473,[[]]],[11,"borrow_mut","","",473,[[]]],[11,"try_from","","",473,[[],["result",4]]],[11,"try_into","","",473,[[],["result",4]]],[11,"type_id","","",473,[[],["typeid",3]]],[11,"vzip","","",473,[[]]],[11,"init","","",473,[[]]],[11,"deref","","",473,[[]]],[11,"deref_mut","","",473,[[]]],[11,"drop","","",473,[[]]],[11,"into_any","","",473,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",473,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",473,[[],["any",8]]],[11,"as_any_mut","","",473,[[],["any",8]]],[11,"from","","",474,[[]]],[11,"into","","",474,[[]]],[11,"borrow","","",474,[[]]],[11,"borrow_mut","","",474,[[]]],[11,"try_from","","",474,[[],["result",4]]],[11,"try_into","","",474,[[],["result",4]]],[11,"type_id","","",474,[[],["typeid",3]]],[11,"vzip","","",474,[[]]],[11,"init","","",474,[[]]],[11,"deref","","",474,[[]]],[11,"deref_mut","","",474,[[]]],[11,"drop","","",474,[[]]],[11,"into_any","","",474,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",474,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",474,[[],["any",8]]],[11,"as_any_mut","","",474,[[],["any",8]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"vzip","","",48,[[]]],[11,"init","","",48,[[]]],[11,"deref","","",48,[[]]],[11,"deref_mut","","",48,[[]]],[11,"drop","","",48,[[]]],[11,"into_any_arc","","",48,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",48,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",48,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",48,[[],["any",8]]],[11,"as_any_mut","","",48,[[],["any",8]]],[11,"from","","",475,[[]]],[11,"into","","",475,[[]]],[11,"borrow","","",475,[[]]],[11,"borrow_mut","","",475,[[]]],[11,"try_from","","",475,[[],["result",4]]],[11,"try_into","","",475,[[],["result",4]]],[11,"type_id","","",475,[[],["typeid",3]]],[11,"vzip","","",475,[[]]],[11,"init","","",475,[[]]],[11,"deref","","",475,[[]]],[11,"deref_mut","","",475,[[]]],[11,"drop","","",475,[[]]],[11,"into_any_arc","","",475,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",475,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",475,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",475,[[],["any",8]]],[11,"as_any_mut","","",475,[[],["any",8]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_string","","",50,[[],["string",3]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"vzip","","",50,[[]]],[11,"init","","",50,[[]]],[11,"deref","","",50,[[]]],[11,"deref_mut","","",50,[[]]],[11,"drop","","",50,[[]]],[11,"into_any_arc","","",50,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",50,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",50,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",50,[[],["any",8]]],[11,"as_any_mut","","",50,[[],["any",8]]],[11,"from","","",476,[[]]],[11,"into","","",476,[[]]],[11,"borrow","","",476,[[]]],[11,"borrow_mut","","",476,[[]]],[11,"try_from","","",476,[[],["result",4]]],[11,"try_into","","",476,[[],["result",4]]],[11,"type_id","","",476,[[],["typeid",3]]],[11,"vzip","","",476,[[]]],[11,"init","","",476,[[]]],[11,"deref","","",476,[[]]],[11,"deref_mut","","",476,[[]]],[11,"drop","","",476,[[]]],[11,"into_any_arc","","",476,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",476,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",476,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",476,[[],["any",8]]],[11,"as_any_mut","","",476,[[],["any",8]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"vzip","","",52,[[]]],[11,"init","","",52,[[]]],[11,"deref","","",52,[[]]],[11,"deref_mut","","",52,[[]]],[11,"drop","","",52,[[]]],[11,"into_any_arc","","",52,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",52,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",52,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",52,[[],["any",8]]],[11,"as_any_mut","","",52,[[],["any",8]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"vzip","","",53,[[]]],[11,"init","","",53,[[]]],[11,"deref","","",53,[[]]],[11,"deref_mut","","",53,[[]]],[11,"drop","","",53,[[]]],[11,"into_any_arc","","",53,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",53,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",53,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",53,[[],["any",8]]],[11,"as_any_mut","","",53,[[],["any",8]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"vzip","","",54,[[]]],[11,"init","","",54,[[]]],[11,"deref","","",54,[[]]],[11,"deref_mut","","",54,[[]]],[11,"drop","","",54,[[]]],[11,"into_any_arc","","",54,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",54,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",54,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",54,[[],["any",8]]],[11,"as_any_mut","","",54,[[],["any",8]]],[11,"from","smoldot::chain::chain_information::aura_config","",55,[[]]],[11,"into","","",55,[[]]],[11,"to_owned","","",55,[[]]],[11,"clone_into","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"vzip","","",55,[[]]],[11,"init","","",55,[[]]],[11,"deref","","",55,[[]]],[11,"deref_mut","","",55,[[]]],[11,"drop","","",55,[[]]],[11,"into_any_arc","","",55,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",55,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",55,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",55,[[],["any",8]]],[11,"as_any_mut","","",55,[[],["any",8]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"to_string","","",56,[[],["string",3]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"vzip","","",56,[[]]],[11,"init","","",56,[[]]],[11,"deref","","",56,[[]]],[11,"deref_mut","","",56,[[]]],[11,"drop","","",56,[[]]],[11,"into_any_arc","","",56,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",56,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",56,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",56,[[],["any",8]]],[11,"as_any_mut","","",56,[[],["any",8]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"to_string","","",57,[[],["string",3]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"vzip","","",57,[[]]],[11,"init","","",57,[[]]],[11,"deref","","",57,[[]]],[11,"deref_mut","","",57,[[]]],[11,"drop","","",57,[[]]],[11,"into_any_arc","","",57,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",57,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",57,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",57,[[],["any",8]]],[11,"as_any_mut","","",57,[[],["any",8]]],[11,"from","smoldot::chain::chain_information::babe_config","",58,[[]]],[11,"into","","",58,[[]]],[11,"to_owned","","",58,[[]]],[11,"clone_into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"vzip","","",58,[[]]],[11,"init","","",58,[[]]],[11,"deref","","",58,[[]]],[11,"deref_mut","","",58,[[]]],[11,"drop","","",58,[[]]],[11,"into_any_arc","","",58,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",58,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",58,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",58,[[],["any",8]]],[11,"as_any_mut","","",58,[[],["any",8]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"to_string","","",59,[[],["string",3]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"vzip","","",59,[[]]],[11,"init","","",59,[[]]],[11,"deref","","",59,[[]]],[11,"deref_mut","","",59,[[]]],[11,"drop","","",59,[[]]],[11,"into_any_arc","","",59,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",59,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",59,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",59,[[],["any",8]]],[11,"as_any_mut","","",59,[[],["any",8]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"to_string","","",60,[[],["string",3]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"vzip","","",60,[[]]],[11,"init","","",60,[[]]],[11,"deref","","",60,[[]]],[11,"deref_mut","","",60,[[]]],[11,"drop","","",60,[[]]],[11,"into_any_arc","","",60,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",60,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",60,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",60,[[],["any",8]]],[11,"as_any_mut","","",60,[[],["any",8]]],[11,"from","smoldot::chain::chain_information::babe_fetch_epoch","",61,[[]]],[11,"into","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"vzip","","",61,[[]]],[11,"init","","",61,[[]]],[11,"deref","","",61,[[]]],[11,"deref_mut","","",61,[[]]],[11,"drop","","",61,[[]]],[11,"into_any_arc","","",61,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",61,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",61,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",61,[[],["any",8]]],[11,"as_any_mut","","",61,[[],["any",8]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"vzip","","",62,[[]]],[11,"init","","",62,[[]]],[11,"deref","","",62,[[]]],[11,"deref_mut","","",62,[[]]],[11,"drop","","",62,[[]]],[11,"into_any","","",62,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",62,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",62,[[],["any",8]]],[11,"as_any_mut","","",62,[[],["any",8]]],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"to_owned","","",63,[[]]],[11,"clone_into","","",63,[[]]],[11,"to_string","","",63,[[],["string",3]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"vzip","","",63,[[]]],[11,"init","","",63,[[]]],[11,"deref","","",63,[[]]],[11,"deref_mut","","",63,[[]]],[11,"drop","","",63,[[]]],[11,"into_any_arc","","",63,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",63,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",63,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",63,[[],["any",8]]],[11,"as_any_mut","","",63,[[],["any",8]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"vzip","","",64,[[]]],[11,"init","","",64,[[]]],[11,"deref","","",64,[[]]],[11,"deref_mut","","",64,[[]]],[11,"drop","","",64,[[]]],[11,"into_any","","",64,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",64,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",64,[[],["any",8]]],[11,"as_any_mut","","",64,[[],["any",8]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"vzip","","",65,[[]]],[11,"init","","",65,[[]]],[11,"deref","","",65,[[]]],[11,"deref_mut","","",65,[[]]],[11,"drop","","",65,[[]]],[11,"into_any","","",65,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",65,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",65,[[],["any",8]]],[11,"as_any_mut","","",65,[[],["any",8]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"vzip","","",66,[[]]],[11,"init","","",66,[[]]],[11,"deref","","",66,[[]]],[11,"deref_mut","","",66,[[]]],[11,"drop","","",66,[[]]],[11,"into_any","","",66,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",66,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",66,[[],["any",8]]],[11,"as_any_mut","","",66,[[],["any",8]]],[11,"from","smoldot::chain::chain_information","",67,[[]]],[11,"into","","",67,[[]]],[11,"to_owned","","",67,[[]]],[11,"clone_into","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"vzip","","",67,[[]]],[11,"init","","",67,[[]]],[11,"deref","","",67,[[]]],[11,"deref_mut","","",67,[[]]],[11,"drop","","",67,[[]]],[11,"into_any_arc","","",67,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",67,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",67,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",67,[[],["any",8]]],[11,"as_any_mut","","",67,[[],["any",8]]],[11,"from","","",68,[[]]],[11,"into","","",68,[[]]],[11,"to_owned","","",68,[[]]],[11,"clone_into","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"vzip","","",68,[[]]],[11,"init","","",68,[[]]],[11,"deref","","",68,[[]]],[11,"deref_mut","","",68,[[]]],[11,"drop","","",68,[[]]],[11,"into_any_arc","","",68,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",68,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",68,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",68,[[],["any",8]]],[11,"as_any_mut","","",68,[[],["any",8]]],[11,"from","","",71,[[]]],[11,"into","","",71,[[]]],[11,"to_owned","","",71,[[]]],[11,"clone_into","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"vzip","","",71,[[]]],[11,"init","","",71,[[]]],[11,"deref","","",71,[[]]],[11,"deref_mut","","",71,[[]]],[11,"drop","","",71,[[]]],[11,"into_any_arc","","",71,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",71,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",71,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",71,[[],["any",8]]],[11,"as_any_mut","","",71,[[],["any",8]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"to_owned","","",72,[[]]],[11,"clone_into","","",72,[[]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"vzip","","",72,[[]]],[11,"init","","",72,[[]]],[11,"deref","","",72,[[]]],[11,"deref_mut","","",72,[[]]],[11,"drop","","",72,[[]]],[11,"into_any_arc","","",72,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",72,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",72,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",72,[[],["any",8]]],[11,"as_any_mut","","",72,[[],["any",8]]],[11,"from","","",74,[[]]],[11,"into","","",74,[[]]],[11,"to_string","","",74,[[],["string",3]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"vzip","","",74,[[]]],[11,"init","","",74,[[]]],[11,"deref","","",74,[[]]],[11,"deref_mut","","",74,[[]]],[11,"drop","","",74,[[]]],[11,"into_any_arc","","",74,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",74,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",74,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",74,[[],["any",8]]],[11,"as_any_mut","","",74,[[],["any",8]]],[11,"from","","",75,[[]]],[11,"into","","",75,[[]]],[11,"to_owned","","",75,[[]]],[11,"clone_into","","",75,[[]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"vzip","","",75,[[]]],[11,"init","","",75,[[]]],[11,"deref","","",75,[[]]],[11,"deref_mut","","",75,[[]]],[11,"drop","","",75,[[]]],[11,"into_any_arc","","",75,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",75,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",75,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",75,[[],["any",8]]],[11,"as_any_mut","","",75,[[],["any",8]]],[11,"from","","",76,[[]]],[11,"into","","",76,[[]]],[11,"to_owned","","",76,[[]]],[11,"clone_into","","",76,[[]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"vzip","","",76,[[]]],[11,"init","","",76,[[]]],[11,"deref","","",76,[[]]],[11,"deref_mut","","",76,[[]]],[11,"drop","","",76,[[]]],[11,"into_any_arc","","",76,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",76,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",76,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",76,[[],["any",8]]],[11,"as_any_mut","","",76,[[],["any",8]]],[11,"from","","",77,[[]]],[11,"into","","",77,[[]]],[11,"to_owned","","",77,[[]]],[11,"clone_into","","",77,[[]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"vzip","","",77,[[]]],[11,"init","","",77,[[]]],[11,"deref","","",77,[[]]],[11,"deref_mut","","",77,[[]]],[11,"drop","","",77,[[]]],[11,"into_any_arc","","",77,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",77,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",77,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",77,[[],["any",8]]],[11,"as_any_mut","","",77,[[],["any",8]]],[11,"from","","",80,[[]]],[11,"into","","",80,[[]]],[11,"to_owned","","",80,[[]]],[11,"clone_into","","",80,[[]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"vzip","","",80,[[]]],[11,"init","","",80,[[]]],[11,"deref","","",80,[[]]],[11,"deref_mut","","",80,[[]]],[11,"drop","","",80,[[]]],[11,"into_any_arc","","",80,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",80,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",80,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",80,[[],["any",8]]],[11,"as_any_mut","","",80,[[],["any",8]]],[11,"from","","",81,[[]]],[11,"into","","",81,[[]]],[11,"to_owned","","",81,[[]]],[11,"clone_into","","",81,[[]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"vzip","","",81,[[]]],[11,"init","","",81,[[]]],[11,"deref","","",81,[[]]],[11,"deref_mut","","",81,[[]]],[11,"drop","","",81,[[]]],[11,"into_any_arc","","",81,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",81,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",81,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",81,[[],["any",8]]],[11,"as_any_mut","","",81,[[],["any",8]]],[11,"from","smoldot::chain::fork_tree","",83,[[]]],[11,"into","","",83,[[]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"try_into","","",83,[[],["result",4]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"vzip","","",83,[[]]],[11,"init","","",83,[[]]],[11,"deref","","",83,[[]]],[11,"deref_mut","","",83,[[]]],[11,"drop","","",83,[[]]],[11,"into_any_arc","","",83,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",83,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",83,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",83,[[],["any",8]]],[11,"as_any_mut","","",83,[[],["any",8]]],[11,"from","","",477,[[]]],[11,"into","","",477,[[]]],[11,"into_iter","","",477,[[]]],[11,"borrow","","",477,[[]]],[11,"borrow_mut","","",477,[[]]],[11,"try_from","","",477,[[],["result",4]]],[11,"try_into","","",477,[[],["result",4]]],[11,"type_id","","",477,[[],["typeid",3]]],[11,"vzip","","",477,[[]]],[11,"init","","",477,[[]]],[11,"deref","","",477,[[]]],[11,"deref_mut","","",477,[[]]],[11,"drop","","",477,[[]]],[11,"into_any_arc","","",477,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",477,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",477,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",477,[[],["any",8]]],[11,"as_any_mut","","",477,[[],["any",8]]],[11,"from","","",84,[[]]],[11,"into","","",84,[[]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"try_into","","",84,[[],["result",4]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"vzip","","",84,[[]]],[11,"init","","",84,[[]]],[11,"deref","","",84,[[]]],[11,"deref_mut","","",84,[[]]],[11,"drop","","",84,[[]]],[11,"into_any_arc","","",84,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",84,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",84,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",84,[[],["any",8]]],[11,"as_any_mut","","",84,[[],["any",8]]],[11,"from","","",478,[[]]],[11,"into","","",478,[[]]],[11,"to_owned","","",478,[[]]],[11,"clone_into","","",478,[[]]],[11,"borrow","","",478,[[]]],[11,"borrow_mut","","",478,[[]]],[11,"try_from","","",478,[[],["result",4]]],[11,"try_into","","",478,[[],["result",4]]],[11,"type_id","","",478,[[],["typeid",3]]],[11,"vzip","","",478,[[]]],[11,"init","","",478,[[]]],[11,"deref","","",478,[[]]],[11,"deref_mut","","",478,[[]]],[11,"drop","","",478,[[]]],[11,"into_any_arc","","",478,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",478,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",478,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",478,[[],["any",8]]],[11,"as_any_mut","","",478,[[],["any",8]]],[11,"equivalent","","",478,[[]]],[11,"from","smoldot::chain::sync::optimistic","",85,[[]]],[11,"into","","",85,[[]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"try_into","","",85,[[],["result",4]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"vzip","","",85,[[]]],[11,"init","","",85,[[]]],[11,"deref","","",85,[[]]],[11,"deref_mut","","",85,[[]]],[11,"drop","","",85,[[]]],[11,"into_any_arc","","",85,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",85,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",85,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",85,[[],["any",8]]],[11,"as_any_mut","","",85,[[],["any",8]]],[11,"from","","",479,[[]]],[11,"into","","",479,[[]]],[11,"to_owned","","",479,[[]]],[11,"clone_into","","",479,[[]]],[11,"borrow","","",479,[[]]],[11,"borrow_mut","","",479,[[]]],[11,"try_from","","",479,[[],["result",4]]],[11,"try_into","","",479,[[],["result",4]]],[11,"type_id","","",479,[[],["typeid",3]]],[11,"get_hash","","",479,[[]]],[11,"vzip","","",479,[[]]],[11,"init","","",479,[[]]],[11,"deref","","",479,[[]]],[11,"deref_mut","","",479,[[]]],[11,"drop","","",479,[[]]],[11,"into_any_arc","","",479,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",479,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",479,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",479,[[],["any",8]]],[11,"as_any_mut","","",479,[[],["any",8]]],[11,"get_hash","","",479,[[]]],[11,"equivalent","","",479,[[]]],[11,"from","","",480,[[]]],[11,"into","","",480,[[]]],[11,"to_owned","","",480,[[]]],[11,"clone_into","","",480,[[]]],[11,"borrow","","",480,[[]]],[11,"borrow_mut","","",480,[[]]],[11,"try_from","","",480,[[],["result",4]]],[11,"try_into","","",480,[[],["result",4]]],[11,"type_id","","",480,[[],["typeid",3]]],[11,"get_hash","","",480,[[]]],[11,"vzip","","",480,[[]]],[11,"init","","",480,[[]]],[11,"deref","","",480,[[]]],[11,"deref_mut","","",480,[[]]],[11,"drop","","",480,[[]]],[11,"into_any_arc","","",480,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",480,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",480,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",480,[[],["any",8]]],[11,"as_any_mut","","",480,[[],["any",8]]],[11,"get_hash","","",480,[[]]],[11,"equivalent","","",480,[[]]],[11,"from","","",87,[[]]],[11,"into","","",87,[[]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"try_into","","",87,[[],["result",4]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"vzip","","",87,[[]]],[11,"init","","",87,[[]]],[11,"deref","","",87,[[]]],[11,"deref_mut","","",87,[[]]],[11,"drop","","",87,[[]]],[11,"into_any","","",87,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",87,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",87,[[],["any",8]]],[11,"as_any_mut","","",87,[[],["any",8]]],[11,"from","","",86,[[]]],[11,"into","","",86,[[]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"try_into","","",86,[[],["result",4]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"vzip","","",86,[[]]],[11,"init","","",86,[[]]],[11,"deref","","",86,[[]]],[11,"deref_mut","","",86,[[]]],[11,"drop","","",86,[[]]],[11,"into_any_arc","","",86,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",86,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",86,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",86,[[],["any",8]]],[11,"as_any_mut","","",86,[[],["any",8]]],[11,"from","","",88,[[]]],[11,"into","","",88,[[]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"try_into","","",88,[[],["result",4]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"vzip","","",88,[[]]],[11,"init","","",88,[[]]],[11,"deref","","",88,[[]]],[11,"deref_mut","","",88,[[]]],[11,"drop","","",88,[[]]],[11,"into_any_arc","","",88,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",88,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",88,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",88,[[],["any",8]]],[11,"as_any_mut","","",88,[[],["any",8]]],[11,"from","","",89,[[]]],[11,"into","","",89,[[]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"try_into","","",89,[[],["result",4]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"vzip","","",89,[[]]],[11,"init","","",89,[[]]],[11,"deref","","",89,[[]]],[11,"deref_mut","","",89,[[]]],[11,"drop","","",89,[[]]],[11,"into_any","","",89,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",89,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",89,[[],["any",8]]],[11,"as_any_mut","","",89,[[],["any",8]]],[11,"from","","",94,[[]]],[11,"into","","",94,[[]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"try_into","","",94,[[],["result",4]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"vzip","","",94,[[]]],[11,"init","","",94,[[]]],[11,"deref","","",94,[[]]],[11,"deref_mut","","",94,[[]]],[11,"drop","","",94,[[]]],[11,"into_any","","",94,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",94,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",94,[[],["any",8]]],[11,"as_any_mut","","",94,[[],["any",8]]],[11,"from","","",95,[[]]],[11,"into","","",95,[[]]],[11,"borrow","","",95,[[]]],[11,"borrow_mut","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"try_into","","",95,[[],["result",4]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"vzip","","",95,[[]]],[11,"init","","",95,[[]]],[11,"deref","","",95,[[]]],[11,"deref_mut","","",95,[[]]],[11,"drop","","",95,[[]]],[11,"into_any","","",95,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",95,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",95,[[],["any",8]]],[11,"as_any_mut","","",95,[[],["any",8]]],[11,"from","","",96,[[]]],[11,"into","","",96,[[]]],[11,"borrow","","",96,[[]]],[11,"borrow_mut","","",96,[[]]],[11,"try_from","","",96,[[],["result",4]]],[11,"try_into","","",96,[[],["result",4]]],[11,"type_id","","",96,[[],["typeid",3]]],[11,"vzip","","",96,[[]]],[11,"init","","",96,[[]]],[11,"deref","","",96,[[]]],[11,"deref_mut","","",96,[[]]],[11,"drop","","",96,[[]]],[11,"into_any","","",96,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",96,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",96,[[],["any",8]]],[11,"as_any_mut","","",96,[[],["any",8]]],[11,"from","","",97,[[]]],[11,"into","","",97,[[]]],[11,"borrow","","",97,[[]]],[11,"borrow_mut","","",97,[[]]],[11,"try_from","","",97,[[],["result",4]]],[11,"try_into","","",97,[[],["result",4]]],[11,"type_id","","",97,[[],["typeid",3]]],[11,"vzip","","",97,[[]]],[11,"init","","",97,[[]]],[11,"deref","","",97,[[]]],[11,"deref_mut","","",97,[[]]],[11,"drop","","",97,[[]]],[11,"into_any_arc","","",97,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",97,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",97,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",97,[[],["any",8]]],[11,"as_any_mut","","",97,[[],["any",8]]],[11,"from","","",100,[[]]],[11,"into","","",100,[[]]],[11,"borrow","","",100,[[]]],[11,"borrow_mut","","",100,[[]]],[11,"try_from","","",100,[[],["result",4]]],[11,"try_into","","",100,[[],["result",4]]],[11,"type_id","","",100,[[],["typeid",3]]],[11,"vzip","","",100,[[]]],[11,"init","","",100,[[]]],[11,"deref","","",100,[[]]],[11,"deref_mut","","",100,[[]]],[11,"drop","","",100,[[]]],[11,"into_any_arc","","",100,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",100,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",100,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",100,[[],["any",8]]],[11,"as_any_mut","","",100,[[],["any",8]]],[11,"from","","",101,[[]]],[11,"into","","",101,[[]]],[11,"borrow","","",101,[[]]],[11,"borrow_mut","","",101,[[]]],[11,"try_from","","",101,[[],["result",4]]],[11,"try_into","","",101,[[],["result",4]]],[11,"type_id","","",101,[[],["typeid",3]]],[11,"vzip","","",101,[[]]],[11,"init","","",101,[[]]],[11,"deref","","",101,[[]]],[11,"deref_mut","","",101,[[]]],[11,"drop","","",101,[[]]],[11,"into_any_arc","","",101,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",101,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",101,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",101,[[],["any",8]]],[11,"as_any_mut","","",101,[[],["any",8]]],[11,"from","","",102,[[]]],[11,"into","","",102,[[]]],[11,"borrow","","",102,[[]]],[11,"borrow_mut","","",102,[[]]],[11,"try_from","","",102,[[],["result",4]]],[11,"try_into","","",102,[[],["result",4]]],[11,"type_id","","",102,[[],["typeid",3]]],[11,"vzip","","",102,[[]]],[11,"init","","",102,[[]]],[11,"deref","","",102,[[]]],[11,"deref_mut","","",102,[[]]],[11,"drop","","",102,[[]]],[11,"into_any_arc","","",102,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",102,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",102,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",102,[[],["any",8]]],[11,"as_any_mut","","",102,[[],["any",8]]],[11,"from","","",481,[[]]],[11,"into","","",481,[[]]],[11,"into_iter","","",481,[[]]],[11,"borrow","","",481,[[]]],[11,"borrow_mut","","",481,[[]]],[11,"try_from","","",481,[[],["result",4]]],[11,"try_into","","",481,[[],["result",4]]],[11,"type_id","","",481,[[],["typeid",3]]],[11,"vzip","","",481,[[]]],[11,"init","","",481,[[]]],[11,"deref","","",481,[[]]],[11,"deref_mut","","",481,[[]]],[11,"drop","","",481,[[]]],[11,"into_any_arc","","",481,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",481,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",481,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",481,[[],["any",8]]],[11,"as_any_mut","","",481,[[],["any",8]]],[11,"from","","",103,[[]]],[11,"into","","",103,[[]]],[11,"to_string","","",103,[[],["string",3]]],[11,"borrow","","",103,[[]]],[11,"borrow_mut","","",103,[[]]],[11,"try_from","","",103,[[],["result",4]]],[11,"try_into","","",103,[[],["result",4]]],[11,"type_id","","",103,[[],["typeid",3]]],[11,"vzip","","",103,[[]]],[11,"init","","",103,[[]]],[11,"deref","","",103,[[]]],[11,"deref_mut","","",103,[[]]],[11,"drop","","",103,[[]]],[11,"into_any_arc","","",103,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",103,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",103,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",103,[[],["any",8]]],[11,"as_any_mut","","",103,[[],["any",8]]],[11,"from","smoldot::chain_spec","",105,[[]]],[11,"into","","",105,[[]]],[11,"borrow","","",105,[[]]],[11,"borrow_mut","","",105,[[]]],[11,"try_from","","",105,[[],["result",4]]],[11,"try_into","","",105,[[],["result",4]]],[11,"type_id","","",105,[[],["typeid",3]]],[11,"vzip","","",105,[[]]],[11,"init","","",105,[[]]],[11,"deref","","",105,[[]]],[11,"deref_mut","","",105,[[]]],[11,"drop","","",105,[[]]],[11,"into_any_arc","","",105,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",105,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",105,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",105,[[],["any",8]]],[11,"as_any_mut","","",105,[[],["any",8]]],[11,"from","","",106,[[]]],[11,"into","","",106,[[]]],[11,"to_owned","","",106,[[]]],[11,"clone_into","","",106,[[]]],[11,"borrow","","",106,[[]]],[11,"borrow_mut","","",106,[[]]],[11,"try_from","","",106,[[],["result",4]]],[11,"try_into","","",106,[[],["result",4]]],[11,"type_id","","",106,[[],["typeid",3]]],[11,"vzip","","",106,[[]]],[11,"init","","",106,[[]]],[11,"deref","","",106,[[]]],[11,"deref_mut","","",106,[[]]],[11,"drop","","",106,[[]]],[11,"into_any_arc","","",106,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",106,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",106,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",106,[[],["any",8]]],[11,"as_any_mut","","",106,[[],["any",8]]],[11,"from","","",482,[[]]],[11,"into","","",482,[[]]],[11,"to_string","","",482,[[],["string",3]]],[11,"borrow","","",482,[[]]],[11,"borrow_mut","","",482,[[]]],[11,"try_from","","",482,[[],["result",4]]],[11,"try_into","","",482,[[],["result",4]]],[11,"type_id","","",482,[[],["typeid",3]]],[11,"vzip","","",482,[[]]],[11,"init","","",482,[[]]],[11,"deref","","",482,[[]]],[11,"deref_mut","","",482,[[]]],[11,"drop","","",482,[[]]],[11,"into_any_arc","","",482,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",482,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",482,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",482,[[],["any",8]]],[11,"as_any_mut","","",482,[[],["any",8]]],[11,"from","smoldot::database::finalized_serialize","",483,[[]]],[11,"into","","",483,[[]]],[11,"to_string","","",483,[[],["string",3]]],[11,"borrow","","",483,[[]]],[11,"borrow_mut","","",483,[[]]],[11,"try_from","","",483,[[],["result",4]]],[11,"try_into","","",483,[[],["result",4]]],[11,"type_id","","",483,[[],["typeid",3]]],[11,"vzip","","",483,[[]]],[11,"init","","",483,[[]]],[11,"deref","","",483,[[]]],[11,"deref_mut","","",483,[[]]],[11,"drop","","",483,[[]]],[11,"into_any_arc","","",483,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",483,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",483,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",483,[[],["any",8]]],[11,"as_any_mut","","",483,[[],["any",8]]],[11,"from","smoldot::database::full_sled","",107,[[]]],[11,"into","","",107,[[]]],[11,"borrow","","",107,[[]]],[11,"borrow_mut","","",107,[[]]],[11,"try_from","","",107,[[],["result",4]]],[11,"try_into","","",107,[[],["result",4]]],[11,"type_id","","",107,[[],["typeid",3]]],[11,"vzip","","",107,[[]]],[11,"init","","",107,[[]]],[11,"deref","","",107,[[]]],[11,"deref_mut","","",107,[[]]],[11,"drop","","",107,[[]]],[11,"into_any_arc","","",107,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",107,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",107,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",107,[[],["any",8]]],[11,"as_any_mut","","",107,[[],["any",8]]],[11,"from","","",108,[[]]],[11,"into","","",108,[[]]],[11,"borrow","","",108,[[]]],[11,"borrow_mut","","",108,[[]]],[11,"try_from","","",108,[[],["result",4]]],[11,"try_into","","",108,[[],["result",4]]],[11,"type_id","","",108,[[],["typeid",3]]],[11,"vzip","","",108,[[]]],[11,"init","","",108,[[]]],[11,"deref","","",108,[[]]],[11,"deref_mut","","",108,[[]]],[11,"drop","","",108,[[]]],[11,"into_any_arc","","",108,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",108,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",108,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",108,[[],["any",8]]],[11,"as_any_mut","","",108,[[],["any",8]]],[11,"from","","",109,[[]]],[11,"into","","",109,[[]]],[11,"borrow","","",109,[[]]],[11,"borrow_mut","","",109,[[]]],[11,"try_from","","",109,[[],["result",4]]],[11,"try_into","","",109,[[],["result",4]]],[11,"type_id","","",109,[[],["typeid",3]]],[11,"vzip","","",109,[[]]],[11,"init","","",109,[[]]],[11,"deref","","",109,[[]]],[11,"deref_mut","","",109,[[]]],[11,"drop","","",109,[[]]],[11,"into_any_arc","","",109,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",109,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",109,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",109,[[],["any",8]]],[11,"as_any_mut","","",109,[[],["any",8]]],[11,"from","","",484,[[]]],[11,"into","","",484,[[]]],[11,"borrow","","",484,[[]]],[11,"borrow_mut","","",484,[[]]],[11,"try_from","","",484,[[],["result",4]]],[11,"try_into","","",484,[[],["result",4]]],[11,"type_id","","",484,[[],["typeid",3]]],[11,"vzip","","",484,[[]]],[11,"init","","",484,[[]]],[11,"deref","","",484,[[]]],[11,"deref_mut","","",484,[[]]],[11,"drop","","",484,[[]]],[11,"into_any_arc","","",484,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",484,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",484,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",484,[[],["any",8]]],[11,"as_any_mut","","",484,[[],["any",8]]],[11,"from","","",110,[[]]],[11,"into","","",110,[[]]],[11,"borrow","","",110,[[]]],[11,"borrow_mut","","",110,[[]]],[11,"try_from","","",110,[[],["result",4]]],[11,"try_into","","",110,[[],["result",4]]],[11,"type_id","","",110,[[],["typeid",3]]],[11,"vzip","","",110,[[]]],[11,"init","","",110,[[]]],[11,"deref","","",110,[[]]],[11,"deref_mut","","",110,[[]]],[11,"drop","","",110,[[]]],[11,"into_any_arc","","",110,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",110,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",110,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",110,[[],["any",8]]],[11,"as_any_mut","","",110,[[],["any",8]]],[11,"from","","",485,[[]]],[11,"into","","",485,[[]]],[11,"borrow","","",485,[[]]],[11,"borrow_mut","","",485,[[]]],[11,"try_from","","",485,[[],["result",4]]],[11,"try_into","","",485,[[],["result",4]]],[11,"type_id","","",485,[[],["typeid",3]]],[11,"vzip","","",485,[[]]],[11,"init","","",485,[[]]],[11,"deref","","",485,[[]]],[11,"deref_mut","","",485,[[]]],[11,"drop","","",485,[[]]],[11,"into_any_arc","","",485,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",485,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",485,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",485,[[],["any",8]]],[11,"as_any_mut","","",485,[[],["any",8]]],[11,"from","","",111,[[]]],[11,"into","","",111,[[]]],[11,"to_string","","",111,[[],["string",3]]],[11,"borrow","","",111,[[]]],[11,"borrow_mut","","",111,[[]]],[11,"try_from","","",111,[[],["result",4]]],[11,"try_into","","",111,[[],["result",4]]],[11,"type_id","","",111,[[],["typeid",3]]],[11,"vzip","","",111,[[]]],[11,"init","","",111,[[]]],[11,"deref","","",111,[[]]],[11,"deref_mut","","",111,[[]]],[11,"drop","","",111,[[]]],[11,"into_any_arc","","",111,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",111,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",111,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",111,[[],["any",8]]],[11,"as_any_mut","","",111,[[],["any",8]]],[11,"from","","",486,[[]]],[11,"into","","",486,[[]]],[11,"to_string","","",486,[[],["string",3]]],[11,"borrow","","",486,[[]]],[11,"borrow_mut","","",486,[[]]],[11,"try_from","","",486,[[],["result",4]]],[11,"try_into","","",486,[[],["result",4]]],[11,"type_id","","",486,[[],["typeid",3]]],[11,"vzip","","",486,[[]]],[11,"init","","",486,[[]]],[11,"deref","","",486,[[]]],[11,"deref_mut","","",486,[[]]],[11,"drop","","",486,[[]]],[11,"into_any_arc","","",486,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",486,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",486,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",486,[[],["any",8]]],[11,"as_any_mut","","",486,[[],["any",8]]],[11,"from","","",112,[[]]],[11,"into","","",112,[[]]],[11,"to_string","","",112,[[],["string",3]]],[11,"borrow","","",112,[[]]],[11,"borrow_mut","","",112,[[]]],[11,"try_from","","",112,[[],["result",4]]],[11,"try_into","","",112,[[],["result",4]]],[11,"type_id","","",112,[[],["typeid",3]]],[11,"vzip","","",112,[[]]],[11,"init","","",112,[[]]],[11,"deref","","",112,[[]]],[11,"deref_mut","","",112,[[]]],[11,"drop","","",112,[[]]],[11,"into_any_arc","","",112,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",112,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",112,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",112,[[],["any",8]]],[11,"as_any_mut","","",112,[[],["any",8]]],[11,"from","","",113,[[]]],[11,"into","","",113,[[]]],[11,"to_string","","",113,[[],["string",3]]],[11,"borrow","","",113,[[]]],[11,"borrow_mut","","",113,[[]]],[11,"try_from","","",113,[[],["result",4]]],[11,"try_into","","",113,[[],["result",4]]],[11,"type_id","","",113,[[],["typeid",3]]],[11,"vzip","","",113,[[]]],[11,"init","","",113,[[]]],[11,"deref","","",113,[[]]],[11,"deref_mut","","",113,[[]]],[11,"drop","","",113,[[]]],[11,"into_any_arc","","",113,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",113,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",113,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",113,[[],["any",8]]],[11,"as_any_mut","","",113,[[],["any",8]]],[11,"from","","",114,[[]]],[11,"into","","",114,[[]]],[11,"to_string","","",114,[[],["string",3]]],[11,"borrow","","",114,[[]]],[11,"borrow_mut","","",114,[[]]],[11,"try_from","","",114,[[],["result",4]]],[11,"try_into","","",114,[[],["result",4]]],[11,"type_id","","",114,[[],["typeid",3]]],[11,"vzip","","",114,[[]]],[11,"init","","",114,[[]]],[11,"deref","","",114,[[]]],[11,"deref_mut","","",114,[[]]],[11,"drop","","",114,[[]]],[11,"into_any_arc","","",114,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",114,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",114,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",114,[[],["any",8]]],[11,"as_any_mut","","",114,[[],["any",8]]],[11,"from","","",115,[[]]],[11,"into","","",115,[[]]],[11,"to_string","","",115,[[],["string",3]]],[11,"borrow","","",115,[[]]],[11,"borrow_mut","","",115,[[]]],[11,"try_from","","",115,[[],["result",4]]],[11,"try_into","","",115,[[],["result",4]]],[11,"type_id","","",115,[[],["typeid",3]]],[11,"vzip","","",115,[[]]],[11,"init","","",115,[[]]],[11,"deref","","",115,[[]]],[11,"deref_mut","","",115,[[]]],[11,"drop","","",115,[[]]],[11,"into_any_arc","","",115,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",115,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",115,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",115,[[],["any",8]]],[11,"as_any_mut","","",115,[[],["any",8]]],[11,"from","smoldot::executor::host","",116,[[]]],[11,"into","","",116,[[]]],[11,"borrow","","",116,[[]]],[11,"borrow_mut","","",116,[[]]],[11,"try_from","","",116,[[],["result",4]]],[11,"try_into","","",116,[[],["result",4]]],[11,"type_id","","",116,[[],["typeid",3]]],[11,"vzip","","",116,[[]]],[11,"init","","",116,[[]]],[11,"deref","","",116,[[]]],[11,"deref_mut","","",116,[[]]],[11,"drop","","",116,[[]]],[11,"into_any","","",116,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",116,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",116,[[],["any",8]]],[11,"as_any_mut","","",116,[[],["any",8]]],[11,"from","","",117,[[]]],[11,"into","","",117,[[]]],[11,"borrow","","",117,[[]]],[11,"borrow_mut","","",117,[[]]],[11,"try_from","","",117,[[],["result",4]]],[11,"try_into","","",117,[[],["result",4]]],[11,"type_id","","",117,[[],["typeid",3]]],[11,"vzip","","",117,[[]]],[11,"init","","",117,[[]]],[11,"deref","","",117,[[]]],[11,"deref_mut","","",117,[[]]],[11,"drop","","",117,[[]]],[11,"into_any","","",117,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",117,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",117,[[],["any",8]]],[11,"as_any_mut","","",117,[[],["any",8]]],[11,"from","","",120,[[]]],[11,"into","","",120,[[]]],[11,"borrow","","",120,[[]]],[11,"borrow_mut","","",120,[[]]],[11,"try_from","","",120,[[],["result",4]]],[11,"try_into","","",120,[[],["result",4]]],[11,"type_id","","",120,[[],["typeid",3]]],[11,"vzip","","",120,[[]]],[11,"init","","",120,[[]]],[11,"deref","","",120,[[]]],[11,"deref_mut","","",120,[[]]],[11,"drop","","",120,[[]]],[11,"into_any","","",120,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",120,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",120,[[],["any",8]]],[11,"as_any_mut","","",120,[[],["any",8]]],[11,"from","","",121,[[]]],[11,"into","","",121,[[]]],[11,"borrow","","",121,[[]]],[11,"borrow_mut","","",121,[[]]],[11,"try_from","","",121,[[],["result",4]]],[11,"try_into","","",121,[[],["result",4]]],[11,"type_id","","",121,[[],["typeid",3]]],[11,"vzip","","",121,[[]]],[11,"init","","",121,[[]]],[11,"deref","","",121,[[]]],[11,"deref_mut","","",121,[[]]],[11,"drop","","",121,[[]]],[11,"into_any","","",121,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",121,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",121,[[],["any",8]]],[11,"as_any_mut","","",121,[[],["any",8]]],[11,"from","","",122,[[]]],[11,"into","","",122,[[]]],[11,"borrow","","",122,[[]]],[11,"borrow_mut","","",122,[[]]],[11,"try_from","","",122,[[],["result",4]]],[11,"try_into","","",122,[[],["result",4]]],[11,"type_id","","",122,[[],["typeid",3]]],[11,"vzip","","",122,[[]]],[11,"init","","",122,[[]]],[11,"deref","","",122,[[]]],[11,"deref_mut","","",122,[[]]],[11,"drop","","",122,[[]]],[11,"into_any","","",122,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",122,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",122,[[],["any",8]]],[11,"as_any_mut","","",122,[[],["any",8]]],[11,"from","","",123,[[]]],[11,"into","","",123,[[]]],[11,"borrow","","",123,[[]]],[11,"borrow_mut","","",123,[[]]],[11,"try_from","","",123,[[],["result",4]]],[11,"try_into","","",123,[[],["result",4]]],[11,"type_id","","",123,[[],["typeid",3]]],[11,"vzip","","",123,[[]]],[11,"init","","",123,[[]]],[11,"deref","","",123,[[]]],[11,"deref_mut","","",123,[[]]],[11,"drop","","",123,[[]]],[11,"into_any","","",123,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",123,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",123,[[],["any",8]]],[11,"as_any_mut","","",123,[[],["any",8]]],[11,"from","","",124,[[]]],[11,"into","","",124,[[]]],[11,"borrow","","",124,[[]]],[11,"borrow_mut","","",124,[[]]],[11,"try_from","","",124,[[],["result",4]]],[11,"try_into","","",124,[[],["result",4]]],[11,"type_id","","",124,[[],["typeid",3]]],[11,"vzip","","",124,[[]]],[11,"init","","",124,[[]]],[11,"deref","","",124,[[]]],[11,"deref_mut","","",124,[[]]],[11,"drop","","",124,[[]]],[11,"into_any","","",124,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",124,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",124,[[],["any",8]]],[11,"as_any_mut","","",124,[[],["any",8]]],[11,"from","","",125,[[]]],[11,"into","","",125,[[]]],[11,"borrow","","",125,[[]]],[11,"borrow_mut","","",125,[[]]],[11,"try_from","","",125,[[],["result",4]]],[11,"try_into","","",125,[[],["result",4]]],[11,"type_id","","",125,[[],["typeid",3]]],[11,"vzip","","",125,[[]]],[11,"init","","",125,[[]]],[11,"deref","","",125,[[]]],[11,"deref_mut","","",125,[[]]],[11,"drop","","",125,[[]]],[11,"into_any","","",125,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",125,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",125,[[],["any",8]]],[11,"as_any_mut","","",125,[[],["any",8]]],[11,"from","","",126,[[]]],[11,"into","","",126,[[]]],[11,"borrow","","",126,[[]]],[11,"borrow_mut","","",126,[[]]],[11,"try_from","","",126,[[],["result",4]]],[11,"try_into","","",126,[[],["result",4]]],[11,"type_id","","",126,[[],["typeid",3]]],[11,"vzip","","",126,[[]]],[11,"init","","",126,[[]]],[11,"deref","","",126,[[]]],[11,"deref_mut","","",126,[[]]],[11,"drop","","",126,[[]]],[11,"into_any","","",126,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",126,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",126,[[],["any",8]]],[11,"as_any_mut","","",126,[[],["any",8]]],[11,"from","","",127,[[]]],[11,"into","","",127,[[]]],[11,"borrow","","",127,[[]]],[11,"borrow_mut","","",127,[[]]],[11,"try_from","","",127,[[],["result",4]]],[11,"try_into","","",127,[[],["result",4]]],[11,"type_id","","",127,[[],["typeid",3]]],[11,"vzip","","",127,[[]]],[11,"init","","",127,[[]]],[11,"deref","","",127,[[]]],[11,"deref_mut","","",127,[[]]],[11,"drop","","",127,[[]]],[11,"into_any","","",127,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",127,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",127,[[],["any",8]]],[11,"as_any_mut","","",127,[[],["any",8]]],[11,"from","","",128,[[]]],[11,"into","","",128,[[]]],[11,"borrow","","",128,[[]]],[11,"borrow_mut","","",128,[[]]],[11,"try_from","","",128,[[],["result",4]]],[11,"try_into","","",128,[[],["result",4]]],[11,"type_id","","",128,[[],["typeid",3]]],[11,"vzip","","",128,[[]]],[11,"init","","",128,[[]]],[11,"deref","","",128,[[]]],[11,"deref_mut","","",128,[[]]],[11,"drop","","",128,[[]]],[11,"into_any","","",128,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",128,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",128,[[],["any",8]]],[11,"as_any_mut","","",128,[[],["any",8]]],[11,"from","","",129,[[]]],[11,"into","","",129,[[]]],[11,"borrow","","",129,[[]]],[11,"borrow_mut","","",129,[[]]],[11,"try_from","","",129,[[],["result",4]]],[11,"try_into","","",129,[[],["result",4]]],[11,"type_id","","",129,[[],["typeid",3]]],[11,"vzip","","",129,[[]]],[11,"init","","",129,[[]]],[11,"deref","","",129,[[]]],[11,"deref_mut","","",129,[[]]],[11,"drop","","",129,[[]]],[11,"into_any","","",129,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",129,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",129,[[],["any",8]]],[11,"as_any_mut","","",129,[[],["any",8]]],[11,"from","","",130,[[]]],[11,"into","","",130,[[]]],[11,"borrow","","",130,[[]]],[11,"borrow_mut","","",130,[[]]],[11,"try_from","","",130,[[],["result",4]]],[11,"try_into","","",130,[[],["result",4]]],[11,"type_id","","",130,[[],["typeid",3]]],[11,"vzip","","",130,[[]]],[11,"init","","",130,[[]]],[11,"deref","","",130,[[]]],[11,"deref_mut","","",130,[[]]],[11,"drop","","",130,[[]]],[11,"into_any","","",130,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",130,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",130,[[],["any",8]]],[11,"as_any_mut","","",130,[[],["any",8]]],[11,"from","","",131,[[]]],[11,"into","","",131,[[]]],[11,"to_string","","",131,[[],["string",3]]],[11,"borrow","","",131,[[]]],[11,"borrow_mut","","",131,[[]]],[11,"try_from","","",131,[[],["result",4]]],[11,"try_into","","",131,[[],["result",4]]],[11,"type_id","","",131,[[],["typeid",3]]],[11,"vzip","","",131,[[]]],[11,"init","","",131,[[]]],[11,"deref","","",131,[[]]],[11,"deref_mut","","",131,[[]]],[11,"drop","","",131,[[]]],[11,"into_any","","",131,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",131,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",131,[[],["any",8]]],[11,"as_any_mut","","",131,[[],["any",8]]],[11,"from","","",132,[[]]],[11,"into","","",132,[[]]],[11,"borrow","","",132,[[]]],[11,"borrow_mut","","",132,[[]]],[11,"try_from","","",132,[[],["result",4]]],[11,"try_into","","",132,[[],["result",4]]],[11,"type_id","","",132,[[],["typeid",3]]],[11,"vzip","","",132,[[]]],[11,"init","","",132,[[]]],[11,"deref","","",132,[[]]],[11,"deref_mut","","",132,[[]]],[11,"drop","","",132,[[]]],[11,"into_any","","",132,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",132,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",132,[[],["any",8]]],[11,"as_any_mut","","",132,[[],["any",8]]],[11,"from","","",133,[[]]],[11,"into","","",133,[[]]],[11,"borrow","","",133,[[]]],[11,"borrow_mut","","",133,[[]]],[11,"try_from","","",133,[[],["result",4]]],[11,"try_into","","",133,[[],["result",4]]],[11,"type_id","","",133,[[],["typeid",3]]],[11,"vzip","","",133,[[]]],[11,"init","","",133,[[]]],[11,"deref","","",133,[[]]],[11,"deref_mut","","",133,[[]]],[11,"drop","","",133,[[]]],[11,"into_any","","",133,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",133,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",133,[[],["any",8]]],[11,"as_any_mut","","",133,[[],["any",8]]],[11,"from","","",134,[[]]],[11,"into","","",134,[[]]],[11,"to_string","","",134,[[],["string",3]]],[11,"borrow","","",134,[[]]],[11,"borrow_mut","","",134,[[]]],[11,"try_from","","",134,[[],["result",4]]],[11,"try_into","","",134,[[],["result",4]]],[11,"type_id","","",134,[[],["typeid",3]]],[11,"vzip","","",134,[[]]],[11,"init","","",134,[[]]],[11,"deref","","",134,[[]]],[11,"deref_mut","","",134,[[]]],[11,"drop","","",134,[[]]],[11,"into_any_arc","","",134,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",134,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",134,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",134,[[],["any",8]]],[11,"as_any_mut","","",134,[[],["any",8]]],[11,"from","","",135,[[]]],[11,"into","","",135,[[]]],[11,"to_owned","","",135,[[]]],[11,"clone_into","","",135,[[]]],[11,"to_string","","",135,[[],["string",3]]],[11,"borrow","","",135,[[]]],[11,"borrow_mut","","",135,[[]]],[11,"try_from","","",135,[[],["result",4]]],[11,"try_into","","",135,[[],["result",4]]],[11,"type_id","","",135,[[],["typeid",3]]],[11,"vzip","","",135,[[]]],[11,"init","","",135,[[]]],[11,"deref","","",135,[[]]],[11,"deref_mut","","",135,[[]]],[11,"drop","","",135,[[]]],[11,"into_any_arc","","",135,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",135,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",135,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",135,[[],["any",8]]],[11,"as_any_mut","","",135,[[],["any",8]]],[11,"from","","",136,[[]]],[11,"into","","",136,[[]]],[11,"to_owned","","",136,[[]]],[11,"clone_into","","",136,[[]]],[11,"to_string","","",136,[[],["string",3]]],[11,"borrow","","",136,[[]]],[11,"borrow_mut","","",136,[[]]],[11,"try_from","","",136,[[],["result",4]]],[11,"try_into","","",136,[[],["result",4]]],[11,"type_id","","",136,[[],["typeid",3]]],[11,"vzip","","",136,[[]]],[11,"init","","",136,[[]]],[11,"deref","","",136,[[]]],[11,"deref_mut","","",136,[[]]],[11,"drop","","",136,[[]]],[11,"into_any_arc","","",136,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",136,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",136,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",136,[[],["any",8]]],[11,"as_any_mut","","",136,[[],["any",8]]],[11,"from","smoldot::executor::read_only_runtime_host","",145,[[]]],[11,"into","","",145,[[]]],[11,"borrow","","",145,[[]]],[11,"borrow_mut","","",145,[[]]],[11,"try_from","","",145,[[],["result",4]]],[11,"try_into","","",145,[[],["result",4]]],[11,"type_id","","",145,[[],["typeid",3]]],[11,"vzip","","",145,[[]]],[11,"init","","",145,[[]]],[11,"deref","","",145,[[]]],[11,"deref_mut","","",145,[[]]],[11,"drop","","",145,[[]]],[11,"into_any","","",145,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",145,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",145,[[],["any",8]]],[11,"as_any_mut","","",145,[[],["any",8]]],[11,"from","","",146,[[]]],[11,"into","","",146,[[]]],[11,"borrow","","",146,[[]]],[11,"borrow_mut","","",146,[[]]],[11,"try_from","","",146,[[],["result",4]]],[11,"try_into","","",146,[[],["result",4]]],[11,"type_id","","",146,[[],["typeid",3]]],[11,"vzip","","",146,[[]]],[11,"init","","",146,[[]]],[11,"deref","","",146,[[]]],[11,"deref_mut","","",146,[[]]],[11,"drop","","",146,[[]]],[11,"into_any","","",146,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",146,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",146,[[],["any",8]]],[11,"as_any_mut","","",146,[[],["any",8]]],[11,"from","","",147,[[]]],[11,"into","","",147,[[]]],[11,"borrow","","",147,[[]]],[11,"borrow_mut","","",147,[[]]],[11,"try_from","","",147,[[],["result",4]]],[11,"try_into","","",147,[[],["result",4]]],[11,"type_id","","",147,[[],["typeid",3]]],[11,"vzip","","",147,[[]]],[11,"init","","",147,[[]]],[11,"deref","","",147,[[]]],[11,"deref_mut","","",147,[[]]],[11,"drop","","",147,[[]]],[11,"into_any","","",147,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",147,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",147,[[],["any",8]]],[11,"as_any_mut","","",147,[[],["any",8]]],[11,"from","","",148,[[]]],[11,"into","","",148,[[]]],[11,"to_owned","","",148,[[]]],[11,"clone_into","","",148,[[]]],[11,"to_string","","",148,[[],["string",3]]],[11,"borrow","","",148,[[]]],[11,"borrow_mut","","",148,[[]]],[11,"try_from","","",148,[[],["result",4]]],[11,"try_into","","",148,[[],["result",4]]],[11,"type_id","","",148,[[],["typeid",3]]],[11,"vzip","","",148,[[]]],[11,"init","","",148,[[]]],[11,"deref","","",148,[[]]],[11,"deref_mut","","",148,[[]]],[11,"drop","","",148,[[]]],[11,"into_any_arc","","",148,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",148,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",148,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",148,[[],["any",8]]],[11,"as_any_mut","","",148,[[],["any",8]]],[11,"from","","",150,[[]]],[11,"into","","",150,[[]]],[11,"borrow","","",150,[[]]],[11,"borrow_mut","","",150,[[]]],[11,"try_from","","",150,[[],["result",4]]],[11,"try_into","","",150,[[],["result",4]]],[11,"type_id","","",150,[[],["typeid",3]]],[11,"vzip","","",150,[[]]],[11,"init","","",150,[[]]],[11,"deref","","",150,[[]]],[11,"deref_mut","","",150,[[]]],[11,"drop","","",150,[[]]],[11,"into_any","","",150,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",150,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",150,[[],["any",8]]],[11,"as_any_mut","","",150,[[],["any",8]]],[11,"from","","",151,[[]]],[11,"into","","",151,[[]]],[11,"borrow","","",151,[[]]],[11,"borrow_mut","","",151,[[]]],[11,"try_from","","",151,[[],["result",4]]],[11,"try_into","","",151,[[],["result",4]]],[11,"type_id","","",151,[[],["typeid",3]]],[11,"vzip","","",151,[[]]],[11,"init","","",151,[[]]],[11,"deref","","",151,[[]]],[11,"deref_mut","","",151,[[]]],[11,"drop","","",151,[[]]],[11,"into_any","","",151,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",151,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",151,[[],["any",8]]],[11,"as_any_mut","","",151,[[],["any",8]]],[11,"from","","",152,[[]]],[11,"into","","",152,[[]]],[11,"borrow","","",152,[[]]],[11,"borrow_mut","","",152,[[]]],[11,"try_from","","",152,[[],["result",4]]],[11,"try_into","","",152,[[],["result",4]]],[11,"type_id","","",152,[[],["typeid",3]]],[11,"vzip","","",152,[[]]],[11,"init","","",152,[[]]],[11,"deref","","",152,[[]]],[11,"deref_mut","","",152,[[]]],[11,"drop","","",152,[[]]],[11,"into_any","","",152,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",152,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",152,[[],["any",8]]],[11,"as_any_mut","","",152,[[],["any",8]]],[11,"from","smoldot::executor::runtime_host","",153,[[]]],[11,"into","","",153,[[]]],[11,"borrow","","",153,[[]]],[11,"borrow_mut","","",153,[[]]],[11,"try_from","","",153,[[],["result",4]]],[11,"try_into","","",153,[[],["result",4]]],[11,"type_id","","",153,[[],["typeid",3]]],[11,"vzip","","",153,[[]]],[11,"init","","",153,[[]]],[11,"deref","","",153,[[]]],[11,"deref_mut","","",153,[[]]],[11,"drop","","",153,[[]]],[11,"into_any","","",153,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",153,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",153,[[],["any",8]]],[11,"as_any_mut","","",153,[[],["any",8]]],[11,"from","","",154,[[]]],[11,"into","","",154,[[]]],[11,"borrow","","",154,[[]]],[11,"borrow_mut","","",154,[[]]],[11,"try_from","","",154,[[],["result",4]]],[11,"try_into","","",154,[[],["result",4]]],[11,"type_id","","",154,[[],["typeid",3]]],[11,"vzip","","",154,[[]]],[11,"init","","",154,[[]]],[11,"deref","","",154,[[]]],[11,"deref_mut","","",154,[[]]],[11,"drop","","",154,[[]]],[11,"into_any","","",154,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",154,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",154,[[],["any",8]]],[11,"as_any_mut","","",154,[[],["any",8]]],[11,"from","","",155,[[]]],[11,"into","","",155,[[]]],[11,"borrow","","",155,[[]]],[11,"borrow_mut","","",155,[[]]],[11,"try_from","","",155,[[],["result",4]]],[11,"try_into","","",155,[[],["result",4]]],[11,"type_id","","",155,[[],["typeid",3]]],[11,"vzip","","",155,[[]]],[11,"init","","",155,[[]]],[11,"deref","","",155,[[]]],[11,"deref_mut","","",155,[[]]],[11,"drop","","",155,[[]]],[11,"into_any","","",155,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",155,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",155,[[],["any",8]]],[11,"as_any_mut","","",155,[[],["any",8]]],[11,"from","","",156,[[]]],[11,"into","","",156,[[]]],[11,"to_owned","","",156,[[]]],[11,"clone_into","","",156,[[]]],[11,"to_string","","",156,[[],["string",3]]],[11,"borrow","","",156,[[]]],[11,"borrow_mut","","",156,[[]]],[11,"try_from","","",156,[[],["result",4]]],[11,"try_into","","",156,[[],["result",4]]],[11,"type_id","","",156,[[],["typeid",3]]],[11,"vzip","","",156,[[]]],[11,"init","","",156,[[]]],[11,"deref","","",156,[[]]],[11,"deref_mut","","",156,[[]]],[11,"drop","","",156,[[]]],[11,"into_any_arc","","",156,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",156,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",156,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",156,[[],["any",8]]],[11,"as_any_mut","","",156,[[],["any",8]]],[11,"from","","",158,[[]]],[11,"into","","",158,[[]]],[11,"borrow","","",158,[[]]],[11,"borrow_mut","","",158,[[]]],[11,"try_from","","",158,[[],["result",4]]],[11,"try_into","","",158,[[],["result",4]]],[11,"type_id","","",158,[[],["typeid",3]]],[11,"vzip","","",158,[[]]],[11,"init","","",158,[[]]],[11,"deref","","",158,[[]]],[11,"deref_mut","","",158,[[]]],[11,"drop","","",158,[[]]],[11,"into_any","","",158,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",158,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",158,[[],["any",8]]],[11,"as_any_mut","","",158,[[],["any",8]]],[11,"from","","",159,[[]]],[11,"into","","",159,[[]]],[11,"borrow","","",159,[[]]],[11,"borrow_mut","","",159,[[]]],[11,"try_from","","",159,[[],["result",4]]],[11,"try_into","","",159,[[],["result",4]]],[11,"type_id","","",159,[[],["typeid",3]]],[11,"vzip","","",159,[[]]],[11,"init","","",159,[[]]],[11,"deref","","",159,[[]]],[11,"deref_mut","","",159,[[]]],[11,"drop","","",159,[[]]],[11,"into_any","","",159,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",159,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",159,[[],["any",8]]],[11,"as_any_mut","","",159,[[],["any",8]]],[11,"from","","",160,[[]]],[11,"into","","",160,[[]]],[11,"borrow","","",160,[[]]],[11,"borrow_mut","","",160,[[]]],[11,"try_from","","",160,[[],["result",4]]],[11,"try_into","","",160,[[],["result",4]]],[11,"type_id","","",160,[[],["typeid",3]]],[11,"vzip","","",160,[[]]],[11,"init","","",160,[[]]],[11,"deref","","",160,[[]]],[11,"deref_mut","","",160,[[]]],[11,"drop","","",160,[[]]],[11,"into_any","","",160,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",160,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",160,[[],["any",8]]],[11,"as_any_mut","","",160,[[],["any",8]]],[11,"from","","",161,[[]]],[11,"into","","",161,[[]]],[11,"borrow","","",161,[[]]],[11,"borrow_mut","","",161,[[]]],[11,"try_from","","",161,[[],["result",4]]],[11,"try_into","","",161,[[],["result",4]]],[11,"type_id","","",161,[[],["typeid",3]]],[11,"vzip","","",161,[[]]],[11,"init","","",161,[[]]],[11,"deref","","",161,[[]]],[11,"deref_mut","","",161,[[]]],[11,"drop","","",161,[[]]],[11,"into_any","","",161,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",161,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",161,[[],["any",8]]],[11,"as_any_mut","","",161,[[],["any",8]]],[11,"from","smoldot::executor::vm","",162,[[]]],[11,"into","","",162,[[]]],[11,"borrow","","",162,[[]]],[11,"borrow_mut","","",162,[[]]],[11,"try_from","","",162,[[],["result",4]]],[11,"try_into","","",162,[[],["result",4]]],[11,"type_id","","",162,[[],["typeid",3]]],[11,"vzip","","",162,[[]]],[11,"init","","",162,[[]]],[11,"deref","","",162,[[]]],[11,"deref_mut","","",162,[[]]],[11,"drop","","",162,[[]]],[11,"into_any","","",162,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",162,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",162,[[],["any",8]]],[11,"as_any_mut","","",162,[[],["any",8]]],[11,"from","","",163,[[]]],[11,"into","","",163,[[]]],[11,"borrow","","",163,[[]]],[11,"borrow_mut","","",163,[[]]],[11,"try_from","","",163,[[],["result",4]]],[11,"try_into","","",163,[[],["result",4]]],[11,"type_id","","",163,[[],["typeid",3]]],[11,"vzip","","",163,[[]]],[11,"init","","",163,[[]]],[11,"deref","","",163,[[]]],[11,"deref_mut","","",163,[[]]],[11,"drop","","",163,[[]]],[11,"into_any","","",163,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",163,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",163,[[],["any",8]]],[11,"as_any_mut","","",163,[[],["any",8]]],[11,"from","","",164,[[]]],[11,"into","","",164,[[]]],[11,"to_owned","","",164,[[]]],[11,"clone_into","","",164,[[]]],[11,"borrow","","",164,[[]]],[11,"borrow_mut","","",164,[[]]],[11,"try_from","","",164,[[],["result",4]]],[11,"try_into","","",164,[[],["result",4]]],[11,"type_id","","",164,[[],["typeid",3]]],[11,"vzip","","",164,[[]]],[11,"init","","",164,[[]]],[11,"deref","","",164,[[]]],[11,"deref_mut","","",164,[[]]],[11,"drop","","",164,[[]]],[11,"into_any_arc","","",164,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",164,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",164,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",164,[[],["any",8]]],[11,"as_any_mut","","",164,[[],["any",8]]],[11,"equivalent","","",164,[[]]],[11,"from","","",165,[[]]],[11,"into","","",165,[[]]],[11,"to_owned","","",165,[[]]],[11,"clone_into","","",165,[[]]],[11,"borrow","","",165,[[]]],[11,"borrow_mut","","",165,[[]]],[11,"try_from","","",165,[[],["result",4]]],[11,"try_into","","",165,[[],["result",4]]],[11,"type_id","","",165,[[],["typeid",3]]],[11,"get_hash","","",165,[[]]],[11,"vzip","","",165,[[]]],[11,"init","","",165,[[]]],[11,"deref","","",165,[[]]],[11,"deref_mut","","",165,[[]]],[11,"drop","","",165,[[]]],[11,"into_any_arc","","",165,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",165,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",165,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",165,[[],["any",8]]],[11,"as_any_mut","","",165,[[],["any",8]]],[11,"get_hash","","",165,[[]]],[11,"equivalent","","",165,[[]]],[11,"from","","",166,[[]]],[11,"into","","",166,[[]]],[11,"to_owned","","",166,[[]]],[11,"clone_into","","",166,[[]]],[11,"borrow","","",166,[[]]],[11,"borrow_mut","","",166,[[]]],[11,"try_from","","",166,[[],["result",4]]],[11,"try_into","","",166,[[],["result",4]]],[11,"type_id","","",166,[[],["typeid",3]]],[11,"vzip","","",166,[[]]],[11,"init","","",166,[[]]],[11,"deref","","",166,[[]]],[11,"deref_mut","","",166,[[]]],[11,"drop","","",166,[[]]],[11,"into_any_arc","","",166,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",166,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",166,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",166,[[],["any",8]]],[11,"as_any_mut","","",166,[[],["any",8]]],[11,"from","","",167,[[]]],[11,"into","","",167,[[]]],[11,"to_owned","","",167,[[]]],[11,"clone_into","","",167,[[]]],[11,"borrow","","",167,[[]]],[11,"borrow_mut","","",167,[[]]],[11,"try_from","","",167,[[],["result",4]]],[11,"try_into","","",167,[[],["result",4]]],[11,"type_id","","",167,[[],["typeid",3]]],[11,"get_hash","","",167,[[]]],[11,"vzip","","",167,[[]]],[11,"init","","",167,[[]]],[11,"deref","","",167,[[]]],[11,"deref_mut","","",167,[[]]],[11,"drop","","",167,[[]]],[11,"into_any_arc","","",167,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",167,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",167,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",167,[[],["any",8]]],[11,"as_any_mut","","",167,[[],["any",8]]],[11,"get_hash","","",167,[[]]],[11,"equivalent","","",167,[[]]],[11,"from","","",487,[[]]],[11,"into","","",487,[[]]],[11,"to_string","","",487,[[],["string",3]]],[11,"borrow","","",487,[[]]],[11,"borrow_mut","","",487,[[]]],[11,"try_from","","",487,[[],["result",4]]],[11,"try_into","","",487,[[],["result",4]]],[11,"type_id","","",487,[[],["typeid",3]]],[11,"vzip","","",487,[[]]],[11,"init","","",487,[[]]],[11,"deref","","",487,[[]]],[11,"deref_mut","","",487,[[]]],[11,"drop","","",487,[[]]],[11,"into_any_arc","","",487,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",487,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",487,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",487,[[],["any",8]]],[11,"as_any_mut","","",487,[[],["any",8]]],[11,"from","","",168,[[]]],[11,"into","","",168,[[]]],[11,"borrow","","",168,[[]]],[11,"borrow_mut","","",168,[[]]],[11,"try_from","","",168,[[],["result",4]]],[11,"try_into","","",168,[[],["result",4]]],[11,"type_id","","",168,[[],["typeid",3]]],[11,"vzip","","",168,[[]]],[11,"init","","",168,[[]]],[11,"deref","","",168,[[]]],[11,"deref_mut","","",168,[[]]],[11,"drop","","",168,[[]]],[11,"into_any_arc","","",168,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",168,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",168,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",168,[[],["any",8]]],[11,"as_any_mut","","",168,[[],["any",8]]],[11,"from","","",488,[[]]],[11,"into","","",488,[[]]],[11,"to_owned","","",488,[[]]],[11,"clone_into","","",488,[[]]],[11,"to_string","","",488,[[],["string",3]]],[11,"borrow","","",488,[[]]],[11,"borrow_mut","","",488,[[]]],[11,"try_from","","",488,[[],["result",4]]],[11,"try_into","","",488,[[],["result",4]]],[11,"type_id","","",488,[[],["typeid",3]]],[11,"vzip","","",488,[[]]],[11,"init","","",488,[[]]],[11,"deref","","",488,[[]]],[11,"deref_mut","","",488,[[]]],[11,"drop","","",488,[[]]],[11,"into_any_arc","","",488,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",488,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",488,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",488,[[],["any",8]]],[11,"as_any_mut","","",488,[[],["any",8]]],[11,"from","","",171,[[]]],[11,"into","","",171,[[]]],[11,"to_string","","",171,[[],["string",3]]],[11,"borrow","","",171,[[]]],[11,"borrow_mut","","",171,[[]]],[11,"try_from","","",171,[[],["result",4]]],[11,"try_into","","",171,[[],["result",4]]],[11,"type_id","","",171,[[],["typeid",3]]],[11,"vzip","","",171,[[]]],[11,"init","","",171,[[]]],[11,"deref","","",171,[[]]],[11,"deref_mut","","",171,[[]]],[11,"drop","","",171,[[]]],[11,"into_any_arc","","",171,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",171,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",171,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",171,[[],["any",8]]],[11,"as_any_mut","","",171,[[],["any",8]]],[11,"from","","",172,[[]]],[11,"into","","",172,[[]]],[11,"to_owned","","",172,[[]]],[11,"clone_into","","",172,[[]]],[11,"to_string","","",172,[[],["string",3]]],[11,"borrow","","",172,[[]]],[11,"borrow_mut","","",172,[[]]],[11,"try_from","","",172,[[],["result",4]]],[11,"try_into","","",172,[[],["result",4]]],[11,"type_id","","",172,[[],["typeid",3]]],[11,"vzip","","",172,[[]]],[11,"init","","",172,[[]]],[11,"deref","","",172,[[]]],[11,"deref_mut","","",172,[[]]],[11,"drop","","",172,[[]]],[11,"into_any_arc","","",172,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",172,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",172,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",172,[[],["any",8]]],[11,"as_any_mut","","",172,[[],["any",8]]],[11,"from","","",489,[[]]],[11,"into","","",489,[[]]],[11,"to_string","","",489,[[],["string",3]]],[11,"borrow","","",489,[[]]],[11,"borrow_mut","","",489,[[]]],[11,"try_from","","",489,[[],["result",4]]],[11,"try_into","","",489,[[],["result",4]]],[11,"type_id","","",489,[[],["typeid",3]]],[11,"vzip","","",489,[[]]],[11,"init","","",489,[[]]],[11,"deref","","",489,[[]]],[11,"deref_mut","","",489,[[]]],[11,"drop","","",489,[[]]],[11,"into_any_arc","","",489,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",489,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",489,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",489,[[],["any",8]]],[11,"as_any_mut","","",489,[[],["any",8]]],[11,"from","","",490,[[]]],[11,"into","","",490,[[]]],[11,"to_string","","",490,[[],["string",3]]],[11,"borrow","","",490,[[]]],[11,"borrow_mut","","",490,[[]]],[11,"try_from","","",490,[[],["result",4]]],[11,"try_into","","",490,[[],["result",4]]],[11,"type_id","","",490,[[],["typeid",3]]],[11,"vzip","","",490,[[]]],[11,"init","","",490,[[]]],[11,"deref","","",490,[[]]],[11,"deref_mut","","",490,[[]]],[11,"drop","","",490,[[]]],[11,"into_any_arc","","",490,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",490,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",490,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",490,[[],["any",8]]],[11,"as_any_mut","","",490,[[],["any",8]]],[11,"from","","",173,[[]]],[11,"into","","",173,[[]]],[11,"to_string","","",173,[[],["string",3]]],[11,"borrow","","",173,[[]]],[11,"borrow_mut","","",173,[[]]],[11,"try_from","","",173,[[],["result",4]]],[11,"try_into","","",173,[[],["result",4]]],[11,"type_id","","",173,[[],["typeid",3]]],[11,"vzip","","",173,[[]]],[11,"init","","",173,[[]]],[11,"deref","","",173,[[]]],[11,"deref_mut","","",173,[[]]],[11,"drop","","",173,[[]]],[11,"into_any_arc","","",173,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",173,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",173,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",173,[[],["any",8]]],[11,"as_any_mut","","",173,[[],["any",8]]],[11,"from","","",175,[[]]],[11,"into","","",175,[[]]],[11,"to_string","","",175,[[],["string",3]]],[11,"borrow","","",175,[[]]],[11,"borrow_mut","","",175,[[]]],[11,"try_from","","",175,[[],["result",4]]],[11,"try_into","","",175,[[],["result",4]]],[11,"type_id","","",175,[[],["typeid",3]]],[11,"vzip","","",175,[[]]],[11,"init","","",175,[[]]],[11,"deref","","",175,[[]]],[11,"deref_mut","","",175,[[]]],[11,"drop","","",175,[[]]],[11,"into_any_arc","","",175,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",175,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",175,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",175,[[],["any",8]]],[11,"as_any_mut","","",175,[[],["any",8]]],[11,"from","smoldot::executor","",176,[[]]],[11,"into","","",176,[[]]],[11,"to_owned","","",176,[[]]],[11,"clone_into","","",176,[[]]],[11,"borrow","","",176,[[]]],[11,"borrow_mut","","",176,[[]]],[11,"try_from","","",176,[[],["result",4]]],[11,"try_into","","",176,[[],["result",4]]],[11,"type_id","","",176,[[],["typeid",3]]],[11,"as_byte_slice","","",176,[[]]],[11,"as_slice_of","","",176,[[],[["error",4],["result",4]]]],[11,"vzip","","",176,[[]]],[11,"init","","",176,[[]]],[11,"deref","","",176,[[]]],[11,"deref_mut","","",176,[[]]],[11,"drop","","",176,[[]]],[11,"into_any_arc","","",176,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",176,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",176,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",176,[[],["any",8]]],[11,"as_any_mut","","",176,[[],["any",8]]],[11,"as_bits","","",176,[[],["bitslice",3]]],[11,"encode_hex","","",176,[[]]],[11,"encode_hex_upper","","",176,[[]]],[11,"equivalent","","",176,[[]]],[11,"from","","",177,[[]]],[11,"into","","",177,[[]]],[11,"to_owned","","",177,[[]]],[11,"clone_into","","",177,[[]]],[11,"borrow","","",177,[[]]],[11,"borrow_mut","","",177,[[]]],[11,"try_from","","",177,[[],["result",4]]],[11,"try_into","","",177,[[],["result",4]]],[11,"type_id","","",177,[[],["typeid",3]]],[11,"vzip","","",177,[[]]],[11,"init","","",177,[[]]],[11,"deref","","",177,[[]]],[11,"deref_mut","","",177,[[]]],[11,"drop","","",177,[[]]],[11,"into_any_arc","","",177,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",177,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",177,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",177,[[],["any",8]]],[11,"as_any_mut","","",177,[[],["any",8]]],[11,"equivalent","","",177,[[]]],[11,"from","smoldot::finality::grandpa::chain_config","",178,[[]]],[11,"into","","",178,[[]]],[11,"to_owned","","",178,[[]]],[11,"clone_into","","",178,[[]]],[11,"borrow","","",178,[[]]],[11,"borrow_mut","","",178,[[]]],[11,"try_from","","",178,[[],["result",4]]],[11,"try_into","","",178,[[],["result",4]]],[11,"type_id","","",178,[[],["typeid",3]]],[11,"vzip","","",178,[[]]],[11,"init","","",178,[[]]],[11,"deref","","",178,[[]]],[11,"deref_mut","","",178,[[]]],[11,"drop","","",178,[[]]],[11,"into_any_arc","","",178,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",178,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",178,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",178,[[],["any",8]]],[11,"as_any_mut","","",178,[[],["any",8]]],[11,"from","","",179,[[]]],[11,"into","","",179,[[]]],[11,"to_string","","",179,[[],["string",3]]],[11,"borrow","","",179,[[]]],[11,"borrow_mut","","",179,[[]]],[11,"try_from","","",179,[[],["result",4]]],[11,"try_into","","",179,[[],["result",4]]],[11,"type_id","","",179,[[],["typeid",3]]],[11,"vzip","","",179,[[]]],[11,"init","","",179,[[]]],[11,"deref","","",179,[[]]],[11,"deref_mut","","",179,[[]]],[11,"drop","","",179,[[]]],[11,"into_any_arc","","",179,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",179,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",179,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",179,[[],["any",8]]],[11,"as_any_mut","","",179,[[],["any",8]]],[11,"from","","",180,[[]]],[11,"into","","",180,[[]]],[11,"to_string","","",180,[[],["string",3]]],[11,"borrow","","",180,[[]]],[11,"borrow_mut","","",180,[[]]],[11,"try_from","","",180,[[],["result",4]]],[11,"try_into","","",180,[[],["result",4]]],[11,"type_id","","",180,[[],["typeid",3]]],[11,"vzip","","",180,[[]]],[11,"init","","",180,[[]]],[11,"deref","","",180,[[]]],[11,"deref_mut","","",180,[[]]],[11,"drop","","",180,[[]]],[11,"into_any_arc","","",180,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",180,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",180,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",180,[[],["any",8]]],[11,"as_any_mut","","",180,[[],["any",8]]],[11,"from","smoldot::finality::grandpa::warp_sync","",181,[[]]],[11,"into","","",181,[[]]],[11,"borrow","","",181,[[]]],[11,"borrow_mut","","",181,[[]]],[11,"try_from","","",181,[[],["result",4]]],[11,"try_into","","",181,[[],["result",4]]],[11,"type_id","","",181,[[],["typeid",3]]],[11,"vzip","","",181,[[]]],[11,"init","","",181,[[]]],[11,"deref","","",181,[[]]],[11,"deref_mut","","",181,[[]]],[11,"drop","","",181,[[]]],[11,"into_any_arc","","",181,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",181,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",181,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",181,[[],["any",8]]],[11,"as_any_mut","","",181,[[],["any",8]]],[11,"from","","",182,[[]]],[11,"into","","",182,[[]]],[11,"borrow","","",182,[[]]],[11,"borrow_mut","","",182,[[]]],[11,"try_from","","",182,[[],["result",4]]],[11,"try_into","","",182,[[],["result",4]]],[11,"type_id","","",182,[[],["typeid",3]]],[11,"vzip","","",182,[[]]],[11,"init","","",182,[[]]],[11,"deref","","",182,[[]]],[11,"deref_mut","","",182,[[]]],[11,"drop","","",182,[[]]],[11,"into_any_arc","","",182,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",182,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",182,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",182,[[],["any",8]]],[11,"as_any_mut","","",182,[[],["any",8]]],[11,"from","smoldot::finality::justification::decode","",183,[[]]],[11,"into","","",183,[[]]],[11,"borrow","","",183,[[]]],[11,"borrow_mut","","",183,[[]]],[11,"try_from","","",183,[[],["result",4]]],[11,"try_into","","",183,[[],["result",4]]],[11,"type_id","","",183,[[],["typeid",3]]],[11,"vzip","","",183,[[]]],[11,"init","","",183,[[]]],[11,"deref","","",183,[[]]],[11,"deref_mut","","",183,[[]]],[11,"drop","","",183,[[]]],[11,"into_any_arc","","",183,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",183,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",183,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",183,[[],["any",8]]],[11,"as_any_mut","","",183,[[],["any",8]]],[11,"from","","",184,[[]]],[11,"into","","",184,[[]]],[11,"borrow","","",184,[[]]],[11,"borrow_mut","","",184,[[]]],[11,"try_from","","",184,[[],["result",4]]],[11,"try_into","","",184,[[],["result",4]]],[11,"type_id","","",184,[[],["typeid",3]]],[11,"vzip","","",184,[[]]],[11,"init","","",184,[[]]],[11,"deref","","",184,[[]]],[11,"deref_mut","","",184,[[]]],[11,"drop","","",184,[[]]],[11,"into_any_arc","","",184,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",184,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",184,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",184,[[],["any",8]]],[11,"as_any_mut","","",184,[[],["any",8]]],[11,"from","","",185,[[]]],[11,"into","","",185,[[]]],[11,"to_owned","","",185,[[]]],[11,"clone_into","","",185,[[]]],[11,"borrow","","",185,[[]]],[11,"borrow_mut","","",185,[[]]],[11,"try_from","","",185,[[],["result",4]]],[11,"try_into","","",185,[[],["result",4]]],[11,"type_id","","",185,[[],["typeid",3]]],[11,"vzip","","",185,[[]]],[11,"init","","",185,[[]]],[11,"deref","","",185,[[]]],[11,"deref_mut","","",185,[[]]],[11,"drop","","",185,[[]]],[11,"into_any_arc","","",185,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",185,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",185,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",185,[[],["any",8]]],[11,"as_any_mut","","",185,[[],["any",8]]],[11,"from","","",491,[[]]],[11,"into","","",491,[[]]],[11,"into_iter","","",491,[[]]],[11,"borrow","","",491,[[]]],[11,"borrow_mut","","",491,[[]]],[11,"try_from","","",491,[[],["result",4]]],[11,"try_into","","",491,[[],["result",4]]],[11,"type_id","","",491,[[],["typeid",3]]],[11,"vzip","","",491,[[]]],[11,"init","","",491,[[]]],[11,"deref","","",491,[[]]],[11,"deref_mut","","",491,[[]]],[11,"drop","","",491,[[]]],[11,"into_any_arc","","",491,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",491,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",491,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",491,[[],["any",8]]],[11,"as_any_mut","","",491,[[],["any",8]]],[11,"from","","",186,[[]]],[11,"into","","",186,[[]]],[11,"to_owned","","",186,[[]]],[11,"clone_into","","",186,[[]]],[11,"borrow","","",186,[[]]],[11,"borrow_mut","","",186,[[]]],[11,"try_from","","",186,[[],["result",4]]],[11,"try_into","","",186,[[],["result",4]]],[11,"type_id","","",186,[[],["typeid",3]]],[11,"vzip","","",186,[[]]],[11,"init","","",186,[[]]],[11,"deref","","",186,[[]]],[11,"deref_mut","","",186,[[]]],[11,"drop","","",186,[[]]],[11,"into_any_arc","","",186,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",186,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",186,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",186,[[],["any",8]]],[11,"as_any_mut","","",186,[[],["any",8]]],[11,"from","","",187,[[]]],[11,"into","","",187,[[]]],[11,"borrow","","",187,[[]]],[11,"borrow_mut","","",187,[[]]],[11,"try_from","","",187,[[],["result",4]]],[11,"try_into","","",187,[[],["result",4]]],[11,"type_id","","",187,[[],["typeid",3]]],[11,"vzip","","",187,[[]]],[11,"init","","",187,[[]]],[11,"deref","","",187,[[]]],[11,"deref_mut","","",187,[[]]],[11,"drop","","",187,[[]]],[11,"into_any_arc","","",187,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",187,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",187,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",187,[[],["any",8]]],[11,"as_any_mut","","",187,[[],["any",8]]],[11,"from","","",492,[[]]],[11,"into","","",492,[[]]],[11,"into_iter","","",492,[[]]],[11,"to_owned","","",492,[[]]],[11,"clone_into","","",492,[[]]],[11,"borrow","","",492,[[]]],[11,"borrow_mut","","",492,[[]]],[11,"try_from","","",492,[[],["result",4]]],[11,"try_into","","",492,[[],["result",4]]],[11,"type_id","","",492,[[],["typeid",3]]],[11,"vzip","","",492,[[]]],[11,"init","","",492,[[]]],[11,"deref","","",492,[[]]],[11,"deref_mut","","",492,[[]]],[11,"drop","","",492,[[]]],[11,"into_any_arc","","",492,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",492,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",492,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",492,[[],["any",8]]],[11,"as_any_mut","","",492,[[],["any",8]]],[11,"from","","",493,[[]]],[11,"into","","",493,[[]]],[11,"to_string","","",493,[[],["string",3]]],[11,"borrow","","",493,[[]]],[11,"borrow_mut","","",493,[[]]],[11,"try_from","","",493,[[],["result",4]]],[11,"try_into","","",493,[[],["result",4]]],[11,"type_id","","",493,[[],["typeid",3]]],[11,"vzip","","",493,[[]]],[11,"init","","",493,[[]]],[11,"deref","","",493,[[]]],[11,"deref_mut","","",493,[[]]],[11,"drop","","",493,[[]]],[11,"into_any_arc","","",493,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",493,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",493,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",493,[[],["any",8]]],[11,"as_any_mut","","",493,[[],["any",8]]],[11,"from","smoldot::finality::justification::verify","",188,[[]]],[11,"into","","",188,[[]]],[11,"borrow","","",188,[[]]],[11,"borrow_mut","","",188,[[]]],[11,"try_from","","",188,[[],["result",4]]],[11,"try_into","","",188,[[],["result",4]]],[11,"type_id","","",188,[[],["typeid",3]]],[11,"vzip","","",188,[[]]],[11,"init","","",188,[[]]],[11,"deref","","",188,[[]]],[11,"deref_mut","","",188,[[]]],[11,"drop","","",188,[[]]],[11,"into_any_arc","","",188,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",188,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",188,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",188,[[],["any",8]]],[11,"as_any_mut","","",188,[[],["any",8]]],[11,"from","","",189,[[]]],[11,"into","","",189,[[]]],[11,"to_string","","",189,[[],["string",3]]],[11,"borrow","","",189,[[]]],[11,"borrow_mut","","",189,[[]]],[11,"try_from","","",189,[[],["result",4]]],[11,"try_into","","",189,[[],["result",4]]],[11,"type_id","","",189,[[],["typeid",3]]],[11,"vzip","","",189,[[]]],[11,"init","","",189,[[]]],[11,"deref","","",189,[[]]],[11,"deref_mut","","",189,[[]]],[11,"drop","","",189,[[]]],[11,"into_any_arc","","",189,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",189,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",189,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",189,[[],["any",8]]],[11,"as_any_mut","","",189,[[],["any",8]]],[11,"from","smoldot::header","",190,[[]]],[11,"into","","",190,[[]]],[11,"to_owned","","",190,[[]]],[11,"clone_into","","",190,[[]]],[11,"borrow","","",190,[[]]],[11,"borrow_mut","","",190,[[]]],[11,"try_from","","",190,[[],["result",4]]],[11,"try_into","","",190,[[],["result",4]]],[11,"type_id","","",190,[[],["typeid",3]]],[11,"vzip","","",190,[[]]],[11,"init","","",190,[[]]],[11,"deref","","",190,[[]]],[11,"deref_mut","","",190,[[]]],[11,"drop","","",190,[[]]],[11,"into_any_arc","","",190,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",190,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",190,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",190,[[],["any",8]]],[11,"as_any_mut","","",190,[[],["any",8]]],[11,"equivalent","","",190,[[]]],[11,"from","","",191,[[]]],[11,"into","","",191,[[]]],[11,"to_owned","","",191,[[]]],[11,"clone_into","","",191,[[]]],[11,"borrow","","",191,[[]]],[11,"borrow_mut","","",191,[[]]],[11,"try_from","","",191,[[],["result",4]]],[11,"try_into","","",191,[[],["result",4]]],[11,"type_id","","",191,[[],["typeid",3]]],[11,"vzip","","",191,[[]]],[11,"init","","",191,[[]]],[11,"deref","","",191,[[]]],[11,"deref_mut","","",191,[[]]],[11,"drop","","",191,[[]]],[11,"into_any_arc","","",191,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",191,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",191,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",191,[[],["any",8]]],[11,"as_any_mut","","",191,[[],["any",8]]],[11,"equivalent","","",191,[[]]],[11,"from","","",494,[[]]],[11,"into","","",494,[[]]],[11,"into_iter","","",494,[[]]],[11,"to_owned","","",494,[[]]],[11,"clone_into","","",494,[[]]],[11,"borrow","","",494,[[]]],[11,"borrow_mut","","",494,[[]]],[11,"try_from","","",494,[[],["result",4]]],[11,"try_into","","",494,[[],["result",4]]],[11,"type_id","","",494,[[],["typeid",3]]],[11,"vzip","","",494,[[]]],[11,"init","","",494,[[]]],[11,"deref","","",494,[[]]],[11,"deref_mut","","",494,[[]]],[11,"drop","","",494,[[]]],[11,"into_any_arc","","",494,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",494,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",494,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",494,[[],["any",8]]],[11,"as_any_mut","","",494,[[],["any",8]]],[11,"equivalent","","",494,[[]]],[11,"from","","",192,[[]]],[11,"into","","",192,[[]]],[11,"to_owned","","",192,[[]]],[11,"clone_into","","",192,[[]]],[11,"borrow","","",192,[[]]],[11,"borrow_mut","","",192,[[]]],[11,"try_from","","",192,[[],["result",4]]],[11,"try_into","","",192,[[],["result",4]]],[11,"type_id","","",192,[[],["typeid",3]]],[11,"vzip","","",192,[[]]],[11,"init","","",192,[[]]],[11,"deref","","",192,[[]]],[11,"deref_mut","","",192,[[]]],[11,"drop","","",192,[[]]],[11,"into_any_arc","","",192,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",192,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",192,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",192,[[],["any",8]]],[11,"as_any_mut","","",192,[[],["any",8]]],[11,"equivalent","","",192,[[]]],[11,"from","","",193,[[]]],[11,"into","","",193,[[]]],[11,"to_owned","","",193,[[]]],[11,"clone_into","","",193,[[]]],[11,"borrow","","",193,[[]]],[11,"borrow_mut","","",193,[[]]],[11,"try_from","","",193,[[],["result",4]]],[11,"try_into","","",193,[[],["result",4]]],[11,"type_id","","",193,[[],["typeid",3]]],[11,"vzip","","",193,[[]]],[11,"init","","",193,[[]]],[11,"deref","","",193,[[]]],[11,"deref_mut","","",193,[[]]],[11,"drop","","",193,[[]]],[11,"into_any_arc","","",193,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",193,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",193,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",193,[[],["any",8]]],[11,"as_any_mut","","",193,[[],["any",8]]],[11,"equivalent","","",193,[[]]],[11,"from","","",194,[[]]],[11,"into","","",194,[[]]],[11,"to_owned","","",194,[[]]],[11,"clone_into","","",194,[[]]],[11,"borrow","","",194,[[]]],[11,"borrow_mut","","",194,[[]]],[11,"try_from","","",194,[[],["result",4]]],[11,"try_into","","",194,[[],["result",4]]],[11,"type_id","","",194,[[],["typeid",3]]],[11,"vzip","","",194,[[]]],[11,"init","","",194,[[]]],[11,"deref","","",194,[[]]],[11,"deref_mut","","",194,[[]]],[11,"drop","","",194,[[]]],[11,"into_any_arc","","",194,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",194,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",194,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",194,[[],["any",8]]],[11,"as_any_mut","","",194,[[],["any",8]]],[11,"equivalent","","",194,[[]]],[11,"from","","",195,[[]]],[11,"into","","",195,[[]]],[11,"to_owned","","",195,[[]]],[11,"clone_into","","",195,[[]]],[11,"borrow","","",195,[[]]],[11,"borrow_mut","","",195,[[]]],[11,"try_from","","",195,[[],["result",4]]],[11,"try_into","","",195,[[],["result",4]]],[11,"type_id","","",195,[[],["typeid",3]]],[11,"vzip","","",195,[[]]],[11,"init","","",195,[[]]],[11,"deref","","",195,[[]]],[11,"deref_mut","","",195,[[]]],[11,"drop","","",195,[[]]],[11,"into_any_arc","","",195,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",195,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",195,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",195,[[],["any",8]]],[11,"as_any_mut","","",195,[[],["any",8]]],[11,"equivalent","","",195,[[]]],[11,"from","","",196,[[]]],[11,"into","","",196,[[]]],[11,"to_owned","","",196,[[]]],[11,"clone_into","","",196,[[]]],[11,"borrow","","",196,[[]]],[11,"borrow_mut","","",196,[[]]],[11,"try_from","","",196,[[],["result",4]]],[11,"try_into","","",196,[[],["result",4]]],[11,"type_id","","",196,[[],["typeid",3]]],[11,"vzip","","",196,[[]]],[11,"init","","",196,[[]]],[11,"deref","","",196,[[]]],[11,"deref_mut","","",196,[[]]],[11,"drop","","",196,[[]]],[11,"into_any_arc","","",196,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",196,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",196,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",196,[[],["any",8]]],[11,"as_any_mut","","",196,[[],["any",8]]],[11,"equivalent","","",196,[[]]],[11,"from","","",197,[[]]],[11,"into","","",197,[[]]],[11,"to_owned","","",197,[[]]],[11,"clone_into","","",197,[[]]],[11,"borrow","","",197,[[]]],[11,"borrow_mut","","",197,[[]]],[11,"try_from","","",197,[[],["result",4]]],[11,"try_into","","",197,[[],["result",4]]],[11,"type_id","","",197,[[],["typeid",3]]],[11,"vzip","","",197,[[]]],[11,"init","","",197,[[]]],[11,"deref","","",197,[[]]],[11,"deref_mut","","",197,[[]]],[11,"drop","","",197,[[]]],[11,"into_any_arc","","",197,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",197,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",197,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",197,[[],["any",8]]],[11,"as_any_mut","","",197,[[],["any",8]]],[11,"equivalent","","",197,[[]]],[11,"from","","",198,[[]]],[11,"into","","",198,[[]]],[11,"to_owned","","",198,[[]]],[11,"clone_into","","",198,[[]]],[11,"borrow","","",198,[[]]],[11,"borrow_mut","","",198,[[]]],[11,"try_from","","",198,[[],["result",4]]],[11,"try_into","","",198,[[],["result",4]]],[11,"type_id","","",198,[[],["typeid",3]]],[11,"vzip","","",198,[[]]],[11,"init","","",198,[[]]],[11,"deref","","",198,[[]]],[11,"deref_mut","","",198,[[]]],[11,"drop","","",198,[[]]],[11,"into_any_arc","","",198,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",198,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",198,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",198,[[],["any",8]]],[11,"as_any_mut","","",198,[[],["any",8]]],[11,"equivalent","","",198,[[]]],[11,"from","","",495,[[]]],[11,"into","","",495,[[]]],[11,"into_iter","","",495,[[]]],[11,"to_owned","","",495,[[]]],[11,"clone_into","","",495,[[]]],[11,"borrow","","",495,[[]]],[11,"borrow_mut","","",495,[[]]],[11,"try_from","","",495,[[],["result",4]]],[11,"try_into","","",495,[[],["result",4]]],[11,"type_id","","",495,[[],["typeid",3]]],[11,"vzip","","",495,[[]]],[11,"init","","",495,[[]]],[11,"deref","","",495,[[]]],[11,"deref_mut","","",495,[[]]],[11,"drop","","",495,[[]]],[11,"into_any_arc","","",495,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",495,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",495,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",495,[[],["any",8]]],[11,"as_any_mut","","",495,[[],["any",8]]],[11,"equivalent","","",495,[[]]],[11,"from","","",199,[[]]],[11,"into","","",199,[[]]],[11,"to_owned","","",199,[[]]],[11,"clone_into","","",199,[[]]],[11,"borrow","","",199,[[]]],[11,"borrow_mut","","",199,[[]]],[11,"try_from","","",199,[[],["result",4]]],[11,"try_into","","",199,[[],["result",4]]],[11,"type_id","","",199,[[],["typeid",3]]],[11,"vzip","","",199,[[]]],[11,"init","","",199,[[]]],[11,"deref","","",199,[[]]],[11,"deref_mut","","",199,[[]]],[11,"drop","","",199,[[]]],[11,"into_any_arc","","",199,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",199,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",199,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",199,[[],["any",8]]],[11,"as_any_mut","","",199,[[],["any",8]]],[11,"equivalent","","",199,[[]]],[11,"from","","",200,[[]]],[11,"into","","",200,[[]]],[11,"to_owned","","",200,[[]]],[11,"clone_into","","",200,[[]]],[11,"borrow","","",200,[[]]],[11,"borrow_mut","","",200,[[]]],[11,"try_from","","",200,[[],["result",4]]],[11,"try_into","","",200,[[],["result",4]]],[11,"type_id","","",200,[[],["typeid",3]]],[11,"vzip","","",200,[[]]],[11,"init","","",200,[[]]],[11,"deref","","",200,[[]]],[11,"deref_mut","","",200,[[]]],[11,"drop","","",200,[[]]],[11,"into_any_arc","","",200,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",200,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",200,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",200,[[],["any",8]]],[11,"as_any_mut","","",200,[[],["any",8]]],[11,"equivalent","","",200,[[]]],[11,"from","","",201,[[]]],[11,"into","","",201,[[]]],[11,"to_owned","","",201,[[]]],[11,"clone_into","","",201,[[]]],[11,"borrow","","",201,[[]]],[11,"borrow_mut","","",201,[[]]],[11,"try_from","","",201,[[],["result",4]]],[11,"try_into","","",201,[[],["result",4]]],[11,"type_id","","",201,[[],["typeid",3]]],[11,"to_keyed_vec","","",201,[[],[["vec",3],["global",3]]]],[11,"decode_all","","",201,[[],[["result",4],["error",3]]]],[11,"decode_all_with_depth_limit","","",201,[[],[["result",4],["error",3]]]],[11,"decode_with_depth_limit","","",201,[[],[["result",4],["error",3]]]],[11,"vzip","","",201,[[]]],[11,"init","","",201,[[]]],[11,"deref","","",201,[[]]],[11,"deref_mut","","",201,[[]]],[11,"drop","","",201,[[]]],[11,"into_any_arc","","",201,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",201,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",201,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",201,[[],["any",8]]],[11,"as_any_mut","","",201,[[],["any",8]]],[11,"equivalent","","",201,[[]]],[11,"from","","",202,[[]]],[11,"into","","",202,[[]]],[11,"to_owned","","",202,[[]]],[11,"clone_into","","",202,[[]]],[11,"borrow","","",202,[[]]],[11,"borrow_mut","","",202,[[]]],[11,"try_from","","",202,[[],["result",4]]],[11,"try_into","","",202,[[],["result",4]]],[11,"type_id","","",202,[[],["typeid",3]]],[11,"to_keyed_vec","","",202,[[],[["vec",3],["global",3]]]],[11,"decode_all","","",202,[[],[["result",4],["error",3]]]],[11,"decode_all_with_depth_limit","","",202,[[],[["result",4],["error",3]]]],[11,"decode_with_depth_limit","","",202,[[],[["result",4],["error",3]]]],[11,"vzip","","",202,[[]]],[11,"init","","",202,[[]]],[11,"deref","","",202,[[]]],[11,"deref_mut","","",202,[[]]],[11,"drop","","",202,[[]]],[11,"into_any_arc","","",202,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",202,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",202,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",202,[[],["any",8]]],[11,"as_any_mut","","",202,[[],["any",8]]],[11,"equivalent","","",202,[[]]],[11,"from","","",203,[[]]],[11,"into","","",203,[[]]],[11,"to_owned","","",203,[[]]],[11,"clone_into","","",203,[[]]],[11,"borrow","","",203,[[]]],[11,"borrow_mut","","",203,[[]]],[11,"try_from","","",203,[[],["result",4]]],[11,"try_into","","",203,[[],["result",4]]],[11,"type_id","","",203,[[],["typeid",3]]],[11,"vzip","","",203,[[]]],[11,"init","","",203,[[]]],[11,"deref","","",203,[[]]],[11,"deref_mut","","",203,[[]]],[11,"drop","","",203,[[]]],[11,"into_any_arc","","",203,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",203,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",203,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",203,[[],["any",8]]],[11,"as_any_mut","","",203,[[],["any",8]]],[11,"equivalent","","",203,[[]]],[11,"from","","",204,[[]]],[11,"into","","",204,[[]]],[11,"to_owned","","",204,[[]]],[11,"clone_into","","",204,[[]]],[11,"borrow","","",204,[[]]],[11,"borrow_mut","","",204,[[]]],[11,"try_from","","",204,[[],["result",4]]],[11,"try_into","","",204,[[],["result",4]]],[11,"type_id","","",204,[[],["typeid",3]]],[11,"vzip","","",204,[[]]],[11,"init","","",204,[[]]],[11,"deref","","",204,[[]]],[11,"deref_mut","","",204,[[]]],[11,"drop","","",204,[[]]],[11,"into_any_arc","","",204,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",204,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",204,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",204,[[],["any",8]]],[11,"as_any_mut","","",204,[[],["any",8]]],[11,"from","","",205,[[]]],[11,"into","","",205,[[]]],[11,"to_owned","","",205,[[]]],[11,"clone_into","","",205,[[]]],[11,"borrow","","",205,[[]]],[11,"borrow_mut","","",205,[[]]],[11,"try_from","","",205,[[],["result",4]]],[11,"try_into","","",205,[[],["result",4]]],[11,"type_id","","",205,[[],["typeid",3]]],[11,"vzip","","",205,[[]]],[11,"init","","",205,[[]]],[11,"deref","","",205,[[]]],[11,"deref_mut","","",205,[[]]],[11,"drop","","",205,[[]]],[11,"into_any_arc","","",205,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",205,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",205,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",205,[[],["any",8]]],[11,"as_any_mut","","",205,[[],["any",8]]],[11,"equivalent","","",205,[[]]],[11,"from","","",206,[[]]],[11,"into","","",206,[[]]],[11,"to_owned","","",206,[[]]],[11,"clone_into","","",206,[[]]],[11,"borrow","","",206,[[]]],[11,"borrow_mut","","",206,[[]]],[11,"try_from","","",206,[[],["result",4]]],[11,"try_into","","",206,[[],["result",4]]],[11,"type_id","","",206,[[],["typeid",3]]],[11,"vzip","","",206,[[]]],[11,"init","","",206,[[]]],[11,"deref","","",206,[[]]],[11,"deref_mut","","",206,[[]]],[11,"drop","","",206,[[]]],[11,"into_any_arc","","",206,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",206,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",206,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",206,[[],["any",8]]],[11,"as_any_mut","","",206,[[],["any",8]]],[11,"from","","",207,[[]]],[11,"into","","",207,[[]]],[11,"to_owned","","",207,[[]]],[11,"clone_into","","",207,[[]]],[11,"borrow","","",207,[[]]],[11,"borrow_mut","","",207,[[]]],[11,"try_from","","",207,[[],["result",4]]],[11,"try_into","","",207,[[],["result",4]]],[11,"type_id","","",207,[[],["typeid",3]]],[11,"vzip","","",207,[[]]],[11,"init","","",207,[[]]],[11,"deref","","",207,[[]]],[11,"deref_mut","","",207,[[]]],[11,"drop","","",207,[[]]],[11,"into_any_arc","","",207,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",207,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",207,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",207,[[],["any",8]]],[11,"as_any_mut","","",207,[[],["any",8]]],[11,"equivalent","","",207,[[]]],[11,"from","","",208,[[]]],[11,"into","","",208,[[]]],[11,"to_owned","","",208,[[]]],[11,"clone_into","","",208,[[]]],[11,"borrow","","",208,[[]]],[11,"borrow_mut","","",208,[[]]],[11,"try_from","","",208,[[],["result",4]]],[11,"try_into","","",208,[[],["result",4]]],[11,"type_id","","",208,[[],["typeid",3]]],[11,"vzip","","",208,[[]]],[11,"init","","",208,[[]]],[11,"deref","","",208,[[]]],[11,"deref_mut","","",208,[[]]],[11,"drop","","",208,[[]]],[11,"into_any_arc","","",208,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",208,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",208,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",208,[[],["any",8]]],[11,"as_any_mut","","",208,[[],["any",8]]],[11,"equivalent","","",208,[[]]],[11,"from","","",209,[[]]],[11,"into","","",209,[[]]],[11,"to_owned","","",209,[[]]],[11,"clone_into","","",209,[[]]],[11,"borrow","","",209,[[]]],[11,"borrow_mut","","",209,[[]]],[11,"try_from","","",209,[[],["result",4]]],[11,"try_into","","",209,[[],["result",4]]],[11,"type_id","","",209,[[],["typeid",3]]],[11,"vzip","","",209,[[]]],[11,"init","","",209,[[]]],[11,"deref","","",209,[[]]],[11,"deref_mut","","",209,[[]]],[11,"drop","","",209,[[]]],[11,"into_any_arc","","",209,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",209,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",209,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",209,[[],["any",8]]],[11,"as_any_mut","","",209,[[],["any",8]]],[11,"from","","",210,[[]]],[11,"into","","",210,[[]]],[11,"to_owned","","",210,[[]]],[11,"clone_into","","",210,[[]]],[11,"borrow","","",210,[[]]],[11,"borrow_mut","","",210,[[]]],[11,"try_from","","",210,[[],["result",4]]],[11,"try_into","","",210,[[],["result",4]]],[11,"type_id","","",210,[[],["typeid",3]]],[11,"vzip","","",210,[[]]],[11,"init","","",210,[[]]],[11,"deref","","",210,[[]]],[11,"deref_mut","","",210,[[]]],[11,"drop","","",210,[[]]],[11,"into_any_arc","","",210,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",210,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",210,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",210,[[],["any",8]]],[11,"as_any_mut","","",210,[[],["any",8]]],[11,"equivalent","","",210,[[]]],[11,"from","","",212,[[]]],[11,"into","","",212,[[]]],[11,"to_owned","","",212,[[]]],[11,"clone_into","","",212,[[]]],[11,"borrow","","",212,[[]]],[11,"borrow_mut","","",212,[[]]],[11,"try_from","","",212,[[],["result",4]]],[11,"try_into","","",212,[[],["result",4]]],[11,"type_id","","",212,[[],["typeid",3]]],[11,"vzip","","",212,[[]]],[11,"init","","",212,[[]]],[11,"deref","","",212,[[]]],[11,"deref_mut","","",212,[[]]],[11,"drop","","",212,[[]]],[11,"into_any_arc","","",212,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",212,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",212,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",212,[[],["any",8]]],[11,"as_any_mut","","",212,[[],["any",8]]],[11,"equivalent","","",212,[[]]],[11,"from","","",214,[[]]],[11,"into","","",214,[[]]],[11,"to_owned","","",214,[[]]],[11,"clone_into","","",214,[[]]],[11,"borrow","","",214,[[]]],[11,"borrow_mut","","",214,[[]]],[11,"try_from","","",214,[[],["result",4]]],[11,"try_into","","",214,[[],["result",4]]],[11,"type_id","","",214,[[],["typeid",3]]],[11,"vzip","","",214,[[]]],[11,"init","","",214,[[]]],[11,"deref","","",214,[[]]],[11,"deref_mut","","",214,[[]]],[11,"drop","","",214,[[]]],[11,"into_any_arc","","",214,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",214,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",214,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",214,[[],["any",8]]],[11,"as_any_mut","","",214,[[],["any",8]]],[11,"equivalent","","",214,[[]]],[11,"from","","",215,[[]]],[11,"into","","",215,[[]]],[11,"to_owned","","",215,[[]]],[11,"clone_into","","",215,[[]]],[11,"borrow","","",215,[[]]],[11,"borrow_mut","","",215,[[]]],[11,"try_from","","",215,[[],["result",4]]],[11,"try_into","","",215,[[],["result",4]]],[11,"type_id","","",215,[[],["typeid",3]]],[11,"vzip","","",215,[[]]],[11,"init","","",215,[[]]],[11,"deref","","",215,[[]]],[11,"deref_mut","","",215,[[]]],[11,"drop","","",215,[[]]],[11,"into_any_arc","","",215,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",215,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",215,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",215,[[],["any",8]]],[11,"as_any_mut","","",215,[[],["any",8]]],[11,"equivalent","","",215,[[]]],[11,"from","","",496,[[]]],[11,"into","","",496,[[]]],[11,"into_iter","","",496,[[]]],[11,"to_owned","","",496,[[]]],[11,"clone_into","","",496,[[]]],[11,"borrow","","",496,[[]]],[11,"borrow_mut","","",496,[[]]],[11,"try_from","","",496,[[],["result",4]]],[11,"try_into","","",496,[[],["result",4]]],[11,"type_id","","",496,[[],["typeid",3]]],[11,"vzip","","",496,[[]]],[11,"init","","",496,[[]]],[11,"deref","","",496,[[]]],[11,"deref_mut","","",496,[[]]],[11,"drop","","",496,[[]]],[11,"into_any_arc","","",496,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",496,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",496,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",496,[[],["any",8]]],[11,"as_any_mut","","",496,[[],["any",8]]],[11,"equivalent","","",496,[[]]],[11,"from","","",216,[[]]],[11,"into","","",216,[[]]],[11,"to_owned","","",216,[[]]],[11,"clone_into","","",216,[[]]],[11,"borrow","","",216,[[]]],[11,"borrow_mut","","",216,[[]]],[11,"try_from","","",216,[[],["result",4]]],[11,"try_into","","",216,[[],["result",4]]],[11,"type_id","","",216,[[],["typeid",3]]],[11,"vzip","","",216,[[]]],[11,"init","","",216,[[]]],[11,"deref","","",216,[[]]],[11,"deref_mut","","",216,[[]]],[11,"drop","","",216,[[]]],[11,"into_any_arc","","",216,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",216,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",216,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",216,[[],["any",8]]],[11,"as_any_mut","","",216,[[],["any",8]]],[11,"equivalent","","",216,[[]]],[11,"from","","",217,[[]]],[11,"into","","",217,[[]]],[11,"to_owned","","",217,[[]]],[11,"clone_into","","",217,[[]]],[11,"borrow","","",217,[[]]],[11,"borrow_mut","","",217,[[]]],[11,"try_from","","",217,[[],["result",4]]],[11,"try_into","","",217,[[],["result",4]]],[11,"type_id","","",217,[[],["typeid",3]]],[11,"vzip","","",217,[[]]],[11,"init","","",217,[[]]],[11,"deref","","",217,[[]]],[11,"deref_mut","","",217,[[]]],[11,"drop","","",217,[[]]],[11,"into_any_arc","","",217,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",217,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",217,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",217,[[],["any",8]]],[11,"as_any_mut","","",217,[[],["any",8]]],[11,"equivalent","","",217,[[]]],[11,"from","","",218,[[]]],[11,"into","","",218,[[]]],[11,"to_string","","",218,[[],["string",3]]],[11,"borrow","","",218,[[]]],[11,"borrow_mut","","",218,[[]]],[11,"try_from","","",218,[[],["result",4]]],[11,"try_into","","",218,[[],["result",4]]],[11,"type_id","","",218,[[],["typeid",3]]],[11,"vzip","","",218,[[]]],[11,"init","","",218,[[]]],[11,"deref","","",218,[[]]],[11,"deref_mut","","",218,[[]]],[11,"drop","","",218,[[]]],[11,"into_any_arc","","",218,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",218,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",218,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",218,[[],["any",8]]],[11,"as_any_mut","","",218,[[],["any",8]]],[11,"from","","",219,[[]]],[11,"into","","",219,[[]]],[11,"to_owned","","",219,[[]]],[11,"clone_into","","",219,[[]]],[11,"borrow","","",219,[[]]],[11,"borrow_mut","","",219,[[]]],[11,"try_from","","",219,[[],["result",4]]],[11,"try_into","","",219,[[],["result",4]]],[11,"type_id","","",219,[[],["typeid",3]]],[11,"vzip","","",219,[[]]],[11,"init","","",219,[[]]],[11,"deref","","",219,[[]]],[11,"deref_mut","","",219,[[]]],[11,"drop","","",219,[[]]],[11,"into_any_arc","","",219,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",219,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",219,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",219,[[],["any",8]]],[11,"as_any_mut","","",219,[[],["any",8]]],[11,"from","","",220,[[]]],[11,"into","","",220,[[]]],[11,"to_owned","","",220,[[]]],[11,"clone_into","","",220,[[]]],[11,"borrow","","",220,[[]]],[11,"borrow_mut","","",220,[[]]],[11,"try_from","","",220,[[],["result",4]]],[11,"try_into","","",220,[[],["result",4]]],[11,"type_id","","",220,[[],["typeid",3]]],[11,"vzip","","",220,[[]]],[11,"init","","",220,[[]]],[11,"deref","","",220,[[]]],[11,"deref_mut","","",220,[[]]],[11,"drop","","",220,[[]]],[11,"into_any_arc","","",220,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",220,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",220,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",220,[[],["any",8]]],[11,"as_any_mut","","",220,[[],["any",8]]],[11,"from","","",221,[[]]],[11,"into","","",221,[[]]],[11,"to_owned","","",221,[[]]],[11,"clone_into","","",221,[[]]],[11,"borrow","","",221,[[]]],[11,"borrow_mut","","",221,[[]]],[11,"try_from","","",221,[[],["result",4]]],[11,"try_into","","",221,[[],["result",4]]],[11,"type_id","","",221,[[],["typeid",3]]],[11,"vzip","","",221,[[]]],[11,"init","","",221,[[]]],[11,"deref","","",221,[[]]],[11,"deref_mut","","",221,[[]]],[11,"drop","","",221,[[]]],[11,"into_any_arc","","",221,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",221,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",221,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",221,[[],["any",8]]],[11,"as_any_mut","","",221,[[],["any",8]]],[11,"from","","",222,[[]]],[11,"into","","",222,[[]]],[11,"borrow","","",222,[[]]],[11,"borrow_mut","","",222,[[]]],[11,"try_from","","",222,[[],["result",4]]],[11,"try_into","","",222,[[],["result",4]]],[11,"type_id","","",222,[[],["typeid",3]]],[11,"vzip","","",222,[[]]],[11,"init","","",222,[[]]],[11,"deref","","",222,[[]]],[11,"deref_mut","","",222,[[]]],[11,"drop","","",222,[[]]],[11,"into_any_arc","","",222,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",222,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",222,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",222,[[],["any",8]]],[11,"as_any_mut","","",222,[[],["any",8]]],[11,"from","","",223,[[]]],[11,"into","","",223,[[]]],[11,"to_owned","","",223,[[]]],[11,"clone_into","","",223,[[]]],[11,"borrow","","",223,[[]]],[11,"borrow_mut","","",223,[[]]],[11,"try_from","","",223,[[],["result",4]]],[11,"try_into","","",223,[[],["result",4]]],[11,"type_id","","",223,[[],["typeid",3]]],[11,"vzip","","",223,[[]]],[11,"init","","",223,[[]]],[11,"deref","","",223,[[]]],[11,"deref_mut","","",223,[[]]],[11,"drop","","",223,[[]]],[11,"into_any_arc","","",223,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",223,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",223,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",223,[[],["any",8]]],[11,"as_any_mut","","",223,[[],["any",8]]],[11,"from","","",497,[[]]],[11,"into","","",497,[[]]],[11,"into_iter","","",497,[[]]],[11,"to_owned","","",497,[[]]],[11,"clone_into","","",497,[[]]],[11,"borrow","","",497,[[]]],[11,"borrow_mut","","",497,[[]]],[11,"try_from","","",497,[[],["result",4]]],[11,"try_into","","",497,[[],["result",4]]],[11,"type_id","","",497,[[],["typeid",3]]],[11,"vzip","","",497,[[]]],[11,"init","","",497,[[]]],[11,"deref","","",497,[[]]],[11,"deref_mut","","",497,[[]]],[11,"drop","","",497,[[]]],[11,"into_any_arc","","",497,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",497,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",497,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",497,[[],["any",8]]],[11,"as_any_mut","","",497,[[],["any",8]]],[11,"from","","",224,[[]]],[11,"into","","",224,[[]]],[11,"to_owned","","",224,[[]]],[11,"clone_into","","",224,[[]]],[11,"borrow","","",224,[[]]],[11,"borrow_mut","","",224,[[]]],[11,"try_from","","",224,[[],["result",4]]],[11,"try_into","","",224,[[],["result",4]]],[11,"type_id","","",224,[[],["typeid",3]]],[11,"vzip","","",224,[[]]],[11,"init","","",224,[[]]],[11,"deref","","",224,[[]]],[11,"deref_mut","","",224,[[]]],[11,"drop","","",224,[[]]],[11,"into_any_arc","","",224,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",224,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",224,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",224,[[],["any",8]]],[11,"as_any_mut","","",224,[[],["any",8]]],[11,"equivalent","","",224,[[]]],[11,"from","","",225,[[]]],[11,"into","","",225,[[]]],[11,"to_owned","","",225,[[]]],[11,"clone_into","","",225,[[]]],[11,"borrow","","",225,[[]]],[11,"borrow_mut","","",225,[[]]],[11,"try_from","","",225,[[],["result",4]]],[11,"try_into","","",225,[[],["result",4]]],[11,"type_id","","",225,[[],["typeid",3]]],[11,"vzip","","",225,[[]]],[11,"init","","",225,[[]]],[11,"deref","","",225,[[]]],[11,"deref_mut","","",225,[[]]],[11,"drop","","",225,[[]]],[11,"into_any_arc","","",225,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",225,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",225,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",225,[[],["any",8]]],[11,"as_any_mut","","",225,[[],["any",8]]],[11,"from","","",226,[[]]],[11,"into","","",226,[[]]],[11,"to_owned","","",226,[[]]],[11,"clone_into","","",226,[[]]],[11,"borrow","","",226,[[]]],[11,"borrow_mut","","",226,[[]]],[11,"try_from","","",226,[[],["result",4]]],[11,"try_into","","",226,[[],["result",4]]],[11,"type_id","","",226,[[],["typeid",3]]],[11,"to_keyed_vec","","",226,[[],[["vec",3],["global",3]]]],[11,"decode_all","","",226,[[],[["result",4],["error",3]]]],[11,"decode_all_with_depth_limit","","",226,[[],[["result",4],["error",3]]]],[11,"decode_with_depth_limit","","",226,[[],[["result",4],["error",3]]]],[11,"vzip","","",226,[[]]],[11,"init","","",226,[[]]],[11,"deref","","",226,[[]]],[11,"deref_mut","","",226,[[]]],[11,"drop","","",226,[[]]],[11,"into_any_arc","","",226,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",226,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",226,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",226,[[],["any",8]]],[11,"as_any_mut","","",226,[[],["any",8]]],[11,"equivalent","","",226,[[]]],[11,"from","","",227,[[]]],[11,"into","","",227,[[]]],[11,"to_owned","","",227,[[]]],[11,"clone_into","","",227,[[]]],[11,"borrow","","",227,[[]]],[11,"borrow_mut","","",227,[[]]],[11,"try_from","","",227,[[],["result",4]]],[11,"try_into","","",227,[[],["result",4]]],[11,"type_id","","",227,[[],["typeid",3]]],[11,"to_keyed_vec","","",227,[[],[["vec",3],["global",3]]]],[11,"decode_all","","",227,[[],[["result",4],["error",3]]]],[11,"decode_all_with_depth_limit","","",227,[[],[["result",4],["error",3]]]],[11,"decode_with_depth_limit","","",227,[[],[["result",4],["error",3]]]],[11,"vzip","","",227,[[]]],[11,"init","","",227,[[]]],[11,"deref","","",227,[[]]],[11,"deref_mut","","",227,[[]]],[11,"drop","","",227,[[]]],[11,"into_any_arc","","",227,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",227,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",227,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",227,[[],["any",8]]],[11,"as_any_mut","","",227,[[],["any",8]]],[11,"equivalent","","",227,[[]]],[11,"from","smoldot::informant","",228,[[]]],[11,"into","","",228,[[]]],[11,"to_string","","",228,[[],["string",3]]],[11,"borrow","","",228,[[]]],[11,"borrow_mut","","",228,[[]]],[11,"try_from","","",228,[[],["result",4]]],[11,"try_into","","",228,[[],["result",4]]],[11,"type_id","","",228,[[],["typeid",3]]],[11,"vzip","","",228,[[]]],[11,"init","","",228,[[]]],[11,"deref","","",228,[[]]],[11,"deref_mut","","",228,[[]]],[11,"drop","","",228,[[]]],[11,"into_any_arc","","",228,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",228,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",228,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",228,[[],["any",8]]],[11,"as_any_mut","","",228,[[],["any",8]]],[11,"from","","",229,[[]]],[11,"into","","",229,[[]]],[11,"borrow","","",229,[[]]],[11,"borrow_mut","","",229,[[]]],[11,"try_from","","",229,[[],["result",4]]],[11,"try_into","","",229,[[],["result",4]]],[11,"type_id","","",229,[[],["typeid",3]]],[11,"vzip","","",229,[[]]],[11,"init","","",229,[[]]],[11,"deref","","",229,[[]]],[11,"deref_mut","","",229,[[]]],[11,"drop","","",229,[[]]],[11,"into_any_arc","","",229,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",229,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",229,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",229,[[],["any",8]]],[11,"as_any_mut","","",229,[[],["any",8]]],[11,"from","","",230,[[]]],[11,"into","","",230,[[]]],[11,"to_string","","",230,[[],["string",3]]],[11,"borrow","","",230,[[]]],[11,"borrow_mut","","",230,[[]]],[11,"try_from","","",230,[[],["result",4]]],[11,"try_into","","",230,[[],["result",4]]],[11,"type_id","","",230,[[],["typeid",3]]],[11,"vzip","","",230,[[]]],[11,"init","","",230,[[]]],[11,"deref","","",230,[[]]],[11,"deref_mut","","",230,[[]]],[11,"drop","","",230,[[]]],[11,"into_any_arc","","",230,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",230,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",230,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",230,[[],["any",8]]],[11,"as_any_mut","","",230,[[],["any",8]]],[11,"from","smoldot::json_rpc::methods","",231,[[]]],[11,"into","","",231,[[]]],[11,"to_string","","",231,[[],["string",3]]],[11,"borrow","","",231,[[]]],[11,"borrow_mut","","",231,[[]]],[11,"try_from","","",231,[[],["result",4]]],[11,"try_into","","",231,[[],["result",4]]],[11,"type_id","","",231,[[],["typeid",3]]],[11,"vzip","","",231,[[]]],[11,"init","","",231,[[]]],[11,"deref","","",231,[[]]],[11,"deref_mut","","",231,[[]]],[11,"drop","","",231,[[]]],[11,"into_any_arc","","",231,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",231,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",231,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",231,[[],["any",8]]],[11,"as_any_mut","","",231,[[],["any",8]]],[11,"from","","",498,[[]]],[11,"into","","",498,[[]]],[11,"to_string","","",498,[[],["string",3]]],[11,"borrow","","",498,[[]]],[11,"borrow_mut","","",498,[[]]],[11,"try_from","","",498,[[],["result",4]]],[11,"try_into","","",498,[[],["result",4]]],[11,"type_id","","",498,[[],["typeid",3]]],[11,"vzip","","",498,[[]]],[11,"init","","",498,[[]]],[11,"deref","","",498,[[]]],[11,"deref_mut","","",498,[[]]],[11,"drop","","",498,[[]]],[11,"into_any_arc","","",498,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",498,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",498,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",498,[[],["any",8]]],[11,"as_any_mut","","",498,[[],["any",8]]],[11,"from","","",232,[[]]],[11,"into","","",232,[[]]],[11,"to_owned","","",232,[[]]],[11,"clone_into","","",232,[[]]],[11,"borrow","","",232,[[]]],[11,"borrow_mut","","",232,[[]]],[11,"try_from","","",232,[[],["result",4]]],[11,"try_into","","",232,[[],["result",4]]],[11,"type_id","","",232,[[],["typeid",3]]],[11,"vzip","","",232,[[]]],[11,"init","","",232,[[]]],[11,"deref","","",232,[[]]],[11,"deref_mut","","",232,[[]]],[11,"drop","","",232,[[]]],[11,"into_any_arc","","",232,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",232,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",232,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",232,[[],["any",8]]],[11,"as_any_mut","","",232,[[],["any",8]]],[11,"from","","",245,[[]]],[11,"into","","",245,[[]]],[11,"to_owned","","",245,[[]]],[11,"clone_into","","",245,[[]]],[11,"borrow","","",245,[[]]],[11,"borrow_mut","","",245,[[]]],[11,"try_from","","",245,[[],["result",4]]],[11,"try_into","","",245,[[],["result",4]]],[11,"type_id","","",245,[[],["typeid",3]]],[11,"vzip","","",245,[[]]],[11,"init","","",245,[[]]],[11,"deref","","",245,[[]]],[11,"deref_mut","","",245,[[]]],[11,"drop","","",245,[[]]],[11,"into_any_arc","","",245,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",245,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",245,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",245,[[],["any",8]]],[11,"as_any_mut","","",245,[[],["any",8]]],[11,"from","","",246,[[]]],[11,"into","","",246,[[]]],[11,"to_owned","","",246,[[]]],[11,"clone_into","","",246,[[]]],[11,"borrow","","",246,[[]]],[11,"borrow_mut","","",246,[[]]],[11,"try_from","","",246,[[],["result",4]]],[11,"try_into","","",246,[[],["result",4]]],[11,"type_id","","",246,[[],["typeid",3]]],[11,"vzip","","",246,[[]]],[11,"init","","",246,[[]]],[11,"deref","","",246,[[]]],[11,"deref_mut","","",246,[[]]],[11,"drop","","",246,[[]]],[11,"into_any_arc","","",246,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",246,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",246,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",246,[[],["any",8]]],[11,"as_any_mut","","",246,[[],["any",8]]],[11,"from","","",247,[[]]],[11,"into","","",247,[[]]],[11,"to_owned","","",247,[[]]],[11,"clone_into","","",247,[[]]],[11,"borrow","","",247,[[]]],[11,"borrow_mut","","",247,[[]]],[11,"try_from","","",247,[[],["result",4]]],[11,"try_into","","",247,[[],["result",4]]],[11,"type_id","","",247,[[],["typeid",3]]],[11,"vzip","","",247,[[]]],[11,"init","","",247,[[]]],[11,"deref","","",247,[[]]],[11,"deref_mut","","",247,[[]]],[11,"drop","","",247,[[]]],[11,"into_any_arc","","",247,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",247,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",247,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",247,[[],["any",8]]],[11,"as_any_mut","","",247,[[],["any",8]]],[11,"from","","",248,[[]]],[11,"into","","",248,[[]]],[11,"to_owned","","",248,[[]]],[11,"clone_into","","",248,[[]]],[11,"borrow","","",248,[[]]],[11,"borrow_mut","","",248,[[]]],[11,"try_from","","",248,[[],["result",4]]],[11,"try_into","","",248,[[],["result",4]]],[11,"type_id","","",248,[[],["typeid",3]]],[11,"vzip","","",248,[[]]],[11,"init","","",248,[[]]],[11,"deref","","",248,[[]]],[11,"deref_mut","","",248,[[]]],[11,"drop","","",248,[[]]],[11,"into_any_arc","","",248,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",248,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",248,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",248,[[],["any",8]]],[11,"as_any_mut","","",248,[[],["any",8]]],[11,"from","","",249,[[]]],[11,"into","","",249,[[]]],[11,"to_owned","","",249,[[]]],[11,"clone_into","","",249,[[]]],[11,"borrow","","",249,[[]]],[11,"borrow_mut","","",249,[[]]],[11,"try_from","","",249,[[],["result",4]]],[11,"try_into","","",249,[[],["result",4]]],[11,"type_id","","",249,[[],["typeid",3]]],[11,"vzip","","",249,[[]]],[11,"init","","",249,[[]]],[11,"deref","","",249,[[]]],[11,"deref_mut","","",249,[[]]],[11,"drop","","",249,[[]]],[11,"into_any_arc","","",249,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",249,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",249,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",249,[[],["any",8]]],[11,"as_any_mut","","",249,[[],["any",8]]],[11,"from","","",250,[[]]],[11,"into","","",250,[[]]],[11,"to_owned","","",250,[[]]],[11,"clone_into","","",250,[[]]],[11,"borrow","","",250,[[]]],[11,"borrow_mut","","",250,[[]]],[11,"try_from","","",250,[[],["result",4]]],[11,"try_into","","",250,[[],["result",4]]],[11,"type_id","","",250,[[],["typeid",3]]],[11,"vzip","","",250,[[]]],[11,"init","","",250,[[]]],[11,"deref","","",250,[[]]],[11,"deref_mut","","",250,[[]]],[11,"drop","","",250,[[]]],[11,"into_any_arc","","",250,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",250,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",250,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",250,[[],["any",8]]],[11,"as_any_mut","","",250,[[],["any",8]]],[11,"from","","",251,[[]]],[11,"into","","",251,[[]]],[11,"to_owned","","",251,[[]]],[11,"clone_into","","",251,[[]]],[11,"borrow","","",251,[[]]],[11,"borrow_mut","","",251,[[]]],[11,"try_from","","",251,[[],["result",4]]],[11,"try_into","","",251,[[],["result",4]]],[11,"type_id","","",251,[[],["typeid",3]]],[11,"vzip","","",251,[[]]],[11,"init","","",251,[[]]],[11,"deref","","",251,[[]]],[11,"deref_mut","","",251,[[]]],[11,"drop","","",251,[[]]],[11,"into_any_arc","","",251,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",251,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",251,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",251,[[],["any",8]]],[11,"as_any_mut","","",251,[[],["any",8]]],[11,"from","","",252,[[]]],[11,"into","","",252,[[]]],[11,"to_owned","","",252,[[]]],[11,"clone_into","","",252,[[]]],[11,"borrow","","",252,[[]]],[11,"borrow_mut","","",252,[[]]],[11,"try_from","","",252,[[],["result",4]]],[11,"try_into","","",252,[[],["result",4]]],[11,"type_id","","",252,[[],["typeid",3]]],[11,"vzip","","",252,[[]]],[11,"init","","",252,[[]]],[11,"deref","","",252,[[]]],[11,"deref_mut","","",252,[[]]],[11,"drop","","",252,[[]]],[11,"into_any_arc","","",252,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",252,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",252,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",252,[[],["any",8]]],[11,"as_any_mut","","",252,[[],["any",8]]],[11,"from","","",253,[[]]],[11,"into","","",253,[[]]],[11,"to_owned","","",253,[[]]],[11,"clone_into","","",253,[[]]],[11,"borrow","","",253,[[]]],[11,"borrow_mut","","",253,[[]]],[11,"try_from","","",253,[[],["result",4]]],[11,"try_into","","",253,[[],["result",4]]],[11,"type_id","","",253,[[],["typeid",3]]],[11,"vzip","","",253,[[]]],[11,"init","","",253,[[]]],[11,"deref","","",253,[[]]],[11,"deref_mut","","",253,[[]]],[11,"drop","","",253,[[]]],[11,"into_any_arc","","",253,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",253,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",253,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",253,[[],["any",8]]],[11,"as_any_mut","","",253,[[],["any",8]]],[11,"from","","",254,[[]]],[11,"into","","",254,[[]]],[11,"to_owned","","",254,[[]]],[11,"clone_into","","",254,[[]]],[11,"borrow","","",254,[[]]],[11,"borrow_mut","","",254,[[]]],[11,"try_from","","",254,[[],["result",4]]],[11,"try_into","","",254,[[],["result",4]]],[11,"type_id","","",254,[[],["typeid",3]]],[11,"vzip","","",254,[[]]],[11,"init","","",254,[[]]],[11,"deref","","",254,[[]]],[11,"deref_mut","","",254,[[]]],[11,"drop","","",254,[[]]],[11,"into_any_arc","","",254,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",254,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",254,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",254,[[],["any",8]]],[11,"as_any_mut","","",254,[[],["any",8]]],[11,"from","","",255,[[]]],[11,"into","","",255,[[]]],[11,"to_owned","","",255,[[]]],[11,"clone_into","","",255,[[]]],[11,"borrow","","",255,[[]]],[11,"borrow_mut","","",255,[[]]],[11,"try_from","","",255,[[],["result",4]]],[11,"try_into","","",255,[[],["result",4]]],[11,"type_id","","",255,[[],["typeid",3]]],[11,"vzip","","",255,[[]]],[11,"init","","",255,[[]]],[11,"deref","","",255,[[]]],[11,"deref_mut","","",255,[[]]],[11,"drop","","",255,[[]]],[11,"into_any_arc","","",255,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",255,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",255,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",255,[[],["any",8]]],[11,"as_any_mut","","",255,[[],["any",8]]],[11,"from","smoldot::json_rpc::parse","",256,[[]]],[11,"into","","",256,[[]]],[11,"borrow","","",256,[[]]],[11,"borrow_mut","","",256,[[]]],[11,"try_from","","",256,[[],["result",4]]],[11,"try_into","","",256,[[],["result",4]]],[11,"type_id","","",256,[[],["typeid",3]]],[11,"vzip","","",256,[[]]],[11,"init","","",256,[[]]],[11,"deref","","",256,[[]]],[11,"deref_mut","","",256,[[]]],[11,"drop","","",256,[[]]],[11,"into_any_arc","","",256,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",256,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",256,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",256,[[],["any",8]]],[11,"as_any_mut","","",256,[[],["any",8]]],[11,"from","","",499,[[]]],[11,"into","","",499,[[]]],[11,"to_string","","",499,[[],["string",3]]],[11,"borrow","","",499,[[]]],[11,"borrow_mut","","",499,[[]]],[11,"try_from","","",499,[[],["result",4]]],[11,"try_into","","",499,[[],["result",4]]],[11,"type_id","","",499,[[],["typeid",3]]],[11,"vzip","","",499,[[]]],[11,"init","","",499,[[]]],[11,"deref","","",499,[[]]],[11,"deref_mut","","",499,[[]]],[11,"drop","","",499,[[]]],[11,"into_any_arc","","",499,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",499,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",499,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",499,[[],["any",8]]],[11,"as_any_mut","","",499,[[],["any",8]]],[11,"from","","",257,[[]]],[11,"into","","",257,[[]]],[11,"borrow","","",257,[[]]],[11,"borrow_mut","","",257,[[]]],[11,"try_from","","",257,[[],["result",4]]],[11,"try_into","","",257,[[],["result",4]]],[11,"type_id","","",257,[[],["typeid",3]]],[11,"vzip","","",257,[[]]],[11,"init","","",257,[[]]],[11,"deref","","",257,[[]]],[11,"deref_mut","","",257,[[]]],[11,"drop","","",257,[[]]],[11,"into_any_arc","","",257,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",257,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",257,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",257,[[],["any",8]]],[11,"as_any_mut","","",257,[[],["any",8]]],[11,"from","smoldot::json_rpc::websocket_server","",258,[[]]],[11,"into","","",258,[[]]],[11,"borrow","","",258,[[]]],[11,"borrow_mut","","",258,[[]]],[11,"try_from","","",258,[[],["result",4]]],[11,"try_into","","",258,[[],["result",4]]],[11,"type_id","","",258,[[],["typeid",3]]],[11,"vzip","","",258,[[]]],[11,"init","","",258,[[]]],[11,"deref","","",258,[[]]],[11,"deref_mut","","",258,[[]]],[11,"drop","","",258,[[]]],[11,"into_any_arc","","",258,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",258,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",258,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",258,[[],["any",8]]],[11,"as_any_mut","","",258,[[],["any",8]]],[11,"from","","",500,[[]]],[11,"into","","",500,[[]]],[11,"to_owned","","",500,[[]]],[11,"clone_into","","",500,[[]]],[11,"borrow","","",500,[[]]],[11,"borrow_mut","","",500,[[]]],[11,"try_from","","",500,[[],["result",4]]],[11,"try_into","","",500,[[],["result",4]]],[11,"type_id","","",500,[[],["typeid",3]]],[11,"get_hash","","",500,[[]]],[11,"vzip","","",500,[[]]],[11,"init","","",500,[[]]],[11,"deref","","",500,[[]]],[11,"deref_mut","","",500,[[]]],[11,"drop","","",500,[[]]],[11,"into_any_arc","","",500,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",500,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",500,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",500,[[],["any",8]]],[11,"as_any_mut","","",500,[[],["any",8]]],[11,"get_hash","","",500,[[]]],[11,"equivalent","","",500,[[]]],[11,"from","","",259,[[]]],[11,"into","","",259,[[]]],[11,"borrow","","",259,[[]]],[11,"borrow_mut","","",259,[[]]],[11,"try_from","","",259,[[],["result",4]]],[11,"try_into","","",259,[[],["result",4]]],[11,"type_id","","",259,[[],["typeid",3]]],[11,"vzip","","",259,[[]]],[11,"init","","",259,[[]]],[11,"deref","","",259,[[]]],[11,"deref_mut","","",259,[[]]],[11,"drop","","",259,[[]]],[11,"into_any","","",259,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",259,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",259,[[],["any",8]]],[11,"as_any_mut","","",259,[[],["any",8]]],[11,"from","","",260,[[]]],[11,"into","","",260,[[]]],[11,"borrow","","",260,[[]]],[11,"borrow_mut","","",260,[[]]],[11,"try_from","","",260,[[],["result",4]]],[11,"try_into","","",260,[[],["result",4]]],[11,"type_id","","",260,[[],["typeid",3]]],[11,"vzip","","",260,[[]]],[11,"init","","",260,[[]]],[11,"deref","","",260,[[]]],[11,"deref_mut","","",260,[[]]],[11,"drop","","",260,[[]]],[11,"into_any_arc","","",260,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",260,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",260,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",260,[[],["any",8]]],[11,"as_any_mut","","",260,[[],["any",8]]],[11,"from","smoldot::network","",501,[[]]],[11,"into","","",501,[[]]],[11,"to_owned","","",501,[[]]],[11,"clone_into","","",501,[[]]],[11,"to_string","","",501,[[],["string",3]]],[11,"borrow","","",501,[[]]],[11,"borrow_mut","","",501,[[]]],[11,"try_from","","",501,[[],["result",4]]],[11,"try_into","","",501,[[],["result",4]]],[11,"type_id","","",501,[[],["typeid",3]]],[11,"get_hash","","",501,[[]]],[11,"as_byte_slice","","",501,[[]]],[11,"as_slice_of","","",501,[[],[["error",4],["result",4]]]],[11,"vzip","","",501,[[]]],[11,"init","","",501,[[]]],[11,"deref","","",501,[[]]],[11,"deref_mut","","",501,[[]]],[11,"drop","","",501,[[]]],[11,"into_any_arc","","",501,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",501,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",501,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",501,[[],["any",8]]],[11,"as_any_mut","","",501,[[],["any",8]]],[11,"get_hash","","",501,[[]]],[11,"as_bits","","",501,[[],["bitslice",3]]],[11,"encode_hex","","",501,[[]]],[11,"encode_hex_upper","","",501,[[]]],[11,"equivalent","","",501,[[]]],[11,"from","smoldot::libp2p::multiaddr","",502,[[]]],[11,"into","","",502,[[]]],[11,"into_iter","","",502,[[]]],[11,"borrow","","",502,[[]]],[11,"borrow_mut","","",502,[[]]],[11,"try_from","","",502,[[],["result",4]]],[11,"try_into","","",502,[[],["result",4]]],[11,"type_id","","",502,[[],["typeid",3]]],[11,"vzip","","",502,[[]]],[11,"init","","",502,[[]]],[11,"deref","","",502,[[]]],[11,"deref_mut","","",502,[[]]],[11,"drop","","",502,[[]]],[11,"into_any_arc","","",502,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",502,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",502,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",502,[[],["any",8]]],[11,"as_any_mut","","",502,[[],["any",8]]],[11,"from","smoldot::libp2p::multiaddr::multihash","",503,[[]]],[11,"into","","",503,[[]]],[11,"to_owned","","",503,[[]]],[11,"clone_into","","",503,[[]]],[11,"borrow","","",503,[[]]],[11,"borrow_mut","","",503,[[]]],[11,"try_from","","",503,[[],["result",4]]],[11,"try_into","","",503,[[],["result",4]]],[11,"type_id","","",503,[[],["typeid",3]]],[11,"get_hash","","",503,[[]]],[11,"as_byte_slice","","",503,[[]]],[11,"as_slice_of","","",503,[[],[["error",4],["result",4]]]],[11,"vzip","","",503,[[]]],[11,"init","","",503,[[]]],[11,"deref","","",503,[[]]],[11,"deref_mut","","",503,[[]]],[11,"drop","","",503,[[]]],[11,"into_any_arc","","",503,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",503,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",503,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",503,[[],["any",8]]],[11,"as_any_mut","","",503,[[],["any",8]]],[11,"get_hash","","",503,[[]]],[11,"as_bits","","",503,[[],["bitslice",3]]],[11,"encode_hex","","",503,[[]]],[11,"encode_hex_upper","","",503,[[]]],[11,"equivalent","","",503,[[]]],[11,"from","","",504,[[]]],[11,"into","","",504,[[]]],[11,"to_owned","","",504,[[]]],[11,"clone_into","","",504,[[]]],[11,"borrow","","",504,[[]]],[11,"borrow_mut","","",504,[[]]],[11,"try_from","","",504,[[],["result",4]]],[11,"try_into","","",504,[[],["result",4]]],[11,"type_id","","",504,[[],["typeid",3]]],[11,"get_hash","","",504,[[]]],[11,"vzip","","",504,[[]]],[11,"init","","",504,[[]]],[11,"deref","","",504,[[]]],[11,"deref_mut","","",504,[[]]],[11,"drop","","",504,[[]]],[11,"into_any_arc","","",504,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",504,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",504,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",504,[[],["any",8]]],[11,"as_any_mut","","",504,[[],["any",8]]],[11,"get_hash","","",504,[[]]],[11,"equivalent","","",504,[[]]],[11,"from","","",266,[[]]],[11,"into","","",266,[[]]],[11,"to_owned","","",266,[[]]],[11,"clone_into","","",266,[[]]],[11,"to_string","","",266,[[],["string",3]]],[11,"borrow","","",266,[[]]],[11,"borrow_mut","","",266,[[]]],[11,"try_from","","",266,[[],["result",4]]],[11,"try_into","","",266,[[],["result",4]]],[11,"type_id","","",266,[[],["typeid",3]]],[11,"vzip","","",266,[[]]],[11,"init","","",266,[[]]],[11,"deref","","",266,[[]]],[11,"deref_mut","","",266,[[]]],[11,"drop","","",266,[[]]],[11,"into_any_arc","","",266,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",266,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",266,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",266,[[],["any",8]]],[11,"as_any_mut","","",266,[[],["any",8]]],[11,"equivalent","","",266,[[]]],[11,"from","","",267,[[]]],[11,"into","","",267,[[]]],[11,"to_owned","","",267,[[]]],[11,"clone_into","","",267,[[]]],[11,"to_string","","",267,[[],["string",3]]],[11,"borrow","","",267,[[]]],[11,"borrow_mut","","",267,[[]]],[11,"try_from","","",267,[[],["result",4]]],[11,"try_into","","",267,[[],["result",4]]],[11,"type_id","","",267,[[],["typeid",3]]],[11,"vzip","","",267,[[]]],[11,"init","","",267,[[]]],[11,"deref","","",267,[[]]],[11,"deref_mut","","",267,[[]]],[11,"drop","","",267,[[]]],[11,"into_any_arc","","",267,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",267,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",267,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",267,[[],["any",8]]],[11,"as_any_mut","","",267,[[],["any",8]]],[11,"equivalent","","",267,[[]]],[11,"from","","",268,[[]]],[11,"into","","",268,[[]]],[11,"to_owned","","",268,[[]]],[11,"clone_into","","",268,[[]]],[11,"to_string","","",268,[[],["string",3]]],[11,"borrow","","",268,[[]]],[11,"borrow_mut","","",268,[[]]],[11,"try_from","","",268,[[],["result",4]]],[11,"try_into","","",268,[[],["result",4]]],[11,"type_id","","",268,[[],["typeid",3]]],[11,"vzip","","",268,[[]]],[11,"init","","",268,[[]]],[11,"deref","","",268,[[]]],[11,"deref_mut","","",268,[[]]],[11,"drop","","",268,[[]]],[11,"into_any_arc","","",268,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",268,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",268,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",268,[[],["any",8]]],[11,"as_any_mut","","",268,[[],["any",8]]],[11,"equivalent","","",268,[[]]],[11,"from","","",269,[[]]],[11,"into","","",269,[[]]],[11,"to_owned","","",269,[[]]],[11,"clone_into","","",269,[[]]],[11,"borrow","","",269,[[]]],[11,"borrow_mut","","",269,[[]]],[11,"try_from","","",269,[[],["result",4]]],[11,"try_into","","",269,[[],["result",4]]],[11,"type_id","","",269,[[],["typeid",3]]],[11,"get_hash","","",269,[[]]],[11,"vzip","","",269,[[]]],[11,"init","","",269,[[]]],[11,"deref","","",269,[[]]],[11,"deref_mut","","",269,[[]]],[11,"drop","","",269,[[]]],[11,"into_any_arc","","",269,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",269,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",269,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",269,[[],["any",8]]],[11,"as_any_mut","","",269,[[],["any",8]]],[11,"get_hash","","",269,[[]]],[11,"equivalent","","",269,[[]]],[11,"from","","",505,[[]]],[11,"into","","",505,[[]]],[11,"to_owned","","",505,[[]]],[11,"clone_into","","",505,[[]]],[11,"borrow","","",505,[[]]],[11,"borrow_mut","","",505,[[]]],[11,"try_from","","",505,[[],["result",4]]],[11,"try_into","","",505,[[],["result",4]]],[11,"type_id","","",505,[[],["typeid",3]]],[11,"write","","",505,[[]]],[11,"vzip","","",505,[[]]],[11,"init","","",505,[[]]],[11,"deref","","",505,[[]]],[11,"deref_mut","","",505,[[]]],[11,"drop","","",505,[[]]],[11,"into_any_arc","","",505,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",505,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",505,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",505,[[],["any",8]]],[11,"as_any_mut","","",505,[[],["any",8]]],[11,"from","","",506,[[]]],[11,"into","","",506,[[]]],[11,"to_owned","","",506,[[]]],[11,"clone_into","","",506,[[]]],[11,"borrow","","",506,[[]]],[11,"borrow_mut","","",506,[[]]],[11,"try_from","","",506,[[],["result",4]]],[11,"try_into","","",506,[[],["result",4]]],[11,"type_id","","",506,[[],["typeid",3]]],[11,"write","","",506,[[]]],[11,"vzip","","",506,[[]]],[11,"init","","",506,[[]]],[11,"deref","","",506,[[]]],[11,"deref_mut","","",506,[[]]],[11,"drop","","",506,[[]]],[11,"into_any_arc","","",506,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",506,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",506,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",506,[[],["any",8]]],[11,"as_any_mut","","",506,[[],["any",8]]],[11,"from","","",507,[[]]],[11,"into","","",507,[[]]],[11,"to_owned","","",507,[[]]],[11,"clone_into","","",507,[[]]],[11,"borrow","","",507,[[]]],[11,"borrow_mut","","",507,[[]]],[11,"try_from","","",507,[[],["result",4]]],[11,"try_into","","",507,[[],["result",4]]],[11,"type_id","","",507,[[],["typeid",3]]],[11,"write","","",507,[[]]],[11,"vzip","","",507,[[]]],[11,"init","","",507,[[]]],[11,"deref","","",507,[[]]],[11,"deref_mut","","",507,[[]]],[11,"drop","","",507,[[]]],[11,"into_any_arc","","",507,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",507,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",507,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",507,[[],["any",8]]],[11,"as_any_mut","","",507,[[],["any",8]]],[11,"from","","",508,[[]]],[11,"into","","",508,[[]]],[11,"to_owned","","",508,[[]]],[11,"clone_into","","",508,[[]]],[11,"borrow","","",508,[[]]],[11,"borrow_mut","","",508,[[]]],[11,"try_from","","",508,[[],["result",4]]],[11,"try_into","","",508,[[],["result",4]]],[11,"type_id","","",508,[[],["typeid",3]]],[11,"write","","",508,[[]]],[11,"vzip","","",508,[[]]],[11,"init","","",508,[[]]],[11,"deref","","",508,[[]]],[11,"deref_mut","","",508,[[]]],[11,"drop","","",508,[[]]],[11,"into_any_arc","","",508,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",508,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",508,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",508,[[],["any",8]]],[11,"as_any_mut","","",508,[[],["any",8]]],[11,"from","","",509,[[]]],[11,"into","","",509,[[]]],[11,"to_owned","","",509,[[]]],[11,"clone_into","","",509,[[]]],[11,"borrow","","",509,[[]]],[11,"borrow_mut","","",509,[[]]],[11,"try_from","","",509,[[],["result",4]]],[11,"try_into","","",509,[[],["result",4]]],[11,"type_id","","",509,[[],["typeid",3]]],[11,"write","","",509,[[]]],[11,"vzip","","",509,[[]]],[11,"init","","",509,[[]]],[11,"deref","","",509,[[]]],[11,"deref_mut","","",509,[[]]],[11,"drop","","",509,[[]]],[11,"into_any_arc","","",509,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",509,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",509,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",509,[[],["any",8]]],[11,"as_any_mut","","",509,[[],["any",8]]],[11,"from","","",510,[[]]],[11,"into","","",510,[[]]],[11,"to_owned","","",510,[[]]],[11,"clone_into","","",510,[[]]],[11,"borrow","","",510,[[]]],[11,"borrow_mut","","",510,[[]]],[11,"try_from","","",510,[[],["result",4]]],[11,"try_into","","",510,[[],["result",4]]],[11,"type_id","","",510,[[],["typeid",3]]],[11,"write","","",510,[[]]],[11,"vzip","","",510,[[]]],[11,"init","","",510,[[]]],[11,"deref","","",510,[[]]],[11,"deref_mut","","",510,[[]]],[11,"drop","","",510,[[]]],[11,"into_any_arc","","",510,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",510,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",510,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",510,[[],["any",8]]],[11,"as_any_mut","","",510,[[],["any",8]]],[11,"from","","",511,[[]]],[11,"into","","",511,[[]]],[11,"to_owned","","",511,[[]]],[11,"clone_into","","",511,[[]]],[11,"borrow","","",511,[[]]],[11,"borrow_mut","","",511,[[]]],[11,"try_from","","",511,[[],["result",4]]],[11,"try_into","","",511,[[],["result",4]]],[11,"type_id","","",511,[[],["typeid",3]]],[11,"write","","",511,[[]]],[11,"vzip","","",511,[[]]],[11,"init","","",511,[[]]],[11,"deref","","",511,[[]]],[11,"deref_mut","","",511,[[]]],[11,"drop","","",511,[[]]],[11,"into_any_arc","","",511,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",511,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",511,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",511,[[],["any",8]]],[11,"as_any_mut","","",511,[[],["any",8]]],[11,"from","","",512,[[]]],[11,"into","","",512,[[]]],[11,"to_owned","","",512,[[]]],[11,"clone_into","","",512,[[]]],[11,"borrow","","",512,[[]]],[11,"borrow_mut","","",512,[[]]],[11,"try_from","","",512,[[],["result",4]]],[11,"try_into","","",512,[[],["result",4]]],[11,"type_id","","",512,[[],["typeid",3]]],[11,"write","","",512,[[]]],[11,"vzip","","",512,[[]]],[11,"init","","",512,[[]]],[11,"deref","","",512,[[]]],[11,"deref_mut","","",512,[[]]],[11,"drop","","",512,[[]]],[11,"into_any_arc","","",512,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",512,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",512,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",512,[[],["any",8]]],[11,"as_any_mut","","",512,[[],["any",8]]],[11,"from","","",513,[[]]],[11,"into","","",513,[[]]],[11,"to_owned","","",513,[[]]],[11,"clone_into","","",513,[[]]],[11,"borrow","","",513,[[]]],[11,"borrow_mut","","",513,[[]]],[11,"try_from","","",513,[[],["result",4]]],[11,"try_into","","",513,[[],["result",4]]],[11,"type_id","","",513,[[],["typeid",3]]],[11,"write","","",513,[[]]],[11,"vzip","","",513,[[]]],[11,"init","","",513,[[]]],[11,"deref","","",513,[[]]],[11,"deref_mut","","",513,[[]]],[11,"drop","","",513,[[]]],[11,"into_any_arc","","",513,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",513,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",513,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",513,[[],["any",8]]],[11,"as_any_mut","","",513,[[],["any",8]]],[11,"from","","",514,[[]]],[11,"into","","",514,[[]]],[11,"to_owned","","",514,[[]]],[11,"clone_into","","",514,[[]]],[11,"borrow","","",514,[[]]],[11,"borrow_mut","","",514,[[]]],[11,"try_from","","",514,[[],["result",4]]],[11,"try_into","","",514,[[],["result",4]]],[11,"type_id","","",514,[[],["typeid",3]]],[11,"write","","",514,[[]]],[11,"vzip","","",514,[[]]],[11,"init","","",514,[[]]],[11,"deref","","",514,[[]]],[11,"deref_mut","","",514,[[]]],[11,"drop","","",514,[[]]],[11,"into_any_arc","","",514,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",514,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",514,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",514,[[],["any",8]]],[11,"as_any_mut","","",514,[[],["any",8]]],[11,"from","","",515,[[]]],[11,"into","","",515,[[]]],[11,"to_owned","","",515,[[]]],[11,"clone_into","","",515,[[]]],[11,"borrow","","",515,[[]]],[11,"borrow_mut","","",515,[[]]],[11,"try_from","","",515,[[],["result",4]]],[11,"try_into","","",515,[[],["result",4]]],[11,"type_id","","",515,[[],["typeid",3]]],[11,"write","","",515,[[]]],[11,"vzip","","",515,[[]]],[11,"init","","",515,[[]]],[11,"deref","","",515,[[]]],[11,"deref_mut","","",515,[[]]],[11,"drop","","",515,[[]]],[11,"into_any_arc","","",515,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",515,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",515,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",515,[[],["any",8]]],[11,"as_any_mut","","",515,[[],["any",8]]],[11,"from","","",516,[[]]],[11,"into","","",516,[[]]],[11,"to_owned","","",516,[[]]],[11,"clone_into","","",516,[[]]],[11,"borrow","","",516,[[]]],[11,"borrow_mut","","",516,[[]]],[11,"try_from","","",516,[[],["result",4]]],[11,"try_into","","",516,[[],["result",4]]],[11,"type_id","","",516,[[],["typeid",3]]],[11,"write","","",516,[[]]],[11,"vzip","","",516,[[]]],[11,"init","","",516,[[]]],[11,"deref","","",516,[[]]],[11,"deref_mut","","",516,[[]]],[11,"drop","","",516,[[]]],[11,"into_any_arc","","",516,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",516,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",516,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",516,[[],["any",8]]],[11,"as_any_mut","","",516,[[],["any",8]]],[11,"from","","",517,[[]]],[11,"into","","",517,[[]]],[11,"to_owned","","",517,[[]]],[11,"clone_into","","",517,[[]]],[11,"borrow","","",517,[[]]],[11,"borrow_mut","","",517,[[]]],[11,"try_from","","",517,[[],["result",4]]],[11,"try_into","","",517,[[],["result",4]]],[11,"type_id","","",517,[[],["typeid",3]]],[11,"write","","",517,[[]]],[11,"vzip","","",517,[[]]],[11,"init","","",517,[[]]],[11,"deref","","",517,[[]]],[11,"deref_mut","","",517,[[]]],[11,"drop","","",517,[[]]],[11,"into_any_arc","","",517,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",517,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",517,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",517,[[],["any",8]]],[11,"as_any_mut","","",517,[[],["any",8]]],[11,"from","","",518,[[]]],[11,"into","","",518,[[]]],[11,"to_owned","","",518,[[]]],[11,"clone_into","","",518,[[]]],[11,"borrow","","",518,[[]]],[11,"borrow_mut","","",518,[[]]],[11,"try_from","","",518,[[],["result",4]]],[11,"try_into","","",518,[[],["result",4]]],[11,"type_id","","",518,[[],["typeid",3]]],[11,"write","","",518,[[]]],[11,"vzip","","",518,[[]]],[11,"init","","",518,[[]]],[11,"deref","","",518,[[]]],[11,"deref_mut","","",518,[[]]],[11,"drop","","",518,[[]]],[11,"into_any_arc","","",518,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",518,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",518,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",518,[[],["any",8]]],[11,"as_any_mut","","",518,[[],["any",8]]],[11,"from","","",519,[[]]],[11,"into","","",519,[[]]],[11,"to_owned","","",519,[[]]],[11,"clone_into","","",519,[[]]],[11,"borrow","","",519,[[]]],[11,"borrow_mut","","",519,[[]]],[11,"try_from","","",519,[[],["result",4]]],[11,"try_into","","",519,[[],["result",4]]],[11,"type_id","","",519,[[],["typeid",3]]],[11,"write","","",519,[[]]],[11,"vzip","","",519,[[]]],[11,"init","","",519,[[]]],[11,"deref","","",519,[[]]],[11,"deref_mut","","",519,[[]]],[11,"drop","","",519,[[]]],[11,"into_any_arc","","",519,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",519,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",519,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",519,[[],["any",8]]],[11,"as_any_mut","","",519,[[],["any",8]]],[11,"from","","",520,[[]]],[11,"into","","",520,[[]]],[11,"to_owned","","",520,[[]]],[11,"clone_into","","",520,[[]]],[11,"borrow","","",520,[[]]],[11,"borrow_mut","","",520,[[]]],[11,"try_from","","",520,[[],["result",4]]],[11,"try_into","","",520,[[],["result",4]]],[11,"type_id","","",520,[[],["typeid",3]]],[11,"write","","",520,[[]]],[11,"vzip","","",520,[[]]],[11,"init","","",520,[[]]],[11,"deref","","",520,[[]]],[11,"deref_mut","","",520,[[]]],[11,"drop","","",520,[[]]],[11,"into_any_arc","","",520,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",520,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",520,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",520,[[],["any",8]]],[11,"as_any_mut","","",520,[[],["any",8]]],[11,"from","smoldot::libp2p::multiaddr","",270,[[]]],[11,"into","","",270,[[]]],[11,"to_string","","",270,[[],["string",3]]],[11,"borrow","","",270,[[]]],[11,"borrow_mut","","",270,[[]]],[11,"try_from","","",270,[[],["result",4]]],[11,"try_into","","",270,[[],["result",4]]],[11,"type_id","","",270,[[],["typeid",3]]],[11,"vzip","","",270,[[]]],[11,"init","","",270,[[]]],[11,"deref","","",270,[[]]],[11,"deref_mut","","",270,[[]]],[11,"drop","","",270,[[]]],[11,"into_any_arc","","",270,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",270,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",270,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",270,[[],["any",8]]],[11,"as_any_mut","","",270,[[],["any",8]]],[11,"from","","",271,[[]]],[11,"into","","",271,[[]]],[11,"to_owned","","",271,[[]]],[11,"clone_into","","",271,[[]]],[11,"to_string","","",271,[[],["string",3]]],[11,"borrow","","",271,[[]]],[11,"borrow_mut","","",271,[[]]],[11,"try_from","","",271,[[],["result",4]]],[11,"try_into","","",271,[[],["result",4]]],[11,"type_id","","",271,[[],["typeid",3]]],[11,"vzip","","",271,[[]]],[11,"init","","",271,[[]]],[11,"deref","","",271,[[]]],[11,"deref_mut","","",271,[[]]],[11,"drop","","",271,[[]]],[11,"into_any_arc","","",271,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",271,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",271,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",271,[[],["any",8]]],[11,"as_any_mut","","",271,[[],["any",8]]],[11,"equivalent","","",271,[[]]],[11,"from","","",521,[[]]],[11,"into","","",521,[[]]],[11,"to_owned","","",521,[[]]],[11,"clone_into","","",521,[[]]],[11,"borrow","","",521,[[]]],[11,"borrow_mut","","",521,[[]]],[11,"try_from","","",521,[[],["result",4]]],[11,"try_into","","",521,[[],["result",4]]],[11,"type_id","","",521,[[],["typeid",3]]],[11,"vzip","","",521,[[]]],[11,"init","","",521,[[]]],[11,"deref","","",521,[[]]],[11,"deref_mut","","",521,[[]]],[11,"drop","","",521,[[]]],[11,"into_any_arc","","",521,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",521,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",521,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",521,[[],["any",8]]],[11,"as_any_mut","","",521,[[],["any",8]]],[11,"equivalent","","",521,[[]]],[11,"from","","",272,[[]]],[11,"into","","",272,[[]]],[11,"to_string","","",272,[[],["string",3]]],[11,"borrow","","",272,[[]]],[11,"borrow_mut","","",272,[[]]],[11,"try_from","","",272,[[],["result",4]]],[11,"try_into","","",272,[[],["result",4]]],[11,"type_id","","",272,[[],["typeid",3]]],[11,"vzip","","",272,[[]]],[11,"init","","",272,[[]]],[11,"deref","","",272,[[]]],[11,"deref_mut","","",272,[[]]],[11,"drop","","",272,[[]]],[11,"into_any_arc","","",272,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",272,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",272,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",272,[[],["any",8]]],[11,"as_any_mut","","",272,[[],["any",8]]],[11,"from","smoldot::libp2p::connection::established","",273,[[]]],[11,"into","","",273,[[]]],[11,"borrow","","",273,[[]]],[11,"borrow_mut","","",273,[[]]],[11,"try_from","","",273,[[],["result",4]]],[11,"try_into","","",273,[[],["result",4]]],[11,"type_id","","",273,[[],["typeid",3]]],[11,"vzip","","",273,[[]]],[11,"init","","",273,[[]]],[11,"deref","","",273,[[]]],[11,"deref_mut","","",273,[[]]],[11,"drop","","",273,[[]]],[11,"into_any_arc","","",273,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",273,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",273,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",273,[[],["any",8]]],[11,"as_any_mut","","",273,[[],["any",8]]],[11,"from","","",522,[[]]],[11,"into","","",522,[[]]],[11,"to_owned","","",522,[[]]],[11,"clone_into","","",522,[[]]],[11,"borrow","","",522,[[]]],[11,"borrow_mut","","",522,[[]]],[11,"try_from","","",522,[[],["result",4]]],[11,"try_into","","",522,[[],["result",4]]],[11,"type_id","","",522,[[],["typeid",3]]],[11,"get_hash","","",522,[[]]],[11,"vzip","","",522,[[]]],[11,"init","","",522,[[]]],[11,"deref","","",522,[[]]],[11,"deref_mut","","",522,[[]]],[11,"drop","","",522,[[]]],[11,"into_any_arc","","",522,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",522,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",522,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",522,[[],["any",8]]],[11,"as_any_mut","","",522,[[],["any",8]]],[11,"get_hash","","",522,[[]]],[11,"equivalent","","",522,[[]]],[11,"from","","",274,[[]]],[11,"into","","",274,[[]]],[11,"borrow","","",274,[[]]],[11,"borrow_mut","","",274,[[]]],[11,"try_from","","",274,[[],["result",4]]],[11,"try_into","","",274,[[],["result",4]]],[11,"type_id","","",274,[[],["typeid",3]]],[11,"vzip","","",274,[[]]],[11,"init","","",274,[[]]],[11,"deref","","",274,[[]]],[11,"deref_mut","","",274,[[]]],[11,"drop","","",274,[[]]],[11,"into_any_arc","","",274,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",274,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",274,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",274,[[],["any",8]]],[11,"as_any_mut","","",274,[[],["any",8]]],[11,"from","","",275,[[]]],[11,"into","","",275,[[]]],[11,"borrow","","",275,[[]]],[11,"borrow_mut","","",275,[[]]],[11,"try_from","","",275,[[],["result",4]]],[11,"try_into","","",275,[[],["result",4]]],[11,"type_id","","",275,[[],["typeid",3]]],[11,"vzip","","",275,[[]]],[11,"init","","",275,[[]]],[11,"deref","","",275,[[]]],[11,"deref_mut","","",275,[[]]],[11,"drop","","",275,[[]]],[11,"into_any_arc","","",275,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",275,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",275,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",275,[[],["any",8]]],[11,"as_any_mut","","",275,[[],["any",8]]],[11,"from","","",285,[[]]],[11,"into","","",285,[[]]],[11,"to_string","","",285,[[],["string",3]]],[11,"borrow","","",285,[[]]],[11,"borrow_mut","","",285,[[]]],[11,"try_from","","",285,[[],["result",4]]],[11,"try_into","","",285,[[],["result",4]]],[11,"type_id","","",285,[[],["typeid",3]]],[11,"vzip","","",285,[[]]],[11,"init","","",285,[[]]],[11,"deref","","",285,[[]]],[11,"deref_mut","","",285,[[]]],[11,"drop","","",285,[[]]],[11,"into_any_arc","","",285,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",285,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",285,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",285,[[],["any",8]]],[11,"as_any_mut","","",285,[[],["any",8]]],[11,"from","","",286,[[]]],[11,"into","","",286,[[]]],[11,"to_string","","",286,[[],["string",3]]],[11,"borrow","","",286,[[]]],[11,"borrow_mut","","",286,[[]]],[11,"try_from","","",286,[[],["result",4]]],[11,"try_into","","",286,[[],["result",4]]],[11,"type_id","","",286,[[],["typeid",3]]],[11,"vzip","","",286,[[]]],[11,"init","","",286,[[]]],[11,"deref","","",286,[[]]],[11,"deref_mut","","",286,[[]]],[11,"drop","","",286,[[]]],[11,"into_any_arc","","",286,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",286,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",286,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",286,[[],["any",8]]],[11,"as_any_mut","","",286,[[],["any",8]]],[11,"from","","",287,[[]]],[11,"into","","",287,[[]]],[11,"borrow","","",287,[[]]],[11,"borrow_mut","","",287,[[]]],[11,"try_from","","",287,[[],["result",4]]],[11,"try_into","","",287,[[],["result",4]]],[11,"type_id","","",287,[[],["typeid",3]]],[11,"vzip","","",287,[[]]],[11,"init","","",287,[[]]],[11,"deref","","",287,[[]]],[11,"deref_mut","","",287,[[]]],[11,"drop","","",287,[[]]],[11,"into_any_arc","","",287,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",287,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",287,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",287,[[],["any",8]]],[11,"as_any_mut","","",287,[[],["any",8]]],[11,"from","","",288,[[]]],[11,"into","","",288,[[]]],[11,"to_owned","","",288,[[]]],[11,"clone_into","","",288,[[]]],[11,"borrow","","",288,[[]]],[11,"borrow_mut","","",288,[[]]],[11,"try_from","","",288,[[],["result",4]]],[11,"try_into","","",288,[[],["result",4]]],[11,"type_id","","",288,[[],["typeid",3]]],[11,"vzip","","",288,[[]]],[11,"init","","",288,[[]]],[11,"deref","","",288,[[]]],[11,"deref_mut","","",288,[[]]],[11,"drop","","",288,[[]]],[11,"into_any_arc","","",288,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",288,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",288,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",288,[[],["any",8]]],[11,"as_any_mut","","",288,[[],["any",8]]],[11,"from","","",289,[[]]],[11,"into","","",289,[[]]],[11,"to_owned","","",289,[[]]],[11,"clone_into","","",289,[[]]],[11,"borrow","","",289,[[]]],[11,"borrow_mut","","",289,[[]]],[11,"try_from","","",289,[[],["result",4]]],[11,"try_into","","",289,[[],["result",4]]],[11,"type_id","","",289,[[],["typeid",3]]],[11,"vzip","","",289,[[]]],[11,"init","","",289,[[]]],[11,"deref","","",289,[[]]],[11,"deref_mut","","",289,[[]]],[11,"drop","","",289,[[]]],[11,"into_any_arc","","",289,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",289,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",289,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",289,[[],["any",8]]],[11,"as_any_mut","","",289,[[],["any",8]]],[11,"from","","",290,[[]]],[11,"into","","",290,[[]]],[11,"to_owned","","",290,[[]]],[11,"clone_into","","",290,[[]]],[11,"borrow","","",290,[[]]],[11,"borrow_mut","","",290,[[]]],[11,"try_from","","",290,[[],["result",4]]],[11,"try_into","","",290,[[],["result",4]]],[11,"type_id","","",290,[[],["typeid",3]]],[11,"vzip","","",290,[[]]],[11,"init","","",290,[[]]],[11,"deref","","",290,[[]]],[11,"deref_mut","","",290,[[]]],[11,"drop","","",290,[[]]],[11,"into_any_arc","","",290,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",290,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",290,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",290,[[],["any",8]]],[11,"as_any_mut","","",290,[[],["any",8]]],[11,"from","smoldot::libp2p::connection::handshake","",291,[[]]],[11,"into","","",291,[[]]],[11,"borrow","","",291,[[]]],[11,"borrow_mut","","",291,[[]]],[11,"try_from","","",291,[[],["result",4]]],[11,"try_into","","",291,[[],["result",4]]],[11,"type_id","","",291,[[],["typeid",3]]],[11,"vzip","","",291,[[]]],[11,"init","","",291,[[]]],[11,"deref","","",291,[[]]],[11,"deref_mut","","",291,[[]]],[11,"drop","","",291,[[]]],[11,"into_any_arc","","",291,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",291,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",291,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",291,[[],["any",8]]],[11,"as_any_mut","","",291,[[],["any",8]]],[11,"from","","",293,[[]]],[11,"into","","",293,[[]]],[11,"borrow","","",293,[[]]],[11,"borrow_mut","","",293,[[]]],[11,"try_from","","",293,[[],["result",4]]],[11,"try_into","","",293,[[],["result",4]]],[11,"type_id","","",293,[[],["typeid",3]]],[11,"vzip","","",293,[[]]],[11,"init","","",293,[[]]],[11,"deref","","",293,[[]]],[11,"deref_mut","","",293,[[]]],[11,"drop","","",293,[[]]],[11,"into_any_arc","","",293,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",293,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",293,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",293,[[],["any",8]]],[11,"as_any_mut","","",293,[[],["any",8]]],[11,"from","","",294,[[]]],[11,"into","","",294,[[]]],[11,"borrow","","",294,[[]]],[11,"borrow_mut","","",294,[[]]],[11,"try_from","","",294,[[],["result",4]]],[11,"try_into","","",294,[[],["result",4]]],[11,"type_id","","",294,[[],["typeid",3]]],[11,"vzip","","",294,[[]]],[11,"init","","",294,[[]]],[11,"deref","","",294,[[]]],[11,"deref_mut","","",294,[[]]],[11,"drop","","",294,[[]]],[11,"into_any_arc","","",294,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",294,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",294,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",294,[[],["any",8]]],[11,"as_any_mut","","",294,[[],["any",8]]],[11,"from","","",295,[[]]],[11,"into","","",295,[[]]],[11,"to_string","","",295,[[],["string",3]]],[11,"borrow","","",295,[[]]],[11,"borrow_mut","","",295,[[]]],[11,"try_from","","",295,[[],["result",4]]],[11,"try_into","","",295,[[],["result",4]]],[11,"type_id","","",295,[[],["typeid",3]]],[11,"vzip","","",295,[[]]],[11,"init","","",295,[[]]],[11,"deref","","",295,[[]]],[11,"deref_mut","","",295,[[]]],[11,"drop","","",295,[[]]],[11,"into_any_arc","","",295,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",295,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",295,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",295,[[],["any",8]]],[11,"as_any_mut","","",295,[[],["any",8]]],[11,"from","smoldot::libp2p::connection::multistream_select","",296,[[]]],[11,"into","","",296,[[]]],[11,"to_owned","","",296,[[]]],[11,"clone_into","","",296,[[]]],[11,"borrow","","",296,[[]]],[11,"borrow_mut","","",296,[[]]],[11,"try_from","","",296,[[],["result",4]]],[11,"try_into","","",296,[[],["result",4]]],[11,"type_id","","",296,[[],["typeid",3]]],[11,"vzip","","",296,[[]]],[11,"init","","",296,[[]]],[11,"deref","","",296,[[]]],[11,"deref_mut","","",296,[[]]],[11,"drop","","",296,[[]]],[11,"into_any_arc","","",296,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",296,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",296,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",296,[[],["any",8]]],[11,"as_any_mut","","",296,[[],["any",8]]],[11,"equivalent","","",296,[[]]],[11,"from","","",299,[[]]],[11,"into","","",299,[[]]],[11,"borrow","","",299,[[]]],[11,"borrow_mut","","",299,[[]]],[11,"try_from","","",299,[[],["result",4]]],[11,"try_into","","",299,[[],["result",4]]],[11,"type_id","","",299,[[],["typeid",3]]],[11,"vzip","","",299,[[]]],[11,"init","","",299,[[]]],[11,"deref","","",299,[[]]],[11,"deref_mut","","",299,[[]]],[11,"drop","","",299,[[]]],[11,"into_any_arc","","",299,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",299,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",299,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",299,[[],["any",8]]],[11,"as_any_mut","","",299,[[],["any",8]]],[11,"from","","",300,[[]]],[11,"into","","",300,[[]]],[11,"borrow","","",300,[[]]],[11,"borrow_mut","","",300,[[]]],[11,"try_from","","",300,[[],["result",4]]],[11,"try_into","","",300,[[],["result",4]]],[11,"type_id","","",300,[[],["typeid",3]]],[11,"vzip","","",300,[[]]],[11,"init","","",300,[[]]],[11,"deref","","",300,[[]]],[11,"deref_mut","","",300,[[]]],[11,"drop","","",300,[[]]],[11,"into_any_arc","","",300,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",300,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",300,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",300,[[],["any",8]]],[11,"as_any_mut","","",300,[[],["any",8]]],[11,"from","","",301,[[]]],[11,"into","","",301,[[]]],[11,"to_string","","",301,[[],["string",3]]],[11,"borrow","","",301,[[]]],[11,"borrow_mut","","",301,[[]]],[11,"try_from","","",301,[[],["result",4]]],[11,"try_into","","",301,[[],["result",4]]],[11,"type_id","","",301,[[],["typeid",3]]],[11,"vzip","","",301,[[]]],[11,"init","","",301,[[]]],[11,"deref","","",301,[[]]],[11,"deref_mut","","",301,[[]]],[11,"drop","","",301,[[]]],[11,"into_any_arc","","",301,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",301,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",301,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",301,[[],["any",8]]],[11,"as_any_mut","","",301,[[],["any",8]]],[11,"from","","",302,[[]]],[11,"into","","",302,[[]]],[11,"to_owned","","",302,[[]]],[11,"clone_into","","",302,[[]]],[11,"borrow","","",302,[[]]],[11,"borrow_mut","","",302,[[]]],[11,"try_from","","",302,[[],["result",4]]],[11,"try_into","","",302,[[],["result",4]]],[11,"type_id","","",302,[[],["typeid",3]]],[11,"vzip","","",302,[[]]],[11,"init","","",302,[[]]],[11,"deref","","",302,[[]]],[11,"deref_mut","","",302,[[]]],[11,"drop","","",302,[[]]],[11,"into_any_arc","","",302,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",302,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",302,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",302,[[],["any",8]]],[11,"as_any_mut","","",302,[[],["any",8]]],[11,"from","smoldot::libp2p::connection::noise","",303,[[]]],[11,"into","","",303,[[]]],[11,"borrow","","",303,[[]]],[11,"borrow_mut","","",303,[[]]],[11,"try_from","","",303,[[],["result",4]]],[11,"try_into","","",303,[[],["result",4]]],[11,"type_id","","",303,[[],["typeid",3]]],[11,"vzip","","",303,[[]]],[11,"init","","",303,[[]]],[11,"deref","","",303,[[]]],[11,"deref_mut","","",303,[[]]],[11,"drop","","",303,[[]]],[11,"into_any_arc","","",303,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",303,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",303,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",303,[[],["any",8]]],[11,"as_any_mut","","",303,[[],["any",8]]],[11,"from","","",304,[[]]],[11,"into","","",304,[[]]],[11,"borrow","","",304,[[]]],[11,"borrow_mut","","",304,[[]]],[11,"try_from","","",304,[[],["result",4]]],[11,"try_into","","",304,[[],["result",4]]],[11,"type_id","","",304,[[],["typeid",3]]],[11,"vzip","","",304,[[]]],[11,"init","","",304,[[]]],[11,"deref","","",304,[[]]],[11,"deref_mut","","",304,[[]]],[11,"drop","","",304,[[]]],[11,"into_any_arc","","",304,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",304,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",304,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",304,[[],["any",8]]],[11,"as_any_mut","","",304,[[],["any",8]]],[11,"from","","",305,[[]]],[11,"into","","",305,[[]]],[11,"borrow","","",305,[[]]],[11,"borrow_mut","","",305,[[]]],[11,"try_from","","",305,[[],["result",4]]],[11,"try_into","","",305,[[],["result",4]]],[11,"type_id","","",305,[[],["typeid",3]]],[11,"vzip","","",305,[[]]],[11,"init","","",305,[[]]],[11,"deref","","",305,[[]]],[11,"deref_mut","","",305,[[]]],[11,"drop","","",305,[[]]],[11,"into_any_arc","","",305,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",305,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",305,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",305,[[],["any",8]]],[11,"as_any_mut","","",305,[[],["any",8]]],[11,"from","","",306,[[]]],[11,"into","","",306,[[]]],[11,"borrow","","",306,[[]]],[11,"borrow_mut","","",306,[[]]],[11,"try_from","","",306,[[],["result",4]]],[11,"try_into","","",306,[[],["result",4]]],[11,"type_id","","",306,[[],["typeid",3]]],[11,"vzip","","",306,[[]]],[11,"init","","",306,[[]]],[11,"deref","","",306,[[]]],[11,"deref_mut","","",306,[[]]],[11,"drop","","",306,[[]]],[11,"into_any_arc","","",306,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",306,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",306,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",306,[[],["any",8]]],[11,"as_any_mut","","",306,[[],["any",8]]],[11,"from","","",308,[[]]],[11,"into","","",308,[[]]],[11,"borrow","","",308,[[]]],[11,"borrow_mut","","",308,[[]]],[11,"try_from","","",308,[[],["result",4]]],[11,"try_into","","",308,[[],["result",4]]],[11,"type_id","","",308,[[],["typeid",3]]],[11,"vzip","","",308,[[]]],[11,"init","","",308,[[]]],[11,"deref","","",308,[[]]],[11,"deref_mut","","",308,[[]]],[11,"drop","","",308,[[]]],[11,"into_any_arc","","",308,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",308,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",308,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",308,[[],["any",8]]],[11,"as_any_mut","","",308,[[],["any",8]]],[11,"from","","",309,[[]]],[11,"into","","",309,[[]]],[11,"to_string","","",309,[[],["string",3]]],[11,"borrow","","",309,[[]]],[11,"borrow_mut","","",309,[[]]],[11,"try_from","","",309,[[],["result",4]]],[11,"try_into","","",309,[[],["result",4]]],[11,"type_id","","",309,[[],["typeid",3]]],[11,"vzip","","",309,[[]]],[11,"init","","",309,[[]]],[11,"deref","","",309,[[]]],[11,"deref_mut","","",309,[[]]],[11,"drop","","",309,[[]]],[11,"into_any_arc","","",309,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",309,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",309,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",309,[[],["any",8]]],[11,"as_any_mut","","",309,[[],["any",8]]],[11,"from","","",523,[[]]],[11,"into","","",523,[[]]],[11,"to_string","","",523,[[],["string",3]]],[11,"borrow","","",523,[[]]],[11,"borrow_mut","","",523,[[]]],[11,"try_from","","",523,[[],["result",4]]],[11,"try_into","","",523,[[],["result",4]]],[11,"type_id","","",523,[[],["typeid",3]]],[11,"vzip","","",523,[[]]],[11,"init","","",523,[[]]],[11,"deref","","",523,[[]]],[11,"deref_mut","","",523,[[]]],[11,"drop","","",523,[[]]],[11,"into_any_arc","","",523,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",523,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",523,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",523,[[],["any",8]]],[11,"as_any_mut","","",523,[[],["any",8]]],[11,"from","","",524,[[]]],[11,"into","","",524,[[]]],[11,"to_string","","",524,[[],["string",3]]],[11,"borrow","","",524,[[]]],[11,"borrow_mut","","",524,[[]]],[11,"try_from","","",524,[[],["result",4]]],[11,"try_into","","",524,[[],["result",4]]],[11,"type_id","","",524,[[],["typeid",3]]],[11,"vzip","","",524,[[]]],[11,"init","","",524,[[]]],[11,"deref","","",524,[[]]],[11,"deref_mut","","",524,[[]]],[11,"drop","","",524,[[]]],[11,"into_any_arc","","",524,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",524,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",524,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",524,[[],["any",8]]],[11,"as_any_mut","","",524,[[],["any",8]]],[11,"from","smoldot::libp2p::connection::yamux","",310,[[]]],[11,"into","","",310,[[]]],[11,"borrow","","",310,[[]]],[11,"borrow_mut","","",310,[[]]],[11,"try_from","","",310,[[],["result",4]]],[11,"try_into","","",310,[[],["result",4]]],[11,"type_id","","",310,[[],["typeid",3]]],[11,"vzip","","",310,[[]]],[11,"init","","",310,[[]]],[11,"deref","","",310,[[]]],[11,"deref_mut","","",310,[[]]],[11,"drop","","",310,[[]]],[11,"into_any_arc","","",310,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",310,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",310,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",310,[[],["any",8]]],[11,"as_any_mut","","",310,[[],["any",8]]],[11,"from","","",311,[[]]],[11,"into","","",311,[[]]],[11,"borrow","","",311,[[]]],[11,"borrow_mut","","",311,[[]]],[11,"try_from","","",311,[[],["result",4]]],[11,"try_into","","",311,[[],["result",4]]],[11,"type_id","","",311,[[],["typeid",3]]],[11,"vzip","","",311,[[]]],[11,"init","","",311,[[]]],[11,"deref","","",311,[[]]],[11,"deref_mut","","",311,[[]]],[11,"drop","","",311,[[]]],[11,"into_any_arc","","",311,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",311,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",311,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",311,[[],["any",8]]],[11,"as_any_mut","","",311,[[],["any",8]]],[11,"from","","",312,[[]]],[11,"into","","",312,[[]]],[11,"borrow","","",312,[[]]],[11,"borrow_mut","","",312,[[]]],[11,"try_from","","",312,[[],["result",4]]],[11,"try_into","","",312,[[],["result",4]]],[11,"type_id","","",312,[[],["typeid",3]]],[11,"vzip","","",312,[[]]],[11,"init","","",312,[[]]],[11,"deref","","",312,[[]]],[11,"deref_mut","","",312,[[]]],[11,"drop","","",312,[[]]],[11,"into_any_arc","","",312,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",312,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",312,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",312,[[],["any",8]]],[11,"as_any_mut","","",312,[[],["any",8]]],[11,"from","","",313,[[]]],[11,"into","","",313,[[]]],[11,"borrow","","",313,[[]]],[11,"borrow_mut","","",313,[[]]],[11,"try_from","","",313,[[],["result",4]]],[11,"try_into","","",313,[[],["result",4]]],[11,"type_id","","",313,[[],["typeid",3]]],[11,"vzip","","",313,[[]]],[11,"init","","",313,[[]]],[11,"deref","","",313,[[]]],[11,"deref_mut","","",313,[[]]],[11,"drop","","",313,[[]]],[11,"into_any_arc","","",313,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",313,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",313,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",313,[[],["any",8]]],[11,"as_any_mut","","",313,[[],["any",8]]],[11,"from","","",525,[[]]],[11,"into","","",525,[[]]],[11,"to_owned","","",525,[[]]],[11,"clone_into","","",525,[[]]],[11,"borrow","","",525,[[]]],[11,"borrow_mut","","",525,[[]]],[11,"try_from","","",525,[[],["result",4]]],[11,"try_into","","",525,[[],["result",4]]],[11,"type_id","","",525,[[],["typeid",3]]],[11,"get_hash","","",525,[[]]],[11,"vzip","","",525,[[]]],[11,"init","","",525,[[]]],[11,"deref","","",525,[[]]],[11,"deref_mut","","",525,[[]]],[11,"drop","","",525,[[]]],[11,"into_any_arc","","",525,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",525,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",525,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",525,[[],["any",8]]],[11,"as_any_mut","","",525,[[],["any",8]]],[11,"get_hash","","",525,[[]]],[11,"equivalent","","",525,[[]]],[11,"from","","",314,[[]]],[11,"into","","",314,[[]]],[11,"borrow","","",314,[[]]],[11,"borrow_mut","","",314,[[]]],[11,"try_from","","",314,[[],["result",4]]],[11,"try_into","","",314,[[],["result",4]]],[11,"type_id","","",314,[[],["typeid",3]]],[11,"vzip","","",314,[[]]],[11,"init","","",314,[[]]],[11,"deref","","",314,[[]]],[11,"deref_mut","","",314,[[]]],[11,"drop","","",314,[[]]],[11,"into_any_arc","","",314,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",314,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",314,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",314,[[],["any",8]]],[11,"as_any_mut","","",314,[[],["any",8]]],[11,"from","","",315,[[]]],[11,"into","","",315,[[]]],[11,"borrow","","",315,[[]]],[11,"borrow_mut","","",315,[[]]],[11,"try_from","","",315,[[],["result",4]]],[11,"try_into","","",315,[[],["result",4]]],[11,"type_id","","",315,[[],["typeid",3]]],[11,"vzip","","",315,[[]]],[11,"init","","",315,[[]]],[11,"deref","","",315,[[]]],[11,"deref_mut","","",315,[[]]],[11,"drop","","",315,[[]]],[11,"into_any_arc","","",315,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",315,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",315,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",315,[[],["any",8]]],[11,"as_any_mut","","",315,[[],["any",8]]],[11,"from","","",319,[[]]],[11,"into","","",319,[[]]],[11,"to_string","","",319,[[],["string",3]]],[11,"borrow","","",319,[[]]],[11,"borrow_mut","","",319,[[]]],[11,"try_from","","",319,[[],["result",4]]],[11,"try_into","","",319,[[],["result",4]]],[11,"type_id","","",319,[[],["typeid",3]]],[11,"vzip","","",319,[[]]],[11,"init","","",319,[[]]],[11,"deref","","",319,[[]]],[11,"deref_mut","","",319,[[]]],[11,"drop","","",319,[[]]],[11,"into_any_arc","","",319,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",319,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",319,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",319,[[],["any",8]]],[11,"as_any_mut","","",319,[[],["any",8]]],[11,"from","smoldot::libp2p::discovery::kademlia","",320,[[]]],[11,"into","","",320,[[]]],[11,"borrow","","",320,[[]]],[11,"borrow_mut","","",320,[[]]],[11,"try_from","","",320,[[],["result",4]]],[11,"try_into","","",320,[[],["result",4]]],[11,"type_id","","",320,[[],["typeid",3]]],[11,"vzip","","",320,[[]]],[11,"init","","",320,[[]]],[11,"deref","","",320,[[]]],[11,"deref_mut","","",320,[[]]],[11,"drop","","",320,[[]]],[11,"into_any_arc","","",320,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",320,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",320,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",320,[[],["any",8]]],[11,"as_any_mut","","",320,[[],["any",8]]],[11,"from","","",321,[[]]],[11,"into","","",321,[[]]],[11,"to_string","","",321,[[],["string",3]]],[11,"borrow","","",321,[[]]],[11,"borrow_mut","","",321,[[]]],[11,"try_from","","",321,[[],["result",4]]],[11,"try_into","","",321,[[],["result",4]]],[11,"type_id","","",321,[[],["typeid",3]]],[11,"vzip","","",321,[[]]],[11,"init","","",321,[[]]],[11,"deref","","",321,[[]]],[11,"deref_mut","","",321,[[]]],[11,"drop","","",321,[[]]],[11,"into_any_arc","","",321,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",321,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",321,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",321,[[],["any",8]]],[11,"as_any_mut","","",321,[[],["any",8]]],[11,"from","","",526,[[]]],[11,"into","","",526,[[]]],[11,"to_string","","",526,[[],["string",3]]],[11,"borrow","","",526,[[]]],[11,"borrow_mut","","",526,[[]]],[11,"try_from","","",526,[[],["result",4]]],[11,"try_into","","",526,[[],["result",4]]],[11,"type_id","","",526,[[],["typeid",3]]],[11,"vzip","","",526,[[]]],[11,"init","","",526,[[]]],[11,"deref","","",526,[[]]],[11,"deref_mut","","",526,[[]]],[11,"drop","","",526,[[]]],[11,"into_any_arc","","",526,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",526,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",526,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",526,[[],["any",8]]],[11,"as_any_mut","","",526,[[],["any",8]]],[11,"from","smoldot::libp2p::peer_id","",322,[[]]],[11,"into","","",322,[[]]],[11,"to_owned","","",322,[[]]],[11,"clone_into","","",322,[[]]],[11,"borrow","","",322,[[]]],[11,"borrow_mut","","",322,[[]]],[11,"try_from","","",322,[[],["result",4]]],[11,"try_into","","",322,[[],["result",4]]],[11,"type_id","","",322,[[],["typeid",3]]],[11,"vzip","","",322,[[]]],[11,"init","","",322,[[]]],[11,"deref","","",322,[[]]],[11,"deref_mut","","",322,[[]]],[11,"drop","","",322,[[]]],[11,"into_any_arc","","",322,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",322,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",322,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",322,[[],["any",8]]],[11,"as_any_mut","","",322,[[],["any",8]]],[11,"equivalent","","",322,[[]]],[11,"from","","",323,[[]]],[11,"into","","",323,[[]]],[11,"to_string","","",323,[[],["string",3]]],[11,"borrow","","",323,[[]]],[11,"borrow_mut","","",323,[[]]],[11,"try_from","","",323,[[],["result",4]]],[11,"try_into","","",323,[[],["result",4]]],[11,"type_id","","",323,[[],["typeid",3]]],[11,"vzip","","",323,[[]]],[11,"init","","",323,[[]]],[11,"deref","","",323,[[]]],[11,"deref_mut","","",323,[[]]],[11,"drop","","",323,[[]]],[11,"into_any_arc","","",323,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",323,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",323,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",323,[[],["any",8]]],[11,"as_any_mut","","",323,[[],["any",8]]],[11,"from","","",324,[[]]],[11,"into","","",324,[[]]],[11,"to_owned","","",324,[[]]],[11,"clone_into","","",324,[[]]],[11,"to_string","","",324,[[],["string",3]]],[11,"borrow","","",324,[[]]],[11,"borrow_mut","","",324,[[]]],[11,"try_from","","",324,[[],["result",4]]],[11,"try_into","","",324,[[],["result",4]]],[11,"type_id","","",324,[[],["typeid",3]]],[11,"get_hash","","",324,[[]]],[11,"as_byte_slice","","",324,[[]]],[11,"as_slice_of","","",324,[[],[["error",4],["result",4]]]],[11,"vzip","","",324,[[]]],[11,"init","","",324,[[]]],[11,"deref","","",324,[[]]],[11,"deref_mut","","",324,[[]]],[11,"drop","","",324,[[]]],[11,"into_any_arc","","",324,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",324,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",324,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",324,[[],["any",8]]],[11,"as_any_mut","","",324,[[],["any",8]]],[11,"get_hash","","",324,[[]]],[11,"as_bits","","",324,[[],["bitslice",3]]],[11,"encode_hex","","",324,[[]]],[11,"encode_hex_upper","","",324,[[]]],[11,"equivalent","","",324,[[]]],[11,"from","","",325,[[]]],[11,"into","","",325,[[]]],[11,"to_string","","",325,[[],["string",3]]],[11,"borrow","","",325,[[]]],[11,"borrow_mut","","",325,[[]]],[11,"try_from","","",325,[[],["result",4]]],[11,"try_into","","",325,[[],["result",4]]],[11,"type_id","","",325,[[],["typeid",3]]],[11,"vzip","","",325,[[]]],[11,"init","","",325,[[]]],[11,"deref","","",325,[[]]],[11,"deref_mut","","",325,[[]]],[11,"drop","","",325,[[]]],[11,"into_any_arc","","",325,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",325,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",325,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",325,[[],["any",8]]],[11,"as_any_mut","","",325,[[],["any",8]]],[11,"from","","",326,[[]]],[11,"into","","",326,[[]]],[11,"to_string","","",326,[[],["string",3]]],[11,"borrow","","",326,[[]]],[11,"borrow_mut","","",326,[[]]],[11,"try_from","","",326,[[],["result",4]]],[11,"try_into","","",326,[[],["result",4]]],[11,"type_id","","",326,[[],["typeid",3]]],[11,"vzip","","",326,[[]]],[11,"init","","",326,[[]]],[11,"deref","","",326,[[]]],[11,"deref_mut","","",326,[[]]],[11,"drop","","",326,[[]]],[11,"into_any_arc","","",326,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",326,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",326,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",326,[[],["any",8]]],[11,"as_any_mut","","",326,[[],["any",8]]],[11,"from","","",327,[[]]],[11,"into","","",327,[[]]],[11,"to_string","","",327,[[],["string",3]]],[11,"borrow","","",327,[[]]],[11,"borrow_mut","","",327,[[]]],[11,"try_from","","",327,[[],["result",4]]],[11,"try_into","","",327,[[],["result",4]]],[11,"type_id","","",327,[[],["typeid",3]]],[11,"vzip","","",327,[[]]],[11,"init","","",327,[[]]],[11,"deref","","",327,[[]]],[11,"deref_mut","","",327,[[]]],[11,"drop","","",327,[[]]],[11,"into_any_arc","","",327,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",327,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",327,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",327,[[],["any",8]]],[11,"as_any_mut","","",327,[[],["any",8]]],[11,"from","","",527,[[]]],[11,"into","","",527,[[]]],[11,"to_string","","",527,[[],["string",3]]],[11,"borrow","","",527,[[]]],[11,"borrow_mut","","",527,[[]]],[11,"try_from","","",527,[[],["result",4]]],[11,"try_into","","",527,[[],["result",4]]],[11,"type_id","","",527,[[],["typeid",3]]],[11,"vzip","","",527,[[]]],[11,"init","","",527,[[]]],[11,"deref","","",527,[[]]],[11,"deref_mut","","",527,[[]]],[11,"drop","","",527,[[]]],[11,"into_any_arc","","",527,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",527,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",527,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",527,[[],["any",8]]],[11,"as_any_mut","","",527,[[],["any",8]]],[11,"from","smoldot::libp2p::peerset","",328,[[]]],[11,"into","","",328,[[]]],[11,"borrow","","",328,[[]]],[11,"borrow_mut","","",328,[[]]],[11,"try_from","","",328,[[],["result",4]]],[11,"try_into","","",328,[[],["result",4]]],[11,"type_id","","",328,[[],["typeid",3]]],[11,"vzip","","",328,[[]]],[11,"init","","",328,[[]]],[11,"deref","","",328,[[]]],[11,"deref_mut","","",328,[[]]],[11,"drop","","",328,[[]]],[11,"into_any_arc","","",328,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",328,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",328,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",328,[[],["any",8]]],[11,"as_any_mut","","",328,[[],["any",8]]],[11,"from","","",330,[[]]],[11,"into","","",330,[[]]],[11,"borrow","","",330,[[]]],[11,"borrow_mut","","",330,[[]]],[11,"try_from","","",330,[[],["result",4]]],[11,"try_into","","",330,[[],["result",4]]],[11,"type_id","","",330,[[],["typeid",3]]],[11,"vzip","","",330,[[]]],[11,"init","","",330,[[]]],[11,"deref","","",330,[[]]],[11,"deref_mut","","",330,[[]]],[11,"drop","","",330,[[]]],[11,"into_any_arc","","",330,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",330,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",330,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",330,[[],["any",8]]],[11,"as_any_mut","","",330,[[],["any",8]]],[11,"from","","",329,[[]]],[11,"into","","",329,[[]]],[11,"to_owned","","",329,[[]]],[11,"clone_into","","",329,[[]]],[11,"borrow","","",329,[[]]],[11,"borrow_mut","","",329,[[]]],[11,"try_from","","",329,[[],["result",4]]],[11,"try_into","","",329,[[],["result",4]]],[11,"type_id","","",329,[[],["typeid",3]]],[11,"get_hash","","",329,[[]]],[11,"vzip","","",329,[[]]],[11,"init","","",329,[[]]],[11,"deref","","",329,[[]]],[11,"deref_mut","","",329,[[]]],[11,"drop","","",329,[[]]],[11,"into_any_arc","","",329,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",329,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",329,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",329,[[],["any",8]]],[11,"as_any_mut","","",329,[[],["any",8]]],[11,"get_hash","","",329,[[]]],[11,"equivalent","","",329,[[]]],[11,"from","","",331,[[]]],[11,"into","","",331,[[]]],[11,"borrow","","",331,[[]]],[11,"borrow_mut","","",331,[[]]],[11,"try_from","","",331,[[],["result",4]]],[11,"try_into","","",331,[[],["result",4]]],[11,"type_id","","",331,[[],["typeid",3]]],[11,"vzip","","",331,[[]]],[11,"init","","",331,[[]]],[11,"deref","","",331,[[]]],[11,"deref_mut","","",331,[[]]],[11,"drop","","",331,[[]]],[11,"into_any_arc","","",331,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",331,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",331,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",331,[[],["any",8]]],[11,"as_any_mut","","",331,[[],["any",8]]],[11,"from","","",528,[[]]],[11,"into","","",528,[[]]],[11,"to_owned","","",528,[[]]],[11,"clone_into","","",528,[[]]],[11,"borrow","","",528,[[]]],[11,"borrow_mut","","",528,[[]]],[11,"try_from","","",528,[[],["result",4]]],[11,"try_into","","",528,[[],["result",4]]],[11,"type_id","","",528,[[],["typeid",3]]],[11,"get_hash","","",528,[[]]],[11,"vzip","","",528,[[]]],[11,"init","","",528,[[]]],[11,"deref","","",528,[[]]],[11,"deref_mut","","",528,[[]]],[11,"drop","","",528,[[]]],[11,"into_any_arc","","",528,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",528,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",528,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",528,[[],["any",8]]],[11,"as_any_mut","","",528,[[],["any",8]]],[11,"get_hash","","",528,[[]]],[11,"equivalent","","",528,[[]]],[11,"from","","",332,[[]]],[11,"into","","",332,[[]]],[11,"borrow","","",332,[[]]],[11,"borrow_mut","","",332,[[]]],[11,"try_from","","",332,[[],["result",4]]],[11,"try_into","","",332,[[],["result",4]]],[11,"type_id","","",332,[[],["typeid",3]]],[11,"vzip","","",332,[[]]],[11,"init","","",332,[[]]],[11,"deref","","",332,[[]]],[11,"deref_mut","","",332,[[]]],[11,"drop","","",332,[[]]],[11,"into_any_arc","","",332,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",332,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",332,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",332,[[],["any",8]]],[11,"as_any_mut","","",332,[[],["any",8]]],[11,"from","","",333,[[]]],[11,"into","","",333,[[]]],[11,"borrow","","",333,[[]]],[11,"borrow_mut","","",333,[[]]],[11,"try_from","","",333,[[],["result",4]]],[11,"try_into","","",333,[[],["result",4]]],[11,"type_id","","",333,[[],["typeid",3]]],[11,"vzip","","",333,[[]]],[11,"init","","",333,[[]]],[11,"deref","","",333,[[]]],[11,"deref_mut","","",333,[[]]],[11,"drop","","",333,[[]]],[11,"into_any_arc","","",333,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",333,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",333,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",333,[[],["any",8]]],[11,"as_any_mut","","",333,[[],["any",8]]],[11,"from","","",334,[[]]],[11,"into","","",334,[[]]],[11,"borrow","","",334,[[]]],[11,"borrow_mut","","",334,[[]]],[11,"try_from","","",334,[[],["result",4]]],[11,"try_into","","",334,[[],["result",4]]],[11,"type_id","","",334,[[],["typeid",3]]],[11,"vzip","","",334,[[]]],[11,"init","","",334,[[]]],[11,"deref","","",334,[[]]],[11,"deref_mut","","",334,[[]]],[11,"drop","","",334,[[]]],[11,"into_any_arc","","",334,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",334,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",334,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",334,[[],["any",8]]],[11,"as_any_mut","","",334,[[],["any",8]]],[11,"from","","",335,[[]]],[11,"into","","",335,[[]]],[11,"borrow","","",335,[[]]],[11,"borrow_mut","","",335,[[]]],[11,"try_from","","",335,[[],["result",4]]],[11,"try_into","","",335,[[],["result",4]]],[11,"type_id","","",335,[[],["typeid",3]]],[11,"vzip","","",335,[[]]],[11,"init","","",335,[[]]],[11,"deref","","",335,[[]]],[11,"deref_mut","","",335,[[]]],[11,"drop","","",335,[[]]],[11,"into_any_arc","","",335,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",335,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",335,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",335,[[],["any",8]]],[11,"as_any_mut","","",335,[[],["any",8]]],[11,"from","","",336,[[]]],[11,"into","","",336,[[]]],[11,"borrow","","",336,[[]]],[11,"borrow_mut","","",336,[[]]],[11,"try_from","","",336,[[],["result",4]]],[11,"try_into","","",336,[[],["result",4]]],[11,"type_id","","",336,[[],["typeid",3]]],[11,"vzip","","",336,[[]]],[11,"init","","",336,[[]]],[11,"deref","","",336,[[]]],[11,"deref_mut","","",336,[[]]],[11,"drop","","",336,[[]]],[11,"into_any_arc","","",336,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",336,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",336,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",336,[[],["any",8]]],[11,"as_any_mut","","",336,[[],["any",8]]],[11,"from","smoldot::libp2p","",337,[[]]],[11,"into","","",337,[[]]],[11,"borrow","","",337,[[]]],[11,"borrow_mut","","",337,[[]]],[11,"try_from","","",337,[[],["result",4]]],[11,"try_into","","",337,[[],["result",4]]],[11,"type_id","","",337,[[],["typeid",3]]],[11,"vzip","","",337,[[]]],[11,"init","","",337,[[]]],[11,"deref","","",337,[[]]],[11,"deref_mut","","",337,[[]]],[11,"drop","","",337,[[]]],[11,"into_any_arc","","",337,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",337,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",337,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",337,[[],["any",8]]],[11,"as_any_mut","","",337,[[],["any",8]]],[11,"from","","",338,[[]]],[11,"into","","",338,[[]]],[11,"borrow","","",338,[[]]],[11,"borrow_mut","","",338,[[]]],[11,"try_from","","",338,[[],["result",4]]],[11,"try_into","","",338,[[],["result",4]]],[11,"type_id","","",338,[[],["typeid",3]]],[11,"vzip","","",338,[[]]],[11,"init","","",338,[[]]],[11,"deref","","",338,[[]]],[11,"deref_mut","","",338,[[]]],[11,"drop","","",338,[[]]],[11,"into_any_arc","","",338,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",338,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",338,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",338,[[],["any",8]]],[11,"as_any_mut","","",338,[[],["any",8]]],[11,"from","","",529,[[]]],[11,"into","","",529,[[]]],[11,"to_owned","","",529,[[]]],[11,"clone_into","","",529,[[]]],[11,"borrow","","",529,[[]]],[11,"borrow_mut","","",529,[[]]],[11,"try_from","","",529,[[],["result",4]]],[11,"try_into","","",529,[[],["result",4]]],[11,"type_id","","",529,[[],["typeid",3]]],[11,"get_hash","","",529,[[]]],[11,"vzip","","",529,[[]]],[11,"init","","",529,[[]]],[11,"deref","","",529,[[]]],[11,"deref_mut","","",529,[[]]],[11,"drop","","",529,[[]]],[11,"into_any_arc","","",529,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",529,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",529,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",529,[[],["any",8]]],[11,"as_any_mut","","",529,[[],["any",8]]],[11,"get_hash","","",529,[[]]],[11,"equivalent","","",529,[[]]],[11,"from","","",530,[[]]],[11,"into","","",530,[[]]],[11,"to_owned","","",530,[[]]],[11,"clone_into","","",530,[[]]],[11,"borrow","","",530,[[]]],[11,"borrow_mut","","",530,[[]]],[11,"try_from","","",530,[[],["result",4]]],[11,"try_into","","",530,[[],["result",4]]],[11,"type_id","","",530,[[],["typeid",3]]],[11,"get_hash","","",530,[[]]],[11,"vzip","","",530,[[]]],[11,"init","","",530,[[]]],[11,"deref","","",530,[[]]],[11,"deref_mut","","",530,[[]]],[11,"drop","","",530,[[]]],[11,"into_any_arc","","",530,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",530,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",530,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",530,[[],["any",8]]],[11,"as_any_mut","","",530,[[],["any",8]]],[11,"get_hash","","",530,[[]]],[11,"equivalent","","",530,[[]]],[11,"from","","",339,[[]]],[11,"into","","",339,[[]]],[11,"borrow","","",339,[[]]],[11,"borrow_mut","","",339,[[]]],[11,"try_from","","",339,[[],["result",4]]],[11,"try_into","","",339,[[],["result",4]]],[11,"type_id","","",339,[[],["typeid",3]]],[11,"vzip","","",339,[[]]],[11,"init","","",339,[[]]],[11,"deref","","",339,[[]]],[11,"deref_mut","","",339,[[]]],[11,"drop","","",339,[[]]],[11,"into_any_arc","","",339,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",339,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",339,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",339,[[],["any",8]]],[11,"as_any_mut","","",339,[[],["any",8]]],[11,"from","","",340,[[]]],[11,"into","","",340,[[]]],[11,"borrow","","",340,[[]]],[11,"borrow_mut","","",340,[[]]],[11,"try_from","","",340,[[],["result",4]]],[11,"try_into","","",340,[[],["result",4]]],[11,"type_id","","",340,[[],["typeid",3]]],[11,"vzip","","",340,[[]]],[11,"init","","",340,[[]]],[11,"deref","","",340,[[]]],[11,"deref_mut","","",340,[[]]],[11,"drop","","",340,[[]]],[11,"into_any_arc","","",340,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",340,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",340,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",340,[[],["any",8]]],[11,"as_any_mut","","",340,[[],["any",8]]],[11,"from","","",341,[[]]],[11,"into","","",341,[[]]],[11,"borrow","","",341,[[]]],[11,"borrow_mut","","",341,[[]]],[11,"try_from","","",341,[[],["result",4]]],[11,"try_into","","",341,[[],["result",4]]],[11,"type_id","","",341,[[],["typeid",3]]],[11,"vzip","","",341,[[]]],[11,"init","","",341,[[]]],[11,"deref","","",341,[[]]],[11,"deref_mut","","",341,[[]]],[11,"drop","","",341,[[]]],[11,"into_any_arc","","",341,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",341,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",341,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",341,[[],["any",8]]],[11,"as_any_mut","","",341,[[],["any",8]]],[11,"from","","",348,[[]]],[11,"into","","",348,[[]]],[11,"borrow","","",348,[[]]],[11,"borrow_mut","","",348,[[]]],[11,"try_from","","",348,[[],["result",4]]],[11,"try_into","","",348,[[],["result",4]]],[11,"type_id","","",348,[[],["typeid",3]]],[11,"vzip","","",348,[[]]],[11,"init","","",348,[[]]],[11,"deref","","",348,[[]]],[11,"deref_mut","","",348,[[]]],[11,"drop","","",348,[[]]],[11,"into_any_arc","","",348,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",348,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",348,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",348,[[],["any",8]]],[11,"as_any_mut","","",348,[[],["any",8]]],[11,"from","","",531,[[]]],[11,"into","","",531,[[]]],[11,"borrow","","",531,[[]]],[11,"borrow_mut","","",531,[[]]],[11,"try_from","","",531,[[],["result",4]]],[11,"try_into","","",531,[[],["result",4]]],[11,"type_id","","",531,[[],["typeid",3]]],[11,"into_future","","",531,[[]]],[11,"vzip","","",531,[[]]],[11,"init","","",531,[[]]],[11,"deref","","",531,[[]]],[11,"deref_mut","","",531,[[]]],[11,"drop","","",531,[[]]],[11,"into_any_arc","","",531,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",531,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",531,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",531,[[],["any",8]]],[11,"as_any_mut","","",531,[[],["any",8]]],[11,"from","","",349,[[]]],[11,"into","","",349,[[]]],[11,"to_string","","",349,[[],["string",3]]],[11,"borrow","","",349,[[]]],[11,"borrow_mut","","",349,[[]]],[11,"try_from","","",349,[[],["result",4]]],[11,"try_into","","",349,[[],["result",4]]],[11,"type_id","","",349,[[],["typeid",3]]],[11,"vzip","","",349,[[]]],[11,"init","","",349,[[]]],[11,"deref","","",349,[[]]],[11,"deref_mut","","",349,[[]]],[11,"drop","","",349,[[]]],[11,"into_any_arc","","",349,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",349,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",349,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",349,[[],["any",8]]],[11,"as_any_mut","","",349,[[],["any",8]]],[11,"from","","",350,[[]]],[11,"into","","",350,[[]]],[11,"borrow","","",350,[[]]],[11,"borrow_mut","","",350,[[]]],[11,"try_from","","",350,[[],["result",4]]],[11,"try_into","","",350,[[],["result",4]]],[11,"type_id","","",350,[[],["typeid",3]]],[11,"vzip","","",350,[[]]],[11,"init","","",350,[[]]],[11,"deref","","",350,[[]]],[11,"deref_mut","","",350,[[]]],[11,"drop","","",350,[[]]],[11,"into_any_arc","","",350,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",350,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",350,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",350,[[],["any",8]]],[11,"as_any_mut","","",350,[[],["any",8]]],[11,"from","","",351,[[]]],[11,"into","","",351,[[]]],[11,"to_string","","",351,[[],["string",3]]],[11,"borrow","","",351,[[]]],[11,"borrow_mut","","",351,[[]]],[11,"try_from","","",351,[[],["result",4]]],[11,"try_into","","",351,[[],["result",4]]],[11,"type_id","","",351,[[],["typeid",3]]],[11,"vzip","","",351,[[]]],[11,"init","","",351,[[]]],[11,"deref","","",351,[[]]],[11,"deref_mut","","",351,[[]]],[11,"drop","","",351,[[]]],[11,"into_any_arc","","",351,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",351,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",351,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",351,[[],["any",8]]],[11,"as_any_mut","","",351,[[],["any",8]]],[11,"from","","",352,[[]]],[11,"into","","",352,[[]]],[11,"to_string","","",352,[[],["string",3]]],[11,"borrow","","",352,[[]]],[11,"borrow_mut","","",352,[[]]],[11,"try_from","","",352,[[],["result",4]]],[11,"try_into","","",352,[[],["result",4]]],[11,"type_id","","",352,[[],["typeid",3]]],[11,"vzip","","",352,[[]]],[11,"init","","",352,[[]]],[11,"deref","","",352,[[]]],[11,"deref_mut","","",352,[[]]],[11,"drop","","",352,[[]]],[11,"into_any_arc","","",352,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",352,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",352,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",352,[[],["any",8]]],[11,"as_any_mut","","",352,[[],["any",8]]],[11,"from","smoldot::metadata::decode","",353,[[]]],[11,"into","","",353,[[]]],[11,"to_owned","","",353,[[]]],[11,"clone_into","","",353,[[]]],[11,"borrow","","",353,[[]]],[11,"borrow_mut","","",353,[[]]],[11,"try_from","","",353,[[],["result",4]]],[11,"try_into","","",353,[[],["result",4]]],[11,"type_id","","",353,[[],["typeid",3]]],[11,"vzip","","",353,[[]]],[11,"init","","",353,[[]]],[11,"deref","","",353,[[]]],[11,"deref_mut","","",353,[[]]],[11,"drop","","",353,[[]]],[11,"into_any_arc","","",353,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",353,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",353,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",353,[[],["any",8]]],[11,"as_any_mut","","",353,[[],["any",8]]],[11,"equivalent","","",353,[[]]],[11,"from","","",354,[[]]],[11,"into","","",354,[[]]],[11,"to_owned","","",354,[[]]],[11,"clone_into","","",354,[[]]],[11,"borrow","","",354,[[]]],[11,"borrow_mut","","",354,[[]]],[11,"try_from","","",354,[[],["result",4]]],[11,"try_into","","",354,[[],["result",4]]],[11,"type_id","","",354,[[],["typeid",3]]],[11,"vzip","","",354,[[]]],[11,"init","","",354,[[]]],[11,"deref","","",354,[[]]],[11,"deref_mut","","",354,[[]]],[11,"drop","","",354,[[]]],[11,"into_any_arc","","",354,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",354,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",354,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",354,[[],["any",8]]],[11,"as_any_mut","","",354,[[],["any",8]]],[11,"equivalent","","",354,[[]]],[11,"from","","",355,[[]]],[11,"into","","",355,[[]]],[11,"to_owned","","",355,[[]]],[11,"clone_into","","",355,[[]]],[11,"borrow","","",355,[[]]],[11,"borrow_mut","","",355,[[]]],[11,"try_from","","",355,[[],["result",4]]],[11,"try_into","","",355,[[],["result",4]]],[11,"type_id","","",355,[[],["typeid",3]]],[11,"vzip","","",355,[[]]],[11,"init","","",355,[[]]],[11,"deref","","",355,[[]]],[11,"deref_mut","","",355,[[]]],[11,"drop","","",355,[[]]],[11,"into_any_arc","","",355,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",355,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",355,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",355,[[],["any",8]]],[11,"as_any_mut","","",355,[[],["any",8]]],[11,"equivalent","","",355,[[]]],[11,"from","","",356,[[]]],[11,"into","","",356,[[]]],[11,"to_owned","","",356,[[]]],[11,"clone_into","","",356,[[]]],[11,"borrow","","",356,[[]]],[11,"borrow_mut","","",356,[[]]],[11,"try_from","","",356,[[],["result",4]]],[11,"try_into","","",356,[[],["result",4]]],[11,"type_id","","",356,[[],["typeid",3]]],[11,"vzip","","",356,[[]]],[11,"init","","",356,[[]]],[11,"deref","","",356,[[]]],[11,"deref_mut","","",356,[[]]],[11,"drop","","",356,[[]]],[11,"into_any_arc","","",356,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",356,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",356,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",356,[[],["any",8]]],[11,"as_any_mut","","",356,[[],["any",8]]],[11,"equivalent","","",356,[[]]],[11,"from","","",357,[[]]],[11,"into","","",357,[[]]],[11,"to_owned","","",357,[[]]],[11,"clone_into","","",357,[[]]],[11,"borrow","","",357,[[]]],[11,"borrow_mut","","",357,[[]]],[11,"try_from","","",357,[[],["result",4]]],[11,"try_into","","",357,[[],["result",4]]],[11,"type_id","","",357,[[],["typeid",3]]],[11,"vzip","","",357,[[]]],[11,"init","","",357,[[]]],[11,"deref","","",357,[[]]],[11,"deref_mut","","",357,[[]]],[11,"drop","","",357,[[]]],[11,"into_any_arc","","",357,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",357,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",357,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",357,[[],["any",8]]],[11,"as_any_mut","","",357,[[],["any",8]]],[11,"equivalent","","",357,[[]]],[11,"from","","",358,[[]]],[11,"into","","",358,[[]]],[11,"to_owned","","",358,[[]]],[11,"clone_into","","",358,[[]]],[11,"borrow","","",358,[[]]],[11,"borrow_mut","","",358,[[]]],[11,"try_from","","",358,[[],["result",4]]],[11,"try_into","","",358,[[],["result",4]]],[11,"type_id","","",358,[[],["typeid",3]]],[11,"vzip","","",358,[[]]],[11,"init","","",358,[[]]],[11,"deref","","",358,[[]]],[11,"deref_mut","","",358,[[]]],[11,"drop","","",358,[[]]],[11,"into_any_arc","","",358,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",358,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",358,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",358,[[],["any",8]]],[11,"as_any_mut","","",358,[[],["any",8]]],[11,"equivalent","","",358,[[]]],[11,"from","","",361,[[]]],[11,"into","","",361,[[]]],[11,"to_owned","","",361,[[]]],[11,"clone_into","","",361,[[]]],[11,"borrow","","",361,[[]]],[11,"borrow_mut","","",361,[[]]],[11,"try_from","","",361,[[],["result",4]]],[11,"try_into","","",361,[[],["result",4]]],[11,"type_id","","",361,[[],["typeid",3]]],[11,"vzip","","",361,[[]]],[11,"init","","",361,[[]]],[11,"deref","","",361,[[]]],[11,"deref_mut","","",361,[[]]],[11,"drop","","",361,[[]]],[11,"into_any_arc","","",361,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",361,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",361,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",361,[[],["any",8]]],[11,"as_any_mut","","",361,[[],["any",8]]],[11,"equivalent","","",361,[[]]],[11,"from","","",362,[[]]],[11,"into","","",362,[[]]],[11,"to_owned","","",362,[[]]],[11,"clone_into","","",362,[[]]],[11,"borrow","","",362,[[]]],[11,"borrow_mut","","",362,[[]]],[11,"try_from","","",362,[[],["result",4]]],[11,"try_into","","",362,[[],["result",4]]],[11,"type_id","","",362,[[],["typeid",3]]],[11,"vzip","","",362,[[]]],[11,"init","","",362,[[]]],[11,"deref","","",362,[[]]],[11,"deref_mut","","",362,[[]]],[11,"drop","","",362,[[]]],[11,"into_any_arc","","",362,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",362,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",362,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",362,[[],["any",8]]],[11,"as_any_mut","","",362,[[],["any",8]]],[11,"equivalent","","",362,[[]]],[11,"from","","",363,[[]]],[11,"into","","",363,[[]]],[11,"to_owned","","",363,[[]]],[11,"clone_into","","",363,[[]]],[11,"borrow","","",363,[[]]],[11,"borrow_mut","","",363,[[]]],[11,"try_from","","",363,[[],["result",4]]],[11,"try_into","","",363,[[],["result",4]]],[11,"type_id","","",363,[[],["typeid",3]]],[11,"vzip","","",363,[[]]],[11,"init","","",363,[[]]],[11,"deref","","",363,[[]]],[11,"deref_mut","","",363,[[]]],[11,"drop","","",363,[[]]],[11,"into_any_arc","","",363,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",363,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",363,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",363,[[],["any",8]]],[11,"as_any_mut","","",363,[[],["any",8]]],[11,"equivalent","","",363,[[]]],[11,"from","","",364,[[]]],[11,"into","","",364,[[]]],[11,"to_owned","","",364,[[]]],[11,"clone_into","","",364,[[]]],[11,"borrow","","",364,[[]]],[11,"borrow_mut","","",364,[[]]],[11,"try_from","","",364,[[],["result",4]]],[11,"try_into","","",364,[[],["result",4]]],[11,"type_id","","",364,[[],["typeid",3]]],[11,"vzip","","",364,[[]]],[11,"init","","",364,[[]]],[11,"deref","","",364,[[]]],[11,"deref_mut","","",364,[[]]],[11,"drop","","",364,[[]]],[11,"into_any_arc","","",364,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",364,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",364,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",364,[[],["any",8]]],[11,"as_any_mut","","",364,[[],["any",8]]],[11,"equivalent","","",364,[[]]],[11,"from","","",365,[[]]],[11,"into","","",365,[[]]],[11,"to_owned","","",365,[[]]],[11,"clone_into","","",365,[[]]],[11,"borrow","","",365,[[]]],[11,"borrow_mut","","",365,[[]]],[11,"try_from","","",365,[[],["result",4]]],[11,"try_into","","",365,[[],["result",4]]],[11,"type_id","","",365,[[],["typeid",3]]],[11,"vzip","","",365,[[]]],[11,"init","","",365,[[]]],[11,"deref","","",365,[[]]],[11,"deref_mut","","",365,[[]]],[11,"drop","","",365,[[]]],[11,"into_any_arc","","",365,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",365,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",365,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",365,[[],["any",8]]],[11,"as_any_mut","","",365,[[],["any",8]]],[11,"equivalent","","",365,[[]]],[11,"from","","",366,[[]]],[11,"into","","",366,[[]]],[11,"to_owned","","",366,[[]]],[11,"clone_into","","",366,[[]]],[11,"borrow","","",366,[[]]],[11,"borrow_mut","","",366,[[]]],[11,"try_from","","",366,[[],["result",4]]],[11,"try_into","","",366,[[],["result",4]]],[11,"type_id","","",366,[[],["typeid",3]]],[11,"vzip","","",366,[[]]],[11,"init","","",366,[[]]],[11,"deref","","",366,[[]]],[11,"deref_mut","","",366,[[]]],[11,"drop","","",366,[[]]],[11,"into_any_arc","","",366,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",366,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",366,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",366,[[],["any",8]]],[11,"as_any_mut","","",366,[[],["any",8]]],[11,"equivalent","","",366,[[]]],[11,"from","","",367,[[]]],[11,"into","","",367,[[]]],[11,"to_owned","","",367,[[]]],[11,"clone_into","","",367,[[]]],[11,"borrow","","",367,[[]]],[11,"borrow_mut","","",367,[[]]],[11,"try_from","","",367,[[],["result",4]]],[11,"try_into","","",367,[[],["result",4]]],[11,"type_id","","",367,[[],["typeid",3]]],[11,"vzip","","",367,[[]]],[11,"init","","",367,[[]]],[11,"deref","","",367,[[]]],[11,"deref_mut","","",367,[[]]],[11,"drop","","",367,[[]]],[11,"into_any_arc","","",367,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",367,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",367,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",367,[[],["any",8]]],[11,"as_any_mut","","",367,[[],["any",8]]],[11,"equivalent","","",367,[[]]],[11,"from","","",532,[[]]],[11,"into","","",532,[[]]],[11,"to_string","","",532,[[],["string",3]]],[11,"borrow","","",532,[[]]],[11,"borrow_mut","","",532,[[]]],[11,"try_from","","",532,[[],["result",4]]],[11,"try_into","","",532,[[],["result",4]]],[11,"type_id","","",532,[[],["typeid",3]]],[11,"vzip","","",532,[[]]],[11,"init","","",532,[[]]],[11,"deref","","",532,[[]]],[11,"deref_mut","","",532,[[]]],[11,"drop","","",532,[[]]],[11,"into_any_arc","","",532,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",532,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",532,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",532,[[],["any",8]]],[11,"as_any_mut","","",532,[[],["any",8]]],[11,"from","","",533,[[]]],[11,"into","","",533,[[]]],[11,"into_iter","","",533,[[]]],[11,"to_owned","","",533,[[]]],[11,"clone_into","","",533,[[]]],[11,"borrow","","",533,[[]]],[11,"borrow_mut","","",533,[[]]],[11,"try_from","","",533,[[],["result",4]]],[11,"try_into","","",533,[[],["result",4]]],[11,"type_id","","",533,[[],["typeid",3]]],[11,"vzip","","",533,[[]]],[11,"init","","",533,[[]]],[11,"deref","","",533,[[]]],[11,"deref_mut","","",533,[[]]],[11,"drop","","",533,[[]]],[11,"into_any_arc","","",533,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",533,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",533,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",533,[[],["any",8]]],[11,"as_any_mut","","",533,[[],["any",8]]],[11,"nfd","","",533,[[],["decompositions",3]]],[11,"nfkd","","",533,[[],["decompositions",3]]],[11,"nfc","","",533,[[],["recompositions",3]]],[11,"nfkc","","",533,[[],["recompositions",3]]],[11,"cjk_compat_variants","","",533,[[],["replacements",3]]],[11,"stream_safe","","",533,[[],["streamsafe",3]]],[11,"equivalent","","",533,[[]]],[11,"from","smoldot::metadata","",368,[[]]],[11,"into","","",368,[[]]],[11,"to_string","","",368,[[],["string",3]]],[11,"borrow","","",368,[[]]],[11,"borrow_mut","","",368,[[]]],[11,"try_from","","",368,[[],["result",4]]],[11,"try_into","","",368,[[],["result",4]]],[11,"type_id","","",368,[[],["typeid",3]]],[11,"vzip","","",368,[[]]],[11,"init","","",368,[[]]],[11,"deref","","",368,[[]]],[11,"deref_mut","","",368,[[]]],[11,"drop","","",368,[[]]],[11,"into_any_arc","","",368,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",368,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",368,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",368,[[],["any",8]]],[11,"as_any_mut","","",368,[[],["any",8]]],[11,"from","smoldot::network::protocol","",369,[[]]],[11,"into","","",369,[[]]],[11,"to_owned","","",369,[[]]],[11,"clone_into","","",369,[[]]],[11,"borrow","","",369,[[]]],[11,"borrow_mut","","",369,[[]]],[11,"try_from","","",369,[[],["result",4]]],[11,"try_into","","",369,[[],["result",4]]],[11,"type_id","","",369,[[],["typeid",3]]],[11,"vzip","","",369,[[]]],[11,"init","","",369,[[]]],[11,"deref","","",369,[[]]],[11,"deref_mut","","",369,[[]]],[11,"drop","","",369,[[]]],[11,"into_any_arc","","",369,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",369,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",369,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",369,[[],["any",8]]],[11,"as_any_mut","","",369,[[],["any",8]]],[11,"equivalent","","",369,[[]]],[11,"from","","",370,[[]]],[11,"into","","",370,[[]]],[11,"to_owned","","",370,[[]]],[11,"clone_into","","",370,[[]]],[11,"borrow","","",370,[[]]],[11,"borrow_mut","","",370,[[]]],[11,"try_from","","",370,[[],["result",4]]],[11,"try_into","","",370,[[],["result",4]]],[11,"type_id","","",370,[[],["typeid",3]]],[11,"get_hash","","",370,[[]]],[11,"vzip","","",370,[[]]],[11,"init","","",370,[[]]],[11,"deref","","",370,[[]]],[11,"deref_mut","","",370,[[]]],[11,"drop","","",370,[[]]],[11,"into_any_arc","","",370,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",370,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",370,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",370,[[],["any",8]]],[11,"as_any_mut","","",370,[[],["any",8]]],[11,"get_hash","","",370,[[]]],[11,"equivalent","","",370,[[]]],[11,"from","","",371,[[]]],[11,"into","","",371,[[]]],[11,"borrow","","",371,[[]]],[11,"borrow_mut","","",371,[[]]],[11,"try_from","","",371,[[],["result",4]]],[11,"try_into","","",371,[[],["result",4]]],[11,"type_id","","",371,[[],["typeid",3]]],[11,"vzip","","",371,[[]]],[11,"init","","",371,[[]]],[11,"deref","","",371,[[]]],[11,"deref_mut","","",371,[[]]],[11,"drop","","",371,[[]]],[11,"into_any_arc","","",371,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",371,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",371,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",371,[[],["any",8]]],[11,"as_any_mut","","",371,[[],["any",8]]],[11,"from","","",534,[[]]],[11,"into","","",534,[[]]],[11,"to_string","","",534,[[],["string",3]]],[11,"borrow","","",534,[[]]],[11,"borrow_mut","","",534,[[]]],[11,"try_from","","",534,[[],["result",4]]],[11,"try_into","","",534,[[],["result",4]]],[11,"type_id","","",534,[[],["typeid",3]]],[11,"vzip","","",534,[[]]],[11,"init","","",534,[[]]],[11,"deref","","",534,[[]]],[11,"deref_mut","","",534,[[]]],[11,"drop","","",534,[[]]],[11,"into_any_arc","","",534,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",534,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",534,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",534,[[],["any",8]]],[11,"as_any_mut","","",534,[[],["any",8]]],[11,"from","","",535,[[]]],[11,"into","","",535,[[]]],[11,"to_string","","",535,[[],["string",3]]],[11,"borrow","","",535,[[]]],[11,"borrow_mut","","",535,[[]]],[11,"try_from","","",535,[[],["result",4]]],[11,"try_into","","",535,[[],["result",4]]],[11,"type_id","","",535,[[],["typeid",3]]],[11,"vzip","","",535,[[]]],[11,"init","","",535,[[]]],[11,"deref","","",535,[[]]],[11,"deref_mut","","",535,[[]]],[11,"drop","","",535,[[]]],[11,"into_any_arc","","",535,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",535,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",535,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",535,[[],["any",8]]],[11,"as_any_mut","","",535,[[],["any",8]]],[11,"from","","",372,[[]]],[11,"into","","",372,[[]]],[11,"to_owned","","",372,[[]]],[11,"clone_into","","",372,[[]]],[11,"borrow","","",372,[[]]],[11,"borrow_mut","","",372,[[]]],[11,"try_from","","",372,[[],["result",4]]],[11,"try_into","","",372,[[],["result",4]]],[11,"type_id","","",372,[[],["typeid",3]]],[11,"vzip","","",372,[[]]],[11,"init","","",372,[[]]],[11,"deref","","",372,[[]]],[11,"deref_mut","","",372,[[]]],[11,"drop","","",372,[[]]],[11,"into_any_arc","","",372,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",372,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",372,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",372,[[],["any",8]]],[11,"as_any_mut","","",372,[[],["any",8]]],[11,"equivalent","","",372,[[]]],[11,"from","","",373,[[]]],[11,"into","","",373,[[]]],[11,"to_owned","","",373,[[]]],[11,"clone_into","","",373,[[]]],[11,"borrow","","",373,[[]]],[11,"borrow_mut","","",373,[[]]],[11,"try_from","","",373,[[],["result",4]]],[11,"try_into","","",373,[[],["result",4]]],[11,"type_id","","",373,[[],["typeid",3]]],[11,"vzip","","",373,[[]]],[11,"init","","",373,[[]]],[11,"deref","","",373,[[]]],[11,"deref_mut","","",373,[[]]],[11,"drop","","",373,[[]]],[11,"into_any_arc","","",373,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",373,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",373,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",373,[[],["any",8]]],[11,"as_any_mut","","",373,[[],["any",8]]],[11,"equivalent","","",373,[[]]],[11,"from","","",374,[[]]],[11,"into","","",374,[[]]],[11,"to_owned","","",374,[[]]],[11,"clone_into","","",374,[[]]],[11,"borrow","","",374,[[]]],[11,"borrow_mut","","",374,[[]]],[11,"try_from","","",374,[[],["result",4]]],[11,"try_into","","",374,[[],["result",4]]],[11,"type_id","","",374,[[],["typeid",3]]],[11,"vzip","","",374,[[]]],[11,"init","","",374,[[]]],[11,"deref","","",374,[[]]],[11,"deref_mut","","",374,[[]]],[11,"drop","","",374,[[]]],[11,"into_any_arc","","",374,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",374,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",374,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",374,[[],["any",8]]],[11,"as_any_mut","","",374,[[],["any",8]]],[11,"equivalent","","",374,[[]]],[11,"from","","",375,[[]]],[11,"into","","",375,[[]]],[11,"to_owned","","",375,[[]]],[11,"clone_into","","",375,[[]]],[11,"borrow","","",375,[[]]],[11,"borrow_mut","","",375,[[]]],[11,"try_from","","",375,[[],["result",4]]],[11,"try_into","","",375,[[],["result",4]]],[11,"type_id","","",375,[[],["typeid",3]]],[11,"vzip","","",375,[[]]],[11,"init","","",375,[[]]],[11,"deref","","",375,[[]]],[11,"deref_mut","","",375,[[]]],[11,"drop","","",375,[[]]],[11,"into_any_arc","","",375,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",375,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",375,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",375,[[],["any",8]]],[11,"as_any_mut","","",375,[[],["any",8]]],[11,"equivalent","","",375,[[]]],[11,"from","","",376,[[]]],[11,"into","","",376,[[]]],[11,"to_owned","","",376,[[]]],[11,"clone_into","","",376,[[]]],[11,"borrow","","",376,[[]]],[11,"borrow_mut","","",376,[[]]],[11,"try_from","","",376,[[],["result",4]]],[11,"try_into","","",376,[[],["result",4]]],[11,"type_id","","",376,[[],["typeid",3]]],[11,"vzip","","",376,[[]]],[11,"init","","",376,[[]]],[11,"deref","","",376,[[]]],[11,"deref_mut","","",376,[[]]],[11,"drop","","",376,[[]]],[11,"into_any_arc","","",376,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",376,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",376,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",376,[[],["any",8]]],[11,"as_any_mut","","",376,[[],["any",8]]],[11,"equivalent","","",376,[[]]],[11,"from","","",377,[[]]],[11,"into","","",377,[[]]],[11,"to_string","","",377,[[],["string",3]]],[11,"borrow","","",377,[[]]],[11,"borrow_mut","","",377,[[]]],[11,"try_from","","",377,[[],["result",4]]],[11,"try_into","","",377,[[],["result",4]]],[11,"type_id","","",377,[[],["typeid",3]]],[11,"vzip","","",377,[[]]],[11,"init","","",377,[[]]],[11,"deref","","",377,[[]]],[11,"deref_mut","","",377,[[]]],[11,"drop","","",377,[[]]],[11,"into_any_arc","","",377,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",377,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",377,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",377,[[],["any",8]]],[11,"as_any_mut","","",377,[[],["any",8]]],[11,"from","","",378,[[]]],[11,"into","","",378,[[]]],[11,"to_owned","","",378,[[]]],[11,"clone_into","","",378,[[]]],[11,"borrow","","",378,[[]]],[11,"borrow_mut","","",378,[[]]],[11,"try_from","","",378,[[],["result",4]]],[11,"try_into","","",378,[[],["result",4]]],[11,"type_id","","",378,[[],["typeid",3]]],[11,"vzip","","",378,[[]]],[11,"init","","",378,[[]]],[11,"deref","","",378,[[]]],[11,"deref_mut","","",378,[[]]],[11,"drop","","",378,[[]]],[11,"into_any_arc","","",378,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",378,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",378,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",378,[[],["any",8]]],[11,"as_any_mut","","",378,[[],["any",8]]],[11,"from","","",379,[[]]],[11,"into","","",379,[[]]],[11,"to_owned","","",379,[[]]],[11,"clone_into","","",379,[[]]],[11,"borrow","","",379,[[]]],[11,"borrow_mut","","",379,[[]]],[11,"try_from","","",379,[[],["result",4]]],[11,"try_into","","",379,[[],["result",4]]],[11,"type_id","","",379,[[],["typeid",3]]],[11,"vzip","","",379,[[]]],[11,"init","","",379,[[]]],[11,"deref","","",379,[[]]],[11,"deref_mut","","",379,[[]]],[11,"drop","","",379,[[]]],[11,"into_any_arc","","",379,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",379,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",379,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",379,[[],["any",8]]],[11,"as_any_mut","","",379,[[],["any",8]]],[11,"from","","",380,[[]]],[11,"into","","",380,[[]]],[11,"to_owned","","",380,[[]]],[11,"clone_into","","",380,[[]]],[11,"borrow","","",380,[[]]],[11,"borrow_mut","","",380,[[]]],[11,"try_from","","",380,[[],["result",4]]],[11,"try_into","","",380,[[],["result",4]]],[11,"type_id","","",380,[[],["typeid",3]]],[11,"vzip","","",380,[[]]],[11,"init","","",380,[[]]],[11,"deref","","",380,[[]]],[11,"deref_mut","","",380,[[]]],[11,"drop","","",380,[[]]],[11,"into_any_arc","","",380,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",380,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",380,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",380,[[],["any",8]]],[11,"as_any_mut","","",380,[[],["any",8]]],[11,"from","","",381,[[]]],[11,"into","","",381,[[]]],[11,"to_owned","","",381,[[]]],[11,"clone_into","","",381,[[]]],[11,"borrow","","",381,[[]]],[11,"borrow_mut","","",381,[[]]],[11,"try_from","","",381,[[],["result",4]]],[11,"try_into","","",381,[[],["result",4]]],[11,"type_id","","",381,[[],["typeid",3]]],[11,"vzip","","",381,[[]]],[11,"init","","",381,[[]]],[11,"deref","","",381,[[]]],[11,"deref_mut","","",381,[[]]],[11,"drop","","",381,[[]]],[11,"into_any_arc","","",381,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",381,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",381,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",381,[[],["any",8]]],[11,"as_any_mut","","",381,[[],["any",8]]],[11,"from","","",382,[[]]],[11,"into","","",382,[[]]],[11,"to_owned","","",382,[[]]],[11,"clone_into","","",382,[[]]],[11,"borrow","","",382,[[]]],[11,"borrow_mut","","",382,[[]]],[11,"try_from","","",382,[[],["result",4]]],[11,"try_into","","",382,[[],["result",4]]],[11,"type_id","","",382,[[],["typeid",3]]],[11,"vzip","","",382,[[]]],[11,"init","","",382,[[]]],[11,"deref","","",382,[[]]],[11,"deref_mut","","",382,[[]]],[11,"drop","","",382,[[]]],[11,"into_any_arc","","",382,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",382,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",382,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",382,[[],["any",8]]],[11,"as_any_mut","","",382,[[],["any",8]]],[11,"from","","",383,[[]]],[11,"into","","",383,[[]]],[11,"to_owned","","",383,[[]]],[11,"clone_into","","",383,[[]]],[11,"borrow","","",383,[[]]],[11,"borrow_mut","","",383,[[]]],[11,"try_from","","",383,[[],["result",4]]],[11,"try_into","","",383,[[],["result",4]]],[11,"type_id","","",383,[[],["typeid",3]]],[11,"vzip","","",383,[[]]],[11,"init","","",383,[[]]],[11,"deref","","",383,[[]]],[11,"deref_mut","","",383,[[]]],[11,"drop","","",383,[[]]],[11,"into_any_arc","","",383,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",383,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",383,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",383,[[],["any",8]]],[11,"as_any_mut","","",383,[[],["any",8]]],[11,"from","","",384,[[]]],[11,"into","","",384,[[]]],[11,"to_owned","","",384,[[]]],[11,"clone_into","","",384,[[]]],[11,"borrow","","",384,[[]]],[11,"borrow_mut","","",384,[[]]],[11,"try_from","","",384,[[],["result",4]]],[11,"try_into","","",384,[[],["result",4]]],[11,"type_id","","",384,[[],["typeid",3]]],[11,"vzip","","",384,[[]]],[11,"init","","",384,[[]]],[11,"deref","","",384,[[]]],[11,"deref_mut","","",384,[[]]],[11,"drop","","",384,[[]]],[11,"into_any_arc","","",384,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",384,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",384,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",384,[[],["any",8]]],[11,"as_any_mut","","",384,[[],["any",8]]],[11,"from","","",385,[[]]],[11,"into","","",385,[[]]],[11,"to_owned","","",385,[[]]],[11,"clone_into","","",385,[[]]],[11,"borrow","","",385,[[]]],[11,"borrow_mut","","",385,[[]]],[11,"try_from","","",385,[[],["result",4]]],[11,"try_into","","",385,[[],["result",4]]],[11,"type_id","","",385,[[],["typeid",3]]],[11,"vzip","","",385,[[]]],[11,"init","","",385,[[]]],[11,"deref","","",385,[[]]],[11,"deref_mut","","",385,[[]]],[11,"drop","","",385,[[]]],[11,"into_any_arc","","",385,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",385,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",385,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",385,[[],["any",8]]],[11,"as_any_mut","","",385,[[],["any",8]]],[11,"from","","",386,[[]]],[11,"into","","",386,[[]]],[11,"to_owned","","",386,[[]]],[11,"clone_into","","",386,[[]]],[11,"borrow","","",386,[[]]],[11,"borrow_mut","","",386,[[]]],[11,"try_from","","",386,[[],["result",4]]],[11,"try_into","","",386,[[],["result",4]]],[11,"type_id","","",386,[[],["typeid",3]]],[11,"vzip","","",386,[[]]],[11,"init","","",386,[[]]],[11,"deref","","",386,[[]]],[11,"deref_mut","","",386,[[]]],[11,"drop","","",386,[[]]],[11,"into_any_arc","","",386,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",386,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",386,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",386,[[],["any",8]]],[11,"as_any_mut","","",386,[[],["any",8]]],[11,"from","","",387,[[]]],[11,"into","","",387,[[]]],[11,"to_owned","","",387,[[]]],[11,"clone_into","","",387,[[]]],[11,"borrow","","",387,[[]]],[11,"borrow_mut","","",387,[[]]],[11,"try_from","","",387,[[],["result",4]]],[11,"try_into","","",387,[[],["result",4]]],[11,"type_id","","",387,[[],["typeid",3]]],[11,"vzip","","",387,[[]]],[11,"init","","",387,[[]]],[11,"deref","","",387,[[]]],[11,"deref_mut","","",387,[[]]],[11,"drop","","",387,[[]]],[11,"into_any_arc","","",387,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",387,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",387,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",387,[[],["any",8]]],[11,"as_any_mut","","",387,[[],["any",8]]],[11,"from","","",388,[[]]],[11,"into","","",388,[[]]],[11,"to_owned","","",388,[[]]],[11,"clone_into","","",388,[[]]],[11,"borrow","","",388,[[]]],[11,"borrow_mut","","",388,[[]]],[11,"try_from","","",388,[[],["result",4]]],[11,"try_into","","",388,[[],["result",4]]],[11,"type_id","","",388,[[],["typeid",3]]],[11,"vzip","","",388,[[]]],[11,"init","","",388,[[]]],[11,"deref","","",388,[[]]],[11,"deref_mut","","",388,[[]]],[11,"drop","","",388,[[]]],[11,"into_any_arc","","",388,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",388,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",388,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",388,[[],["any",8]]],[11,"as_any_mut","","",388,[[],["any",8]]],[11,"from","","",389,[[]]],[11,"into","","",389,[[]]],[11,"to_owned","","",389,[[]]],[11,"clone_into","","",389,[[]]],[11,"borrow","","",389,[[]]],[11,"borrow_mut","","",389,[[]]],[11,"try_from","","",389,[[],["result",4]]],[11,"try_into","","",389,[[],["result",4]]],[11,"type_id","","",389,[[],["typeid",3]]],[11,"vzip","","",389,[[]]],[11,"init","","",389,[[]]],[11,"deref","","",389,[[]]],[11,"deref_mut","","",389,[[]]],[11,"drop","","",389,[[]]],[11,"into_any_arc","","",389,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",389,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",389,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",389,[[],["any",8]]],[11,"as_any_mut","","",389,[[],["any",8]]],[11,"from","","",536,[[]]],[11,"into","","",536,[[]]],[11,"to_string","","",536,[[],["string",3]]],[11,"borrow","","",536,[[]]],[11,"borrow_mut","","",536,[[]]],[11,"try_from","","",536,[[],["result",4]]],[11,"try_into","","",536,[[],["result",4]]],[11,"type_id","","",536,[[],["typeid",3]]],[11,"vzip","","",536,[[]]],[11,"init","","",536,[[]]],[11,"deref","","",536,[[]]],[11,"deref_mut","","",536,[[]]],[11,"drop","","",536,[[]]],[11,"into_any_arc","","",536,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",536,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",536,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",536,[[],["any",8]]],[11,"as_any_mut","","",536,[[],["any",8]]],[11,"from","","",390,[[]]],[11,"into","","",390,[[]]],[11,"borrow","","",390,[[]]],[11,"borrow_mut","","",390,[[]]],[11,"try_from","","",390,[[],["result",4]]],[11,"try_into","","",390,[[],["result",4]]],[11,"type_id","","",390,[[],["typeid",3]]],[11,"vzip","","",390,[[]]],[11,"init","","",390,[[]]],[11,"deref","","",390,[[]]],[11,"deref_mut","","",390,[[]]],[11,"drop","","",390,[[]]],[11,"into_any_arc","","",390,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",390,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",390,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",390,[[],["any",8]]],[11,"as_any_mut","","",390,[[],["any",8]]],[11,"from","","",391,[[]]],[11,"into","","",391,[[]]],[11,"to_string","","",391,[[],["string",3]]],[11,"borrow","","",391,[[]]],[11,"borrow_mut","","",391,[[]]],[11,"try_from","","",391,[[],["result",4]]],[11,"try_into","","",391,[[],["result",4]]],[11,"type_id","","",391,[[],["typeid",3]]],[11,"vzip","","",391,[[]]],[11,"init","","",391,[[]]],[11,"deref","","",391,[[]]],[11,"deref_mut","","",391,[[]]],[11,"drop","","",391,[[]]],[11,"into_any_arc","","",391,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",391,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",391,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",391,[[],["any",8]]],[11,"as_any_mut","","",391,[[],["any",8]]],[11,"from","","",392,[[]]],[11,"into","","",392,[[]]],[11,"to_owned","","",392,[[]]],[11,"clone_into","","",392,[[]]],[11,"borrow","","",392,[[]]],[11,"borrow_mut","","",392,[[]]],[11,"try_from","","",392,[[],["result",4]]],[11,"try_into","","",392,[[],["result",4]]],[11,"type_id","","",392,[[],["typeid",3]]],[11,"vzip","","",392,[[]]],[11,"init","","",392,[[]]],[11,"deref","","",392,[[]]],[11,"deref_mut","","",392,[[]]],[11,"drop","","",392,[[]]],[11,"into_any_arc","","",392,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",392,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",392,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",392,[[],["any",8]]],[11,"as_any_mut","","",392,[[],["any",8]]],[11,"equivalent","","",392,[[]]],[11,"from","","",393,[[]]],[11,"into","","",393,[[]]],[11,"to_string","","",393,[[],["string",3]]],[11,"borrow","","",393,[[]]],[11,"borrow_mut","","",393,[[]]],[11,"try_from","","",393,[[],["result",4]]],[11,"try_into","","",393,[[],["result",4]]],[11,"type_id","","",393,[[],["typeid",3]]],[11,"vzip","","",393,[[]]],[11,"init","","",393,[[]]],[11,"deref","","",393,[[]]],[11,"deref_mut","","",393,[[]]],[11,"drop","","",393,[[]]],[11,"into_any_arc","","",393,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",393,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",393,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",393,[[],["any",8]]],[11,"as_any_mut","","",393,[[],["any",8]]],[11,"from","","",537,[[]]],[11,"into","","",537,[[]]],[11,"to_string","","",537,[[],["string",3]]],[11,"borrow","","",537,[[]]],[11,"borrow_mut","","",537,[[]]],[11,"try_from","","",537,[[],["result",4]]],[11,"try_into","","",537,[[],["result",4]]],[11,"type_id","","",537,[[],["typeid",3]]],[11,"vzip","","",537,[[]]],[11,"init","","",537,[[]]],[11,"deref","","",537,[[]]],[11,"deref_mut","","",537,[[]]],[11,"drop","","",537,[[]]],[11,"into_any_arc","","",537,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",537,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",537,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",537,[[],["any",8]]],[11,"as_any_mut","","",537,[[],["any",8]]],[11,"from","smoldot::network::service","",394,[[]]],[11,"into","","",394,[[]]],[11,"borrow","","",394,[[]]],[11,"borrow_mut","","",394,[[]]],[11,"try_from","","",394,[[],["result",4]]],[11,"try_into","","",394,[[],["result",4]]],[11,"type_id","","",394,[[],["typeid",3]]],[11,"vzip","","",394,[[]]],[11,"init","","",394,[[]]],[11,"deref","","",394,[[]]],[11,"deref_mut","","",394,[[]]],[11,"drop","","",394,[[]]],[11,"into_any_arc","","",394,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",394,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",394,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",394,[[],["any",8]]],[11,"as_any_mut","","",394,[[],["any",8]]],[11,"from","","",395,[[]]],[11,"into","","",395,[[]]],[11,"borrow","","",395,[[]]],[11,"borrow_mut","","",395,[[]]],[11,"try_from","","",395,[[],["result",4]]],[11,"try_into","","",395,[[],["result",4]]],[11,"type_id","","",395,[[],["typeid",3]]],[11,"vzip","","",395,[[]]],[11,"init","","",395,[[]]],[11,"deref","","",395,[[]]],[11,"deref_mut","","",395,[[]]],[11,"drop","","",395,[[]]],[11,"into_any_arc","","",395,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",395,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",395,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",395,[[],["any",8]]],[11,"as_any_mut","","",395,[[],["any",8]]],[11,"from","","",538,[[]]],[11,"into","","",538,[[]]],[11,"to_owned","","",538,[[]]],[11,"clone_into","","",538,[[]]],[11,"borrow","","",538,[[]]],[11,"borrow_mut","","",538,[[]]],[11,"try_from","","",538,[[],["result",4]]],[11,"try_into","","",538,[[],["result",4]]],[11,"type_id","","",538,[[],["typeid",3]]],[11,"get_hash","","",538,[[]]],[11,"vzip","","",538,[[]]],[11,"init","","",538,[[]]],[11,"deref","","",538,[[]]],[11,"deref_mut","","",538,[[]]],[11,"drop","","",538,[[]]],[11,"into_any_arc","","",538,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",538,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",538,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",538,[[],["any",8]]],[11,"as_any_mut","","",538,[[],["any",8]]],[11,"get_hash","","",538,[[]]],[11,"equivalent","","",538,[[]]],[11,"from","","",539,[[]]],[11,"into","","",539,[[]]],[11,"to_owned","","",539,[[]]],[11,"clone_into","","",539,[[]]],[11,"borrow","","",539,[[]]],[11,"borrow_mut","","",539,[[]]],[11,"try_from","","",539,[[],["result",4]]],[11,"try_into","","",539,[[],["result",4]]],[11,"type_id","","",539,[[],["typeid",3]]],[11,"get_hash","","",539,[[]]],[11,"vzip","","",539,[[]]],[11,"init","","",539,[[]]],[11,"deref","","",539,[[]]],[11,"deref_mut","","",539,[[]]],[11,"drop","","",539,[[]]],[11,"into_any_arc","","",539,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",539,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",539,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",539,[[],["any",8]]],[11,"as_any_mut","","",539,[[],["any",8]]],[11,"get_hash","","",539,[[]]],[11,"equivalent","","",539,[[]]],[11,"from","","",396,[[]]],[11,"into","","",396,[[]]],[11,"borrow","","",396,[[]]],[11,"borrow_mut","","",396,[[]]],[11,"try_from","","",396,[[],["result",4]]],[11,"try_into","","",396,[[],["result",4]]],[11,"type_id","","",396,[[],["typeid",3]]],[11,"vzip","","",396,[[]]],[11,"init","","",396,[[]]],[11,"deref","","",396,[[]]],[11,"deref_mut","","",396,[[]]],[11,"drop","","",396,[[]]],[11,"into_any_arc","","",396,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",396,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",396,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",396,[[],["any",8]]],[11,"as_any_mut","","",396,[[],["any",8]]],[11,"from","","",397,[[]]],[11,"into","","",397,[[]]],[11,"borrow","","",397,[[]]],[11,"borrow_mut","","",397,[[]]],[11,"try_from","","",397,[[],["result",4]]],[11,"try_into","","",397,[[],["result",4]]],[11,"type_id","","",397,[[],["typeid",3]]],[11,"vzip","","",397,[[]]],[11,"init","","",397,[[]]],[11,"deref","","",397,[[]]],[11,"deref_mut","","",397,[[]]],[11,"drop","","",397,[[]]],[11,"into_any_arc","","",397,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",397,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",397,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",397,[[],["any",8]]],[11,"as_any_mut","","",397,[[],["any",8]]],[11,"from","","",398,[[]]],[11,"into","","",398,[[]]],[11,"borrow","","",398,[[]]],[11,"borrow_mut","","",398,[[]]],[11,"try_from","","",398,[[],["result",4]]],[11,"try_into","","",398,[[],["result",4]]],[11,"type_id","","",398,[[],["typeid",3]]],[11,"vzip","","",398,[[]]],[11,"init","","",398,[[]]],[11,"deref","","",398,[[]]],[11,"deref_mut","","",398,[[]]],[11,"drop","","",398,[[]]],[11,"into_any_arc","","",398,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",398,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",398,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",398,[[],["any",8]]],[11,"as_any_mut","","",398,[[],["any",8]]],[11,"from","","",403,[[]]],[11,"into","","",403,[[]]],[11,"borrow","","",403,[[]]],[11,"borrow_mut","","",403,[[]]],[11,"try_from","","",403,[[],["result",4]]],[11,"try_into","","",403,[[],["result",4]]],[11,"type_id","","",403,[[],["typeid",3]]],[11,"vzip","","",403,[[]]],[11,"init","","",403,[[]]],[11,"deref","","",403,[[]]],[11,"deref_mut","","",403,[[]]],[11,"drop","","",403,[[]]],[11,"into_any_arc","","",403,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",403,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",403,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",403,[[],["any",8]]],[11,"as_any_mut","","",403,[[],["any",8]]],[11,"from","","",404,[[]]],[11,"into","","",404,[[]]],[11,"to_owned","","",404,[[]]],[11,"clone_into","","",404,[[]]],[11,"borrow","","",404,[[]]],[11,"borrow_mut","","",404,[[]]],[11,"try_from","","",404,[[],["result",4]]],[11,"try_into","","",404,[[],["result",4]]],[11,"type_id","","",404,[[],["typeid",3]]],[11,"vzip","","",404,[[]]],[11,"init","","",404,[[]]],[11,"deref","","",404,[[]]],[11,"deref_mut","","",404,[[]]],[11,"drop","","",404,[[]]],[11,"into_any_arc","","",404,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",404,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",404,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",404,[[],["any",8]]],[11,"as_any_mut","","",404,[[],["any",8]]],[11,"from","","",405,[[]]],[11,"into","","",405,[[]]],[11,"borrow","","",405,[[]]],[11,"borrow_mut","","",405,[[]]],[11,"try_from","","",405,[[],["result",4]]],[11,"try_into","","",405,[[],["result",4]]],[11,"type_id","","",405,[[],["typeid",3]]],[11,"vzip","","",405,[[]]],[11,"init","","",405,[[]]],[11,"deref","","",405,[[]]],[11,"deref_mut","","",405,[[]]],[11,"drop","","",405,[[]]],[11,"into_any_arc","","",405,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",405,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",405,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",405,[[],["any",8]]],[11,"as_any_mut","","",405,[[],["any",8]]],[11,"from","","",406,[[]]],[11,"into","","",406,[[]]],[11,"borrow","","",406,[[]]],[11,"borrow_mut","","",406,[[]]],[11,"try_from","","",406,[[],["result",4]]],[11,"try_into","","",406,[[],["result",4]]],[11,"type_id","","",406,[[],["typeid",3]]],[11,"vzip","","",406,[[]]],[11,"init","","",406,[[]]],[11,"deref","","",406,[[]]],[11,"deref_mut","","",406,[[]]],[11,"drop","","",406,[[]]],[11,"into_any_arc","","",406,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",406,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",406,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",406,[[],["any",8]]],[11,"as_any_mut","","",406,[[],["any",8]]],[11,"from","","",407,[[]]],[11,"into","","",407,[[]]],[11,"borrow","","",407,[[]]],[11,"borrow_mut","","",407,[[]]],[11,"try_from","","",407,[[],["result",4]]],[11,"try_into","","",407,[[],["result",4]]],[11,"type_id","","",407,[[],["typeid",3]]],[11,"vzip","","",407,[[]]],[11,"init","","",407,[[]]],[11,"deref","","",407,[[]]],[11,"deref_mut","","",407,[[]]],[11,"drop","","",407,[[]]],[11,"into_any_arc","","",407,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",407,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",407,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",407,[[],["any",8]]],[11,"as_any_mut","","",407,[[],["any",8]]],[11,"from","","",408,[[]]],[11,"into","","",408,[[]]],[11,"to_string","","",408,[[],["string",3]]],[11,"borrow","","",408,[[]]],[11,"borrow_mut","","",408,[[]]],[11,"try_from","","",408,[[],["result",4]]],[11,"try_into","","",408,[[],["result",4]]],[11,"type_id","","",408,[[],["typeid",3]]],[11,"vzip","","",408,[[]]],[11,"init","","",408,[[]]],[11,"deref","","",408,[[]]],[11,"deref_mut","","",408,[[]]],[11,"drop","","",408,[[]]],[11,"into_any_arc","","",408,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",408,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",408,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",408,[[],["any",8]]],[11,"as_any_mut","","",408,[[],["any",8]]],[11,"from","","",409,[[]]],[11,"into","","",409,[[]]],[11,"to_string","","",409,[[],["string",3]]],[11,"borrow","","",409,[[]]],[11,"borrow_mut","","",409,[[]]],[11,"try_from","","",409,[[],["result",4]]],[11,"try_into","","",409,[[],["result",4]]],[11,"type_id","","",409,[[],["typeid",3]]],[11,"vzip","","",409,[[]]],[11,"init","","",409,[[]]],[11,"deref","","",409,[[]]],[11,"deref_mut","","",409,[[]]],[11,"drop","","",409,[[]]],[11,"into_any_arc","","",409,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",409,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",409,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",409,[[],["any",8]]],[11,"as_any_mut","","",409,[[],["any",8]]],[11,"from","","",410,[[]]],[11,"into","","",410,[[]]],[11,"to_string","","",410,[[],["string",3]]],[11,"borrow","","",410,[[]]],[11,"borrow_mut","","",410,[[]]],[11,"try_from","","",410,[[],["result",4]]],[11,"try_into","","",410,[[],["result",4]]],[11,"type_id","","",410,[[],["typeid",3]]],[11,"vzip","","",410,[[]]],[11,"init","","",410,[[]]],[11,"deref","","",410,[[]]],[11,"deref_mut","","",410,[[]]],[11,"drop","","",410,[[]]],[11,"into_any_arc","","",410,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",410,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",410,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",410,[[],["any",8]]],[11,"as_any_mut","","",410,[[],["any",8]]],[11,"from","","",411,[[]]],[11,"into","","",411,[[]]],[11,"to_string","","",411,[[],["string",3]]],[11,"borrow","","",411,[[]]],[11,"borrow_mut","","",411,[[]]],[11,"try_from","","",411,[[],["result",4]]],[11,"try_into","","",411,[[],["result",4]]],[11,"type_id","","",411,[[],["typeid",3]]],[11,"vzip","","",411,[[]]],[11,"init","","",411,[[]]],[11,"deref","","",411,[[]]],[11,"deref_mut","","",411,[[]]],[11,"drop","","",411,[[]]],[11,"into_any_arc","","",411,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",411,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",411,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",411,[[],["any",8]]],[11,"as_any_mut","","",411,[[],["any",8]]],[11,"from","smoldot::trie","",540,[[]]],[11,"into","","",540,[[]]],[11,"to_owned","","",540,[[]]],[11,"clone_into","","",540,[[]]],[11,"borrow","","",540,[[]]],[11,"borrow_mut","","",540,[[]]],[11,"try_from","","",540,[[],["result",4]]],[11,"try_into","","",540,[[],["result",4]]],[11,"type_id","","",540,[[],["typeid",3]]],[11,"get_hash","","",540,[[]]],[11,"vzip","","",540,[[]]],[11,"init","","",540,[[]]],[11,"deref","","",540,[[]]],[11,"deref_mut","","",540,[[]]],[11,"drop","","",540,[[]]],[11,"into_any_arc","","",540,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",540,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",540,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",540,[[],["any",8]]],[11,"as_any_mut","","",540,[[],["any",8]]],[11,"get_hash","","",540,[[]]],[11,"equivalent","","",540,[[]]],[11,"from","","",438,[[]]],[11,"into","","",438,[[]]],[11,"to_string","","",438,[[],["string",3]]],[11,"borrow","","",438,[[]]],[11,"borrow_mut","","",438,[[]]],[11,"try_from","","",438,[[],["result",4]]],[11,"try_into","","",438,[[],["result",4]]],[11,"type_id","","",438,[[],["typeid",3]]],[11,"vzip","","",438,[[]]],[11,"init","","",438,[[]]],[11,"deref","","",438,[[]]],[11,"deref_mut","","",438,[[]]],[11,"drop","","",438,[[]]],[11,"into_any_arc","","",438,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",438,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",438,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",438,[[],["any",8]]],[11,"as_any_mut","","",438,[[],["any",8]]],[11,"from","","",541,[[]]],[11,"into","","",541,[[]]],[11,"into_iter","","",541,[[]]],[11,"to_owned","","",541,[[]]],[11,"clone_into","","",541,[[]]],[11,"borrow","","",541,[[]]],[11,"borrow_mut","","",541,[[]]],[11,"try_from","","",541,[[],["result",4]]],[11,"try_into","","",541,[[],["result",4]]],[11,"type_id","","",541,[[],["typeid",3]]],[11,"vzip","","",541,[[]]],[11,"init","","",541,[[]]],[11,"deref","","",541,[[]]],[11,"deref_mut","","",541,[[]]],[11,"drop","","",541,[[]]],[11,"into_any_arc","","",541,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",541,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",541,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",541,[[],["any",8]]],[11,"as_any_mut","","",541,[[],["any",8]]],[11,"from","smoldot::trie::calculate_root","",412,[[]]],[11,"into","","",412,[[]]],[11,"borrow","","",412,[[]]],[11,"borrow_mut","","",412,[[]]],[11,"try_from","","",412,[[],["result",4]]],[11,"try_into","","",412,[[],["result",4]]],[11,"type_id","","",412,[[],["typeid",3]]],[11,"vzip","","",412,[[]]],[11,"init","","",412,[[]]],[11,"deref","","",412,[[]]],[11,"deref_mut","","",412,[[]]],[11,"drop","","",412,[[]]],[11,"into_any_arc","","",412,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",412,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",412,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",412,[[],["any",8]]],[11,"as_any_mut","","",412,[[],["any",8]]],[11,"from","","",413,[[]]],[11,"into","","",413,[[]]],[11,"borrow","","",413,[[]]],[11,"borrow_mut","","",413,[[]]],[11,"try_from","","",413,[[],["result",4]]],[11,"try_into","","",413,[[],["result",4]]],[11,"type_id","","",413,[[],["typeid",3]]],[11,"vzip","","",413,[[]]],[11,"init","","",413,[[]]],[11,"deref","","",413,[[]]],[11,"deref_mut","","",413,[[]]],[11,"drop","","",413,[[]]],[11,"into_any_arc","","",413,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",413,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",413,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",413,[[],["any",8]]],[11,"as_any_mut","","",413,[[],["any",8]]],[11,"from","","",415,[[]]],[11,"into","","",415,[[]]],[11,"borrow","","",415,[[]]],[11,"borrow_mut","","",415,[[]]],[11,"try_from","","",415,[[],["result",4]]],[11,"try_into","","",415,[[],["result",4]]],[11,"type_id","","",415,[[],["typeid",3]]],[11,"vzip","","",415,[[]]],[11,"init","","",415,[[]]],[11,"deref","","",415,[[]]],[11,"deref_mut","","",415,[[]]],[11,"drop","","",415,[[]]],[11,"into_any_arc","","",415,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",415,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",415,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",415,[[],["any",8]]],[11,"as_any_mut","","",415,[[],["any",8]]],[11,"from","","",416,[[]]],[11,"into","","",416,[[]]],[11,"borrow","","",416,[[]]],[11,"borrow_mut","","",416,[[]]],[11,"try_from","","",416,[[],["result",4]]],[11,"try_into","","",416,[[],["result",4]]],[11,"type_id","","",416,[[],["typeid",3]]],[11,"vzip","","",416,[[]]],[11,"init","","",416,[[]]],[11,"deref","","",416,[[]]],[11,"deref_mut","","",416,[[]]],[11,"drop","","",416,[[]]],[11,"into_any_arc","","",416,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",416,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",416,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",416,[[],["any",8]]],[11,"as_any_mut","","",416,[[],["any",8]]],[11,"from","smoldot::trie::node_value","",417,[[]]],[11,"into","","",417,[[]]],[11,"borrow","","",417,[[]]],[11,"borrow_mut","","",417,[[]]],[11,"try_from","","",417,[[],["result",4]]],[11,"try_into","","",417,[[],["result",4]]],[11,"type_id","","",417,[[],["typeid",3]]],[11,"vzip","","",417,[[]]],[11,"init","","",417,[[]]],[11,"deref","","",417,[[]]],[11,"deref_mut","","",417,[[]]],[11,"drop","","",417,[[]]],[11,"into_any_arc","","",417,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",417,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",417,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",417,[[],["any",8]]],[11,"as_any_mut","","",417,[[],["any",8]]],[11,"from","","",418,[[]]],[11,"into","","",418,[[]]],[11,"borrow","","",418,[[]]],[11,"borrow_mut","","",418,[[]]],[11,"try_from","","",418,[[],["result",4]]],[11,"try_into","","",418,[[],["result",4]]],[11,"type_id","","",418,[[],["typeid",3]]],[11,"vzip","","",418,[[]]],[11,"init","","",418,[[]]],[11,"deref","","",418,[[]]],[11,"deref_mut","","",418,[[]]],[11,"drop","","",418,[[]]],[11,"into_any_arc","","",418,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",418,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",418,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",418,[[],["any",8]]],[11,"as_any_mut","","",418,[[],["any",8]]],[11,"from","","",421,[[]]],[11,"into","","",421,[[]]],[11,"to_owned","","",421,[[]]],[11,"clone_into","","",421,[[]]],[11,"borrow","","",421,[[]]],[11,"borrow_mut","","",421,[[]]],[11,"try_from","","",421,[[],["result",4]]],[11,"try_into","","",421,[[],["result",4]]],[11,"type_id","","",421,[[],["typeid",3]]],[11,"as_byte_slice","","",421,[[]]],[11,"as_slice_of","","",421,[[],[["error",4],["result",4]]]],[11,"vzip","","",421,[[]]],[11,"init","","",421,[[]]],[11,"deref","","",421,[[]]],[11,"deref_mut","","",421,[[]]],[11,"drop","","",421,[[]]],[11,"into_any_arc","","",421,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",421,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",421,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",421,[[],["any",8]]],[11,"as_any_mut","","",421,[[],["any",8]]],[11,"as_bits","","",421,[[],["bitslice",3]]],[11,"encode_hex","","",421,[[]]],[11,"encode_hex_upper","","",421,[[]]],[11,"from","smoldot::trie::proof_verify","",422,[[]]],[11,"into","","",422,[[]]],[11,"borrow","","",422,[[]]],[11,"borrow_mut","","",422,[[]]],[11,"try_from","","",422,[[],["result",4]]],[11,"try_into","","",422,[[],["result",4]]],[11,"type_id","","",422,[[],["typeid",3]]],[11,"vzip","","",422,[[]]],[11,"init","","",422,[[]]],[11,"deref","","",422,[[]]],[11,"deref_mut","","",422,[[]]],[11,"drop","","",422,[[]]],[11,"into_any_arc","","",422,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",422,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",422,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",422,[[],["any",8]]],[11,"as_any_mut","","",422,[[],["any",8]]],[11,"from","","",423,[[]]],[11,"into","","",423,[[]]],[11,"to_string","","",423,[[],["string",3]]],[11,"borrow","","",423,[[]]],[11,"borrow_mut","","",423,[[]]],[11,"try_from","","",423,[[],["result",4]]],[11,"try_into","","",423,[[],["result",4]]],[11,"type_id","","",423,[[],["typeid",3]]],[11,"vzip","","",423,[[]]],[11,"init","","",423,[[]]],[11,"deref","","",423,[[]]],[11,"deref_mut","","",423,[[]]],[11,"drop","","",423,[[]]],[11,"into_any_arc","","",423,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",423,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",423,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",423,[[],["any",8]]],[11,"as_any_mut","","",423,[[],["any",8]]],[11,"from","smoldot::trie::trie_structure","",424,[[]]],[11,"into","","",424,[[]]],[11,"borrow","","",424,[[]]],[11,"borrow_mut","","",424,[[]]],[11,"try_from","","",424,[[],["result",4]]],[11,"try_into","","",424,[[],["result",4]]],[11,"type_id","","",424,[[],["typeid",3]]],[11,"vzip","","",424,[[]]],[11,"init","","",424,[[]]],[11,"deref","","",424,[[]]],[11,"deref_mut","","",424,[[]]],[11,"drop","","",424,[[]]],[11,"into_any_arc","","",424,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",424,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",424,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",424,[[],["any",8]]],[11,"as_any_mut","","",424,[[],["any",8]]],[11,"from","","",542,[[]]],[11,"into","","",542,[[]]],[11,"to_owned","","",542,[[]]],[11,"clone_into","","",542,[[]]],[11,"borrow","","",542,[[]]],[11,"borrow_mut","","",542,[[]]],[11,"try_from","","",542,[[],["result",4]]],[11,"try_into","","",542,[[],["result",4]]],[11,"type_id","","",542,[[],["typeid",3]]],[11,"get_hash","","",542,[[]]],[11,"vzip","","",542,[[]]],[11,"init","","",542,[[]]],[11,"deref","","",542,[[]]],[11,"deref_mut","","",542,[[]]],[11,"drop","","",542,[[]]],[11,"into_any_arc","","",542,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",542,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",542,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",542,[[],["any",8]]],[11,"as_any_mut","","",542,[[],["any",8]]],[11,"get_hash","","",542,[[]]],[11,"equivalent","","",542,[[]]],[11,"from","","",425,[[]]],[11,"into","","",425,[[]]],[11,"borrow","","",425,[[]]],[11,"borrow_mut","","",425,[[]]],[11,"try_from","","",425,[[],["result",4]]],[11,"try_into","","",425,[[],["result",4]]],[11,"type_id","","",425,[[],["typeid",3]]],[11,"vzip","","",425,[[]]],[11,"init","","",425,[[]]],[11,"deref","","",425,[[]]],[11,"deref_mut","","",425,[[]]],[11,"drop","","",425,[[]]],[11,"into_any_arc","","",425,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",425,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",425,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",425,[[],["any",8]]],[11,"as_any_mut","","",425,[[],["any",8]]],[11,"from","","",426,[[]]],[11,"into","","",426,[[]]],[11,"borrow","","",426,[[]]],[11,"borrow_mut","","",426,[[]]],[11,"try_from","","",426,[[],["result",4]]],[11,"try_into","","",426,[[],["result",4]]],[11,"type_id","","",426,[[],["typeid",3]]],[11,"vzip","","",426,[[]]],[11,"init","","",426,[[]]],[11,"deref","","",426,[[]]],[11,"deref_mut","","",426,[[]]],[11,"drop","","",426,[[]]],[11,"into_any_arc","","",426,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",426,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",426,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",426,[[],["any",8]]],[11,"as_any_mut","","",426,[[],["any",8]]],[11,"from","","",427,[[]]],[11,"into","","",427,[[]]],[11,"borrow","","",427,[[]]],[11,"borrow_mut","","",427,[[]]],[11,"try_from","","",427,[[],["result",4]]],[11,"try_into","","",427,[[],["result",4]]],[11,"type_id","","",427,[[],["typeid",3]]],[11,"vzip","","",427,[[]]],[11,"init","","",427,[[]]],[11,"deref","","",427,[[]]],[11,"deref_mut","","",427,[[]]],[11,"drop","","",427,[[]]],[11,"into_any_arc","","",427,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",427,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",427,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",427,[[],["any",8]]],[11,"as_any_mut","","",427,[[],["any",8]]],[11,"from","","",428,[[]]],[11,"into","","",428,[[]]],[11,"borrow","","",428,[[]]],[11,"borrow_mut","","",428,[[]]],[11,"try_from","","",428,[[],["result",4]]],[11,"try_into","","",428,[[],["result",4]]],[11,"type_id","","",428,[[],["typeid",3]]],[11,"vzip","","",428,[[]]],[11,"init","","",428,[[]]],[11,"deref","","",428,[[]]],[11,"deref_mut","","",428,[[]]],[11,"drop","","",428,[[]]],[11,"into_any_arc","","",428,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",428,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",428,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",428,[[],["any",8]]],[11,"as_any_mut","","",428,[[],["any",8]]],[11,"from","","",433,[[]]],[11,"into","","",433,[[]]],[11,"borrow","","",433,[[]]],[11,"borrow_mut","","",433,[[]]],[11,"try_from","","",433,[[],["result",4]]],[11,"try_into","","",433,[[],["result",4]]],[11,"type_id","","",433,[[],["typeid",3]]],[11,"vzip","","",433,[[]]],[11,"init","","",433,[[]]],[11,"deref","","",433,[[]]],[11,"deref_mut","","",433,[[]]],[11,"drop","","",433,[[]]],[11,"into_any_arc","","",433,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",433,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",433,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",433,[[],["any",8]]],[11,"as_any_mut","","",433,[[],["any",8]]],[11,"from","","",434,[[]]],[11,"into","","",434,[[]]],[11,"borrow","","",434,[[]]],[11,"borrow_mut","","",434,[[]]],[11,"try_from","","",434,[[],["result",4]]],[11,"try_into","","",434,[[],["result",4]]],[11,"type_id","","",434,[[],["typeid",3]]],[11,"vzip","","",434,[[]]],[11,"init","","",434,[[]]],[11,"deref","","",434,[[]]],[11,"deref_mut","","",434,[[]]],[11,"drop","","",434,[[]]],[11,"into_any_arc","","",434,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",434,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",434,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",434,[[],["any",8]]],[11,"as_any_mut","","",434,[[],["any",8]]],[11,"from","","",435,[[]]],[11,"into","","",435,[[]]],[11,"borrow","","",435,[[]]],[11,"borrow_mut","","",435,[[]]],[11,"try_from","","",435,[[],["result",4]]],[11,"try_into","","",435,[[],["result",4]]],[11,"type_id","","",435,[[],["typeid",3]]],[11,"vzip","","",435,[[]]],[11,"init","","",435,[[]]],[11,"deref","","",435,[[]]],[11,"deref_mut","","",435,[[]]],[11,"drop","","",435,[[]]],[11,"into_any_arc","","",435,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",435,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",435,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",435,[[],["any",8]]],[11,"as_any_mut","","",435,[[],["any",8]]],[11,"from","","",436,[[]]],[11,"into","","",436,[[]]],[11,"borrow","","",436,[[]]],[11,"borrow_mut","","",436,[[]]],[11,"try_from","","",436,[[],["result",4]]],[11,"try_into","","",436,[[],["result",4]]],[11,"type_id","","",436,[[],["typeid",3]]],[11,"vzip","","",436,[[]]],[11,"init","","",436,[[]]],[11,"deref","","",436,[[]]],[11,"deref_mut","","",436,[[]]],[11,"drop","","",436,[[]]],[11,"into_any_arc","","",436,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",436,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",436,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",436,[[],["any",8]]],[11,"as_any_mut","","",436,[[],["any",8]]],[11,"from","","",437,[[]]],[11,"into","","",437,[[]]],[11,"borrow","","",437,[[]]],[11,"borrow_mut","","",437,[[]]],[11,"try_from","","",437,[[],["result",4]]],[11,"try_into","","",437,[[],["result",4]]],[11,"type_id","","",437,[[],["typeid",3]]],[11,"vzip","","",437,[[]]],[11,"init","","",437,[[]]],[11,"deref","","",437,[[]]],[11,"deref_mut","","",437,[[]]],[11,"drop","","",437,[[]]],[11,"into_any_arc","","",437,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",437,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",437,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",437,[[],["any",8]]],[11,"as_any_mut","","",437,[[],["any",8]]],[11,"from","smoldot::trie","",439,[[]]],[11,"into","","",439,[[]]],[11,"borrow","","",439,[[]]],[11,"borrow_mut","","",439,[[]]],[11,"try_from","","",439,[[],["result",4]]],[11,"try_into","","",439,[[],["result",4]]],[11,"type_id","","",439,[[],["typeid",3]]],[11,"vzip","","",439,[[]]],[11,"init","","",439,[[]]],[11,"deref","","",439,[[]]],[11,"deref_mut","","",439,[[]]],[11,"drop","","",439,[[]]],[11,"into_any_arc","","",439,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",439,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",439,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",439,[[],["any",8]]],[11,"as_any_mut","","",439,[[],["any",8]]],[11,"from","smoldot::verify::aura","",440,[[]]],[11,"into","","",440,[[]]],[11,"borrow","","",440,[[]]],[11,"borrow_mut","","",440,[[]]],[11,"try_from","","",440,[[],["result",4]]],[11,"try_into","","",440,[[],["result",4]]],[11,"type_id","","",440,[[],["typeid",3]]],[11,"vzip","","",440,[[]]],[11,"init","","",440,[[]]],[11,"deref","","",440,[[]]],[11,"deref_mut","","",440,[[]]],[11,"drop","","",440,[[]]],[11,"into_any_arc","","",440,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",440,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",440,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",440,[[],["any",8]]],[11,"as_any_mut","","",440,[[],["any",8]]],[11,"from","","",441,[[]]],[11,"into","","",441,[[]]],[11,"borrow","","",441,[[]]],[11,"borrow_mut","","",441,[[]]],[11,"try_from","","",441,[[],["result",4]]],[11,"try_into","","",441,[[],["result",4]]],[11,"type_id","","",441,[[],["typeid",3]]],[11,"vzip","","",441,[[]]],[11,"init","","",441,[[]]],[11,"deref","","",441,[[]]],[11,"deref_mut","","",441,[[]]],[11,"drop","","",441,[[]]],[11,"into_any_arc","","",441,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",441,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",441,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",441,[[],["any",8]]],[11,"as_any_mut","","",441,[[],["any",8]]],[11,"from","","",442,[[]]],[11,"into","","",442,[[]]],[11,"to_string","","",442,[[],["string",3]]],[11,"borrow","","",442,[[]]],[11,"borrow_mut","","",442,[[]]],[11,"try_from","","",442,[[],["result",4]]],[11,"try_into","","",442,[[],["result",4]]],[11,"type_id","","",442,[[],["typeid",3]]],[11,"vzip","","",442,[[]]],[11,"init","","",442,[[]]],[11,"deref","","",442,[[]]],[11,"deref_mut","","",442,[[]]],[11,"drop","","",442,[[]]],[11,"into_any_arc","","",442,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",442,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",442,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",442,[[],["any",8]]],[11,"as_any_mut","","",442,[[],["any",8]]],[11,"from","smoldot::verify::babe","",443,[[]]],[11,"into","","",443,[[]]],[11,"borrow","","",443,[[]]],[11,"borrow_mut","","",443,[[]]],[11,"try_from","","",443,[[],["result",4]]],[11,"try_into","","",443,[[],["result",4]]],[11,"type_id","","",443,[[],["typeid",3]]],[11,"vzip","","",443,[[]]],[11,"init","","",443,[[]]],[11,"deref","","",443,[[]]],[11,"deref_mut","","",443,[[]]],[11,"drop","","",443,[[]]],[11,"into_any_arc","","",443,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",443,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",443,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",443,[[],["any",8]]],[11,"as_any_mut","","",443,[[],["any",8]]],[11,"from","","",444,[[]]],[11,"into","","",444,[[]]],[11,"borrow","","",444,[[]]],[11,"borrow_mut","","",444,[[]]],[11,"try_from","","",444,[[],["result",4]]],[11,"try_into","","",444,[[],["result",4]]],[11,"type_id","","",444,[[],["typeid",3]]],[11,"vzip","","",444,[[]]],[11,"init","","",444,[[]]],[11,"deref","","",444,[[]]],[11,"deref_mut","","",444,[[]]],[11,"drop","","",444,[[]]],[11,"into_any_arc","","",444,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",444,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",444,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",444,[[],["any",8]]],[11,"as_any_mut","","",444,[[],["any",8]]],[11,"from","","",445,[[]]],[11,"into","","",445,[[]]],[11,"to_string","","",445,[[],["string",3]]],[11,"borrow","","",445,[[]]],[11,"borrow_mut","","",445,[[]]],[11,"try_from","","",445,[[],["result",4]]],[11,"try_into","","",445,[[],["result",4]]],[11,"type_id","","",445,[[],["typeid",3]]],[11,"vzip","","",445,[[]]],[11,"init","","",445,[[]]],[11,"deref","","",445,[[]]],[11,"deref_mut","","",445,[[]]],[11,"drop","","",445,[[]]],[11,"into_any_arc","","",445,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",445,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",445,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",445,[[],["any",8]]],[11,"as_any_mut","","",445,[[],["any",8]]],[11,"from","smoldot::verify::header_body","",446,[[]]],[11,"into","","",446,[[]]],[11,"borrow","","",446,[[]]],[11,"borrow_mut","","",446,[[]]],[11,"try_from","","",446,[[],["result",4]]],[11,"try_into","","",446,[[],["result",4]]],[11,"type_id","","",446,[[],["typeid",3]]],[11,"vzip","","",446,[[]]],[11,"init","","",446,[[]]],[11,"deref","","",446,[[]]],[11,"deref_mut","","",446,[[]]],[11,"drop","","",446,[[]]],[11,"into_any","","",446,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",446,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",446,[[],["any",8]]],[11,"as_any_mut","","",446,[[],["any",8]]],[11,"from","","",447,[[]]],[11,"into","","",447,[[]]],[11,"borrow","","",447,[[]]],[11,"borrow_mut","","",447,[[]]],[11,"try_from","","",447,[[],["result",4]]],[11,"try_into","","",447,[[],["result",4]]],[11,"type_id","","",447,[[],["typeid",3]]],[11,"vzip","","",447,[[]]],[11,"init","","",447,[[]]],[11,"deref","","",447,[[]]],[11,"deref_mut","","",447,[[]]],[11,"drop","","",447,[[]]],[11,"into_any_arc","","",447,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",447,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",447,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",447,[[],["any",8]]],[11,"as_any_mut","","",447,[[],["any",8]]],[11,"from","","",450,[[]]],[11,"into","","",450,[[]]],[11,"borrow","","",450,[[]]],[11,"borrow_mut","","",450,[[]]],[11,"try_from","","",450,[[],["result",4]]],[11,"try_into","","",450,[[],["result",4]]],[11,"type_id","","",450,[[],["typeid",3]]],[11,"vzip","","",450,[[]]],[11,"init","","",450,[[]]],[11,"deref","","",450,[[]]],[11,"deref_mut","","",450,[[]]],[11,"drop","","",450,[[]]],[11,"into_any","","",450,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",450,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",450,[[],["any",8]]],[11,"as_any_mut","","",450,[[],["any",8]]],[11,"from","","",451,[[]]],[11,"into","","",451,[[]]],[11,"borrow","","",451,[[]]],[11,"borrow_mut","","",451,[[]]],[11,"try_from","","",451,[[],["result",4]]],[11,"try_into","","",451,[[],["result",4]]],[11,"type_id","","",451,[[],["typeid",3]]],[11,"vzip","","",451,[[]]],[11,"init","","",451,[[]]],[11,"deref","","",451,[[]]],[11,"deref_mut","","",451,[[]]],[11,"drop","","",451,[[]]],[11,"into_any_arc","","",451,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",451,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",451,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",451,[[],["any",8]]],[11,"as_any_mut","","",451,[[],["any",8]]],[11,"from","","",454,[[]]],[11,"into","","",454,[[]]],[11,"to_string","","",454,[[],["string",3]]],[11,"borrow","","",454,[[]]],[11,"borrow_mut","","",454,[[]]],[11,"try_from","","",454,[[],["result",4]]],[11,"try_into","","",454,[[],["result",4]]],[11,"type_id","","",454,[[],["typeid",3]]],[11,"vzip","","",454,[[]]],[11,"init","","",454,[[]]],[11,"deref","","",454,[[]]],[11,"deref_mut","","",454,[[]]],[11,"drop","","",454,[[]]],[11,"into_any_arc","","",454,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",454,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",454,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",454,[[],["any",8]]],[11,"as_any_mut","","",454,[[],["any",8]]],[11,"from","","",455,[[]]],[11,"into","","",455,[[]]],[11,"borrow","","",455,[[]]],[11,"borrow_mut","","",455,[[]]],[11,"try_from","","",455,[[],["result",4]]],[11,"try_into","","",455,[[],["result",4]]],[11,"type_id","","",455,[[],["typeid",3]]],[11,"vzip","","",455,[[]]],[11,"init","","",455,[[]]],[11,"deref","","",455,[[]]],[11,"deref_mut","","",455,[[]]],[11,"drop","","",455,[[]]],[11,"into_any","","",455,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",455,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",455,[[],["any",8]]],[11,"as_any_mut","","",455,[[],["any",8]]],[11,"from","","",456,[[]]],[11,"into","","",456,[[]]],[11,"borrow","","",456,[[]]],[11,"borrow_mut","","",456,[[]]],[11,"try_from","","",456,[[],["result",4]]],[11,"try_into","","",456,[[],["result",4]]],[11,"type_id","","",456,[[],["typeid",3]]],[11,"vzip","","",456,[[]]],[11,"init","","",456,[[]]],[11,"deref","","",456,[[]]],[11,"deref_mut","","",456,[[]]],[11,"drop","","",456,[[]]],[11,"into_any","","",456,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",456,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",456,[[],["any",8]]],[11,"as_any_mut","","",456,[[],["any",8]]],[11,"from","","",457,[[]]],[11,"into","","",457,[[]]],[11,"borrow","","",457,[[]]],[11,"borrow_mut","","",457,[[]]],[11,"try_from","","",457,[[],["result",4]]],[11,"try_into","","",457,[[],["result",4]]],[11,"type_id","","",457,[[],["typeid",3]]],[11,"vzip","","",457,[[]]],[11,"init","","",457,[[]]],[11,"deref","","",457,[[]]],[11,"deref_mut","","",457,[[]]],[11,"drop","","",457,[[]]],[11,"into_any","","",457,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",457,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",457,[[],["any",8]]],[11,"as_any_mut","","",457,[[],["any",8]]],[11,"from","","",458,[[]]],[11,"into","","",458,[[]]],[11,"borrow","","",458,[[]]],[11,"borrow_mut","","",458,[[]]],[11,"try_from","","",458,[[],["result",4]]],[11,"try_into","","",458,[[],["result",4]]],[11,"type_id","","",458,[[],["typeid",3]]],[11,"vzip","","",458,[[]]],[11,"init","","",458,[[]]],[11,"deref","","",458,[[]]],[11,"deref_mut","","",458,[[]]],[11,"drop","","",458,[[]]],[11,"into_any","","",458,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",458,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",458,[[],["any",8]]],[11,"as_any_mut","","",458,[[],["any",8]]],[11,"from","","",459,[[]]],[11,"into","","",459,[[]]],[11,"borrow","","",459,[[]]],[11,"borrow_mut","","",459,[[]]],[11,"try_from","","",459,[[],["result",4]]],[11,"try_into","","",459,[[],["result",4]]],[11,"type_id","","",459,[[],["typeid",3]]],[11,"vzip","","",459,[[]]],[11,"init","","",459,[[]]],[11,"deref","","",459,[[]]],[11,"deref_mut","","",459,[[]]],[11,"drop","","",459,[[]]],[11,"into_any","","",459,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",459,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",459,[[],["any",8]]],[11,"as_any_mut","","",459,[[],["any",8]]],[11,"from","smoldot::verify::header_only","",460,[[]]],[11,"into","","",460,[[]]],[11,"borrow","","",460,[[]]],[11,"borrow_mut","","",460,[[]]],[11,"try_from","","",460,[[],["result",4]]],[11,"try_into","","",460,[[],["result",4]]],[11,"type_id","","",460,[[],["typeid",3]]],[11,"vzip","","",460,[[]]],[11,"init","","",460,[[]]],[11,"deref","","",460,[[]]],[11,"deref_mut","","",460,[[]]],[11,"drop","","",460,[[]]],[11,"into_any_arc","","",460,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",460,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",460,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",460,[[],["any",8]]],[11,"as_any_mut","","",460,[[],["any",8]]],[11,"from","","",461,[[]]],[11,"into","","",461,[[]]],[11,"borrow","","",461,[[]]],[11,"borrow_mut","","",461,[[]]],[11,"try_from","","",461,[[],["result",4]]],[11,"try_into","","",461,[[],["result",4]]],[11,"type_id","","",461,[[],["typeid",3]]],[11,"vzip","","",461,[[]]],[11,"init","","",461,[[]]],[11,"deref","","",461,[[]]],[11,"deref_mut","","",461,[[]]],[11,"drop","","",461,[[]]],[11,"into_any_arc","","",461,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",461,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",461,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",461,[[],["any",8]]],[11,"as_any_mut","","",461,[[],["any",8]]],[11,"from","","",464,[[]]],[11,"into","","",464,[[]]],[11,"borrow","","",464,[[]]],[11,"borrow_mut","","",464,[[]]],[11,"try_from","","",464,[[],["result",4]]],[11,"try_into","","",464,[[],["result",4]]],[11,"type_id","","",464,[[],["typeid",3]]],[11,"vzip","","",464,[[]]],[11,"init","","",464,[[]]],[11,"deref","","",464,[[]]],[11,"deref_mut","","",464,[[]]],[11,"drop","","",464,[[]]],[11,"into_any_arc","","",464,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",464,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",464,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",464,[[],["any",8]]],[11,"as_any_mut","","",464,[[],["any",8]]],[11,"from","","",467,[[]]],[11,"into","","",467,[[]]],[11,"to_string","","",467,[[],["string",3]]],[11,"borrow","","",467,[[]]],[11,"borrow_mut","","",467,[[]]],[11,"try_from","","",467,[[],["result",4]]],[11,"try_into","","",467,[[],["result",4]]],[11,"type_id","","",467,[[],["typeid",3]]],[11,"vzip","","",467,[[]]],[11,"init","","",467,[[]]],[11,"deref","","",467,[[]]],[11,"deref_mut","","",467,[[]]],[11,"drop","","",467,[[]]],[11,"into_any_arc","","",467,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",467,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",467,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",467,[[],["any",8]]],[11,"as_any_mut","","",467,[[],["any",8]]],[11,"fmt","smoldot::network","Convert a Multiaddr to a string",501,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","smoldot::libp2p::multiaddr","",271,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",272,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",270,[[["formatter",3]],[["result",4],["error",3]]]],[11,"partial_cmp","smoldot::network","",501,[[["multiaddr",3]],[["ordering",4],["option",4]]]],[11,"lt","","",501,[[["multiaddr",3]]]],[11,"le","","",501,[[["multiaddr",3]]]],[11,"gt","","",501,[[["multiaddr",3]]]],[11,"ge","","",501,[[["multiaddr",3]]]],[11,"next","smoldot::libp2p::multiaddr","",502,[[],["option",4]]],[11,"from_str","smoldot::network","",501,[[],[["result",4],["multiaddr",3],["error",4]]]],[11,"from","smoldot::libp2p::multiaddr","",270,[[["error",4]],["error",4]]],[11,"from","","",271,[[["ipv6addr",3]],["protocol",4]]],[11,"from","","",270,[[["parseinterror",3]],["error",4]]],[11,"from","smoldot::network","",501,[[["protocol",4]],["multiaddr",3]]],[11,"from","smoldot::libp2p::multiaddr","",270,[[["decodeownederror",3]],["error",4]]],[11,"from","","",270,[[["utf8error",3]],["error",4]]],[11,"from","","",270,[[["addrparseerror",3]],["error",4]]],[11,"from","","",271,[[["ipv4addr",3]],["protocol",4]]],[11,"from","smoldot::network","",501,[[["ipv4addr",3]],["multiaddr",3]]],[11,"from","smoldot::libp2p::multiaddr","",521,[[],["onion3addr",3]]],[11,"from","","",270,[[["error",3]],["error",4]]],[11,"from","","",271,[[["ipaddr",4]],["protocol",4]]],[11,"from","","",270,[[["error",4]],["error",4]]],[11,"from","","",270,[[["fromutf8error",3]],["error",4]]],[11,"from","","",521,[[],["onion3addr",3]]],[11,"from","smoldot::network","",501,[[["ipv6addr",3]],["multiaddr",3]]],[11,"from","","",501,[[["ipaddr",4]],["multiaddr",3]]],[11,"as_ref","","",501,[[]]],[11,"hash","","",501,[[]]],[11,"cause","smoldot::libp2p::multiaddr","",270,[[],[["option",4],["error",8]]]],[11,"clone","","",271,[[],["protocol",4]]],[11,"clone","","",521,[[],["onion3addr",3]]],[11,"clone","smoldot::network","",501,[[],["multiaddr",3]]],[11,"deserialize","","",501,[[],[["result",4],["multiaddr",3]]]],[11,"from_iter","","",501,[[],["multiaddr",3]]],[11,"cmp","","",501,[[["multiaddr",3]],["ordering",4]]],[11,"eq","","",501,[[["multiaddr",3]]]],[11,"ne","","",501,[[["multiaddr",3]]]],[11,"eq","smoldot::libp2p::multiaddr","",521,[[["onion3addr",3]]]],[11,"eq","","",271,[[["protocol",4]]]],[11,"ne","","",271,[[["protocol",4]]]],[11,"fmt","","",272,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","smoldot::network","",501,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","smoldot::libp2p::multiaddr","",271,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",521,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",270,[[["formatter",3]],[["result",4],["error",3]]]],[11,"try_from","smoldot::network","",501,[[["vec",3],["global",3]],[["result",4],["multiaddr",3],["error",4]]]],[11,"try_from","","",501,[[],[["result",4],["multiaddr",3],["error",4]]]],[11,"try_from","","",501,[[["string",3]],[["result",4],["multiaddr",3],["error",4]]]],[11,"serialize","","",501,[[],["result",4]]],[11,"fmt","smoldot::libp2p::multiaddr::multihash","",267,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",266,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",268,[[["formatter",3]],[["result",4],["error",3]]]],[11,"partial_cmp","","",504,[[["multihashrefgeneric",3]],[["ordering",4],["option",4]]]],[11,"lt","","",504,[[["multihashrefgeneric",3]]]],[11,"le","","",504,[[["multihashrefgeneric",3]]]],[11,"gt","","",504,[[["multihashrefgeneric",3]]]],[11,"ge","","",504,[[["multihashrefgeneric",3]]]],[11,"partial_cmp","","",503,[[["multihashgeneric",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",269,[[["code",4]],[["ordering",4],["option",4]]]],[11,"deref","","",504,[[]]],[11,"deref","","",503,[[]]],[11,"code","","",511,[[],["code",4]]],[11,"digest","","",511,[[],[["code",4],["multihashgeneric",3]]]],[11,"input","","",511,[[]]],[11,"result","","",511,[[],[["code",4],["multihashgeneric",3]]]],[11,"result_reset","","",511,[[],[["code",4],["multihashgeneric",3]]]],[11,"reset","","",511,[[]]],[11,"code","","",508,[[],["code",4]]],[11,"digest","","",508,[[],[["code",4],["multihashgeneric",3]]]],[11,"input","","",508,[[]]],[11,"result","","",508,[[],[["code",4],["multihashgeneric",3]]]],[11,"result_reset","","",508,[[],[["code",4],["multihashgeneric",3]]]],[11,"reset","","",508,[[]]],[11,"code","","",515,[[],["code",4]]],[11,"digest","","",515,[[],[["code",4],["multihashgeneric",3]]]],[11,"input","","",515,[[]]],[11,"result","","",515,[[],[["code",4],["multihashgeneric",3]]]],[11,"result_reset","","",515,[[],[["code",4],["multihashgeneric",3]]]],[11,"reset","","",515,[[]]],[11,"code","","",514,[[],["code",4]]],[11,"digest","","",514,[[],[["code",4],["multihashgeneric",3]]]],[11,"input","","",514,[[]]],[11,"result","","",514,[[],[["code",4],["multihashgeneric",3]]]],[11,"result_reset","","",514,[[],[["code",4],["multihashgeneric",3]]]],[11,"reset","","",514,[[]]],[11,"code","","",517,[[],["code",4]]],[11,"digest","","",517,[[],[["code",4],["multihashgeneric",3]]]],[11,"input","","",517,[[]]],[11,"result","","",517,[[],[["code",4],["multihashgeneric",3]]]],[11,"result_reset","","",517,[[],[["code",4],["multihashgeneric",3]]]],[11,"reset","","",517,[[]]],[11,"code","","",506,[[],["code",4]]],[11,"digest","","",506,[[],[["code",4],["multihashgeneric",3]]]],[11,"input","","",506,[[]]],[11,"result","","",506,[[],[["code",4],["multihashgeneric",3]]]],[11,"result_reset","","",506,[[],[["code",4],["multihashgeneric",3]]]],[11,"reset","","",506,[[]]],[11,"code","","",510,[[],["code",4]]],[11,"digest","","",510,[[],[["code",4],["multihashgeneric",3]]]],[11,"input","","",510,[[]]],[11,"result","","",510,[[],[["code",4],["multihashgeneric",3]]]],[11,"result_reset","","",510,[[],[["code",4],["multihashgeneric",3]]]],[11,"reset","","",510,[[]]],[11,"code","","",513,[[],["code",4]]],[11,"digest","","",513,[[],[["code",4],["multihashgeneric",3]]]],[11,"input","","",513,[[]]],[11,"result","","",513,[[],[["code",4],["multihashgeneric",3]]]],[11,"result_reset","","",513,[[],[["code",4],["multihashgeneric",3]]]],[11,"reset","","",513,[[]]],[11,"code","","",505,[[],["code",4]]],[11,"digest","","",505,[[],[["code",4],["multihashgeneric",3]]]],[11,"input","","",505,[[]]],[11,"result","","",505,[[],[["code",4],["multihashgeneric",3]]]],[11,"result_reset","","",505,[[],[["code",4],["multihashgeneric",3]]]],[11,"reset","","",505,[[]]],[11,"code","","",519,[[],["code",4]]],[11,"digest","","",519,[[],[["code",4],["multihashgeneric",3]]]],[11,"input","","",519,[[]]],[11,"result","","",519,[[],[["code",4],["multihashgeneric",3]]]],[11,"result_reset","","",519,[[],[["code",4],["multihashgeneric",3]]]],[11,"reset","","",519,[[]]],[11,"code","","",507,[[],["code",4]]],[11,"digest","","",507,[[],[["code",4],["multihashgeneric",3]]]],[11,"input","","",507,[[]]],[11,"result","","",507,[[],[["code",4],["multihashgeneric",3]]]],[11,"result_reset","","",507,[[],[["code",4],["multihashgeneric",3]]]],[11,"reset","","",507,[[]]],[11,"code","","",509,[[],["code",4]]],[11,"digest","","",509,[[],[["code",4],["multihashgeneric",3]]]],[11,"input","","",509,[[]]],[11,"result","","",509,[[],[["code",4],["multihashgeneric",3]]]],[11,"result_reset","","",509,[[],[["code",4],["multihashgeneric",3]]]],[11,"reset","","",509,[[]]],[11,"code","","",516,[[],["code",4]]],[11,"digest","","",516,[[],[["code",4],["multihashgeneric",3]]]],[11,"input","","",516,[[]]],[11,"result","","",516,[[],[["code",4],["multihashgeneric",3]]]],[11,"result_reset","","",516,[[],[["code",4],["multihashgeneric",3]]]],[11,"reset","","",516,[[]]],[11,"code","","",520,[[],["code",4]]],[11,"digest","","",520,[[],[["code",4],["multihashgeneric",3]]]],[11,"input","","",520,[[]]],[11,"result","","",520,[[],[["code",4],["multihashgeneric",3]]]],[11,"result_reset","","",520,[[],[["code",4],["multihashgeneric",3]]]],[11,"reset","","",520,[[]]],[11,"code","","",512,[[],["code",4]]],[11,"digest","","",512,[[],[["code",4],["multihashgeneric",3]]]],[11,"input","","",512,[[]]],[11,"result","","",512,[[],[["code",4],["multihashgeneric",3]]]],[11,"result_reset","","",512,[[],[["code",4],["multihashgeneric",3]]]],[11,"reset","","",512,[[]]],[11,"code","","",518,[[],["code",4]]],[11,"digest","","",518,[[],[["code",4],["multihashgeneric",3]]]],[11,"input","","",518,[[]]],[11,"result","","",518,[[],[["code",4],["multihashgeneric",3]]]],[11,"result_reset","","",518,[[],[["code",4],["multihashgeneric",3]]]],[11,"reset","","",518,[[]]],[11,"as_ref","","",503,[[]]],[11,"hash","","",504,[[]]],[11,"hash","","",503,[[]]],[11,"hash","","",269,[[]]],[11,"default","","",520,[[],["blake2s256",3]]],[11,"default","","",513,[[],["keccak224",3]]],[11,"default","","",506,[[],["sha1",3]]],[11,"default","","",510,[[],["sha3_256",3]]],[11,"default","","",505,[[],["identity",3]]],[11,"default","","",517,[[],["blake2b256",3]]],[11,"default","","",519,[[],["blake2s128",3]]],[11,"default","","",515,[[],["keccak384",3]]],[11,"default","","",514,[[],["keccak256",3]]],[11,"default","","",507,[[],["sha2_256",3]]],[11,"default","","",509,[[],["sha3_224",3]]],[11,"default","","",512,[[],["sha3_512",3]]],[11,"default","","",508,[[],["sha2_512",3]]],[11,"default","","",511,[[],["sha3_384",3]]],[11,"default","","",518,[[],["blake2b512",3]]],[11,"default","","",516,[[],["keccak512",3]]],[11,"into","","",504,[[],[["vec",3],["global",3]]]],[11,"into","","",503,[[],[["vec",3],["global",3]]]],[11,"clone","","",269,[[],["code",4]]],[11,"clone","","",504,[[],["multihashrefgeneric",3]]],[11,"clone","","",267,[[],["decodeownederror",3]]],[11,"clone","","",512,[[],["sha3_512",3]]],[11,"clone","","",266,[[],["decodeerror",4]]],[11,"clone","","",520,[[],["blake2s256",3]]],[11,"clone","","",509,[[],["sha3_224",3]]],[11,"clone","","",506,[[],["sha1",3]]],[11,"clone","","",268,[[],["encodeerror",4]]],[11,"clone","","",517,[[],["blake2b256",3]]],[11,"clone","","",505,[[],["identity",3]]],[11,"clone","","",519,[[],["blake2s128",3]]],[11,"clone","","",508,[[],["sha2_512",3]]],[11,"clone","","",516,[[],["keccak512",3]]],[11,"clone","","",514,[[],["keccak256",3]]],[11,"clone","","",513,[[],["keccak224",3]]],[11,"clone","","",503,[[],["multihashgeneric",3]]],[11,"clone","","",518,[[],["blake2b512",3]]],[11,"clone","","",511,[[],["sha3_384",3]]],[11,"clone","","",515,[[],["keccak384",3]]],[11,"clone","","",507,[[],["sha2_256",3]]],[11,"clone","","",510,[[],["sha3_256",3]]],[11,"cmp","","",269,[[["code",4]],["ordering",4]]],[11,"cmp","","",503,[[["multihashgeneric",3]],["ordering",4]]],[11,"cmp","","",504,[[["multihashrefgeneric",3]],["ordering",4]]],[11,"eq","","",504,[[["multihashgeneric",3]]]],[11,"eq","","",267,[[["decodeownederror",3]]]],[11,"ne","","",267,[[["decodeownederror",3]]]],[11,"eq","","",269,[[["code",4]]]],[11,"eq","","",266,[[["decodeerror",4]]]],[11,"eq","","",504,[[["multihashrefgeneric",3]]]],[11,"ne","","",504,[[["multihashrefgeneric",3]]]],[11,"eq","","",268,[[["encodeerror",4]]]],[11,"eq","","",503,[[["multihashrefgeneric",3]]]],[11,"eq","","",503,[[["multihashgeneric",3]]]],[11,"digest","","",520,[[],[["code",4],["multihashgeneric",3]]]],[11,"digest","","",514,[[],[["code",4],["multihashgeneric",3]]]],[11,"digest","","",518,[[],[["code",4],["multihashgeneric",3]]]],[11,"digest","","",512,[[],[["code",4],["multihashgeneric",3]]]],[11,"digest","","",516,[[],[["code",4],["multihashgeneric",3]]]],[11,"digest","","",506,[[],[["code",4],["multihashgeneric",3]]]],[11,"digest","","",507,[[],[["code",4],["multihashgeneric",3]]]],[11,"digest","","",517,[[],[["code",4],["multihashgeneric",3]]]],[11,"digest","","",511,[[],[["code",4],["multihashgeneric",3]]]],[11,"digest","","",519,[[],[["code",4],["multihashgeneric",3]]]],[11,"digest","","",505,[[],[["code",4],["multihashgeneric",3]]]],[11,"digest","","",510,[[],[["code",4],["multihashgeneric",3]]]],[11,"digest","","",509,[[],[["code",4],["multihashgeneric",3]]]],[11,"digest","","",508,[[],[["code",4],["multihashgeneric",3]]]],[11,"digest","","",515,[[],[["code",4],["multihashgeneric",3]]]],[11,"digest","","",513,[[],[["code",4],["multihashgeneric",3]]]],[11,"write","","",512,[[],[["result",4],["error",3]]]],[11,"flush","","",512,[[],[["result",4],["error",3]]]],[11,"write","","",515,[[],[["result",4],["error",3]]]],[11,"flush","","",515,[[],[["result",4],["error",3]]]],[11,"write","","",516,[[],[["result",4],["error",3]]]],[11,"flush","","",516,[[],[["result",4],["error",3]]]],[11,"write","","",514,[[],[["result",4],["error",3]]]],[11,"flush","","",514,[[],[["result",4],["error",3]]]],[11,"write","","",511,[[],[["result",4],["error",3]]]],[11,"flush","","",511,[[],[["result",4],["error",3]]]],[11,"write","","",513,[[],[["result",4],["error",3]]]],[11,"flush","","",513,[[],[["result",4],["error",3]]]],[11,"write","","",509,[[],[["result",4],["error",3]]]],[11,"flush","","",509,[[],[["result",4],["error",3]]]],[11,"write","","",508,[[],[["result",4],["error",3]]]],[11,"flush","","",508,[[],[["result",4],["error",3]]]],[11,"write","","",505,[[],[["result",4],["error",3]]]],[11,"flush","","",505,[[],[["result",4],["error",3]]]],[11,"write","","",520,[[],[["result",4],["error",3]]]],[11,"flush","","",520,[[],[["result",4],["error",3]]]],[11,"write","","",506,[[],[["result",4],["error",3]]]],[11,"flush","","",506,[[],[["result",4],["error",3]]]],[11,"write","","",507,[[],[["result",4],["error",3]]]],[11,"flush","","",507,[[],[["result",4],["error",3]]]],[11,"write","","",510,[[],[["result",4],["error",3]]]],[11,"flush","","",510,[[],[["result",4],["error",3]]]],[11,"write","","",519,[[],[["result",4],["error",3]]]],[11,"flush","","",519,[[],[["result",4],["error",3]]]],[11,"write","","",518,[[],[["result",4],["error",3]]]],[11,"flush","","",518,[[],[["result",4],["error",3]]]],[11,"write","","",517,[[],[["result",4],["error",3]]]],[11,"flush","","",517,[[],[["result",4],["error",3]]]],[11,"fmt","","",520,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",504,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",512,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",269,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",505,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",514,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",519,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",507,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",513,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",267,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",503,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",511,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",509,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",266,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",506,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",516,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",518,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",517,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",510,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",515,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",508,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",268,[[["formatter",3]],[["result",4],["error",3]]]],[11,"borrow","","",503,[[]]],[11,"try_from","","Return the <code>Code</code> based on the integer value. Error if no …",269,[[],[["result",4],["code",4]]]],[11,"try_from","","",503,[[["vec",3],["global",3]],[["result",4],["multihashgeneric",3]]]],[11,"drop","smoldot::chain::blocks_tree","",469,[[]]],[11,"drop","","",475,[[]]],[11,"drop","smoldot::chain::fork_tree","",477,[[]]],[11,"drop","smoldot::chain::sync::optimistic","",481,[[]]],[11,"as_ref","smoldot::executor","",176,[[]]],[11,"as_ref","smoldot::libp2p::peer_id","",324,[[]]],[11,"as_ref","smoldot::trie::node_value","",421,[[]]],[11,"from","smoldot::author::build","",16,[[["error",4]],["error",4]]],[11,"from","smoldot::chain::chain_information","",67,[[["chaininformationref",3]],["chaininformation",3]]],[11,"from","","",71,[[["babeepochinformationref",3]],["babeepochinformation",3]]],[11,"from","","",76,[[["chaininformation",3]],["chaininformationref",3]]],[11,"from","","",80,[[["babeepochinformation",3]],["babeepochinformationref",3]]],[11,"from","smoldot::database::full_sled","",111,[[["corruptederror",4]],["accesserror",4]]],[11,"from","","",111,[[["slederror",3]],["accesserror",4]]],[11,"from","","",112,[[["error",4]],["inserterror",4]]],[11,"from","","",112,[[["accesserror",4]],["inserterror",4]]],[11,"from","","",113,[[["accesserror",4]],["setfinalizederror",4]]],[11,"from","","",114,[[["accesserror",4]],["finalizedaccesserror",4]]],[11,"from","","",114,[[],["finalizedaccesserror",4]]],[11,"from","smoldot::executor::host","",117,[[["externalstoragechangesroot",3]],["hostvm",4]]],[11,"from","","",117,[[["readytorun",3]],["hostvm",4]]],[11,"from","","",117,[[["finished",3]],["hostvm",4]]],[11,"from","","",117,[[["externalstoragenextkey",3]],["hostvm",4]]],[11,"from","","",117,[[["logemit",3]],["hostvm",4]]],[11,"from","","",117,[[["externalstorageclearprefix",3]],["hostvm",4]]],[11,"from","","",117,[[["externalstorageset",3]],["hostvm",4]]],[11,"from","","",117,[[["externaloffchainstorageset",3]],["hostvm",4]]],[11,"from","","",117,[[["externalstorageroot",3]],["hostvm",4]]],[11,"from","","",117,[[["callruntimeversion",3]],["hostvm",4]]],[11,"from","","",117,[[["externalstorageappend",3]],["hostvm",4]]],[11,"from","","",117,[[["startstoragetransaction",3]],["hostvm",4]]],[11,"from","","",117,[[["externalstorageget",3]],["hostvm",4]]],[11,"from","","",134,[[["newerr",4]],["newerr",4]]],[11,"from","","",134,[[],["newerr",4]]],[11,"from","","",135,[[["starterr",4]],["starterr",4]]],[11,"from","","",135,[[],["starterr",4]]],[11,"from","smoldot::finality::justification::decode","",183,[[["justification",3]],["justificationref",3]]],[11,"from","","",184,[[["justificationref",3]],["justification",3]]],[11,"from","","",186,[[["precommit",3]],["precommitref",3]]],[11,"from","","",187,[[["precommitref",3]],["precommit",3]]],[11,"from","smoldot::header","",190,[[["auraconsensuslog",4]]]],[11,"from","","",191,[[["auraconsensuslogref",4]]]],[11,"from","","",192,[[["auraauthority",3]]]],[11,"from","","",193,[[["auraauthorityref",3]]]],[11,"from","","",195,[[["babeconsensuslog",4]]]],[11,"from","","",196,[[["babeconsensuslogref",4]]]],[11,"from","","",197,[[["babenextepoch",3]]]],[11,"from","","",198,[[["babenextepochref",3]]]],[11,"from","","",199,[[["babeauthority",3]]]],[11,"from","","",200,[[["babeauthorityref",3]]]],[11,"from","","",204,[[["babepredigestref",4]]]],[11,"from","","",203,[[["babepredigest",4]]]],[11,"from","","",205,[[["babeprimarypredigest",3]]]],[11,"from","","",206,[[["babeprimarypredigestref",3]]]],[11,"from","","",208,[[["babesecondaryvrfpredigest",3]]]],[11,"from","","",209,[[["babesecondaryvrfpredigestref",3]]]],[11,"from","","",210,[[["grandpaconsensuslog",4]]]],[11,"from","","",212,[[["grandpaconsensuslogref",4]]]],[11,"from","","",214,[[["grandpascheduledchange",3]]]],[11,"from","","",215,[[["grandpascheduledchangeref",3]]]],[11,"from","","",216,[[["grandpaauthority",3]]]],[11,"from","","",217,[[["grandpaauthorityref",3]]]],[11,"from","","",219,[[["header",3]],["headerref",3]]],[11,"from","","",220,[[["headerref",3]],["header",3]]],[11,"from","","",221,[[["digest",3]],["digestref",3]]],[11,"from","","",223,[[["digestref",3]],["digest",3]]],[11,"from","","",224,[[["digestitem",4]],["digestitemref",4]]],[11,"from","","",225,[[["digestitemref",4]],["digestitem",4]]],[11,"from","smoldot::libp2p::connection::handshake","",291,[[],["handshake",4]]],[11,"from","","",291,[[["healthyhandshake",3]],["handshake",4]]],[11,"from","","",291,[[["noisekeyrequired",3]],["handshake",4]]],[11,"from","smoldot::libp2p::connection::yamux","",525,[[["nonzerou32",3]],["substreamid",3]]],[11,"from","smoldot::libp2p::peer_id","",324,[[["publickey",4]],["peerid",3]]],[11,"from","smoldot","",543,[[["peerid",3]]]],[11,"from","smoldot::libp2p::peer_id","",527,[[["error",4]],["bs58decodeerror",3]]],[11,"next","smoldot::chain::blocks_tree","",469,[[],["option",4]]],[11,"size_hint","","",469,[[]]],[11,"next","smoldot::chain::fork_tree","",477,[[],["option",4]]],[11,"size_hint","","",477,[[]]],[11,"next","smoldot::chain::sync::optimistic","",481,[[],["option",4]]],[11,"size_hint","","",481,[[]]],[11,"next","smoldot::finality::justification::decode","",491,[[],["option",4]]],[11,"size_hint","","",491,[[]]],[11,"next","","",492,[[],["option",4]]],[11,"size_hint","","",492,[[]]],[11,"next","smoldot::header","",494,[[],["option",4]]],[11,"size_hint","","",494,[[]]],[11,"next","","",495,[[],["option",4]]],[11,"size_hint","","",495,[[]]],[11,"next","","",496,[[],["option",4]]],[11,"size_hint","","",496,[[]]],[11,"next","","",497,[[],["option",4]]],[11,"size_hint","","",497,[[]]],[11,"next","smoldot::metadata::decode","",533,[[],["option",4]]],[11,"size_hint","","",533,[[]]],[11,"next","smoldot::trie","",541,[[],[["nibble",3],["option",4]]]],[11,"size_hint","","",541,[[]]],[11,"clone","smoldot::author::aura","",1,[[],["slotclaim",3]]],[11,"clone","smoldot::author::runtime","",34,[[],["transactionvalidityerror",4]]],[11,"clone","","",35,[[],["invalidtransaction",4]]],[11,"clone","","",36,[[],["unknowntransaction",4]]],[11,"clone","","",37,[[],["dispatcherror",4]]],[11,"clone","smoldot::chain::blocks_tree","",52,[[],["config",3]]],[11,"clone","smoldot::chain::chain_information::aura_config","",55,[[],["auragenesisconfiguration",3]]],[11,"clone","smoldot::chain::chain_information::babe_config","",58,[[],["babegenesisconfiguration",3]]],[11,"clone","smoldot::chain::chain_information::babe_fetch_epoch","",63,[[],["error",4]]],[11,"clone","smoldot::chain::chain_information","",67,[[],["chaininformation",3]]],[11,"clone","","",68,[[],["chaininformationconsensus",4]]],[11,"clone","","",71,[[],["babeepochinformation",3]]],[11,"clone","","",72,[[],["chaininformationfinality",4]]],[11,"clone","","",75,[[],["finalizedscheduledchange",3]]],[11,"clone","","",76,[[],["chaininformationref",3]]],[11,"clone","","",77,[[],["chaininformationconsensusref",4]]],[11,"clone","","",80,[[],["babeepochinformationref",3]]],[11,"clone","","",81,[[],["chaininformationfinalityref",4]]],[11,"clone","smoldot::chain::fork_tree","",478,[[],["nodeindex",3]]],[11,"clone","smoldot::chain::sync::optimistic","",479,[[],["requestid",3]]],[11,"clone","","",480,[[],["sourceid",3]]],[11,"clone","smoldot::chain_spec","",106,[[],["chainspec",3]]],[11,"clone","smoldot::executor::host","",135,[[],["starterr",4]]],[11,"clone","","",136,[[],["error",4]]],[11,"clone","smoldot::executor::read_only_runtime_host","",148,[[],["error",4]]],[11,"clone","smoldot::executor::runtime_host","",156,[[],["error",4]]],[11,"clone","smoldot::executor::vm","",164,[[],["exechint",4]]],[11,"clone","","",165,[[],["signature",3]]],[11,"clone","","",166,[[],["wasmvalue",4]]],[11,"clone","","",167,[[],["valuetype",4]]],[11,"clone","","",488,[[],["trap",3]]],[11,"clone","","",172,[[],["starterr",4]]],[11,"clone","smoldot::executor","",176,[[],["coreversion",3]]],[11,"clone","","",177,[[],["coreversionref",3]]],[11,"clone","smoldot::finality::grandpa::chain_config","",178,[[],["grandpagenesisconfiguration",3]]],[11,"clone","smoldot::finality::justification::decode","",185,[[],["precommitsref",3]]],[11,"clone","","",186,[[],["precommitref",3]]],[11,"clone","","",492,[[],["votesancestriesiter",3]]],[11,"clone","smoldot::header","",190,[[],["auraconsensuslogref",4]]],[11,"clone","","",191,[[],["auraconsensuslog",4]]],[11,"clone","","",494,[[],["auraauthoritiesiter",3]]],[11,"clone","","",192,[[],["auraauthorityref",3]]],[11,"clone","","",193,[[],["auraauthority",3]]],[11,"clone","","",194,[[],["aurapredigest",3]]],[11,"clone","","",195,[[],["babeconsensuslogref",4]]],[11,"clone","","",196,[[],["babeconsensuslog",4]]],[11,"clone","","",197,[[],["babenextepochref",3]]],[11,"clone","","",198,[[],["babenextepoch",3]]],[11,"clone","","",495,[[],["babeauthoritiesiter",3]]],[11,"clone","","",199,[[],["babeauthorityref",3]]],[11,"clone","","",200,[[],["babeauthority",3]]],[11,"clone","","",201,[[],["babenextconfig",3]]],[11,"clone","","",202,[[],["babeallowedslots",4]]],[11,"clone","","",203,[[],["babepredigestref",4]]],[11,"clone","","",204,[[],["babepredigest",4]]],[11,"clone","","",205,[[],["babeprimarypredigestref",3]]],[11,"clone","","",206,[[],["babeprimarypredigest",3]]],[11,"clone","","",207,[[],["babesecondaryplainpredigest",3]]],[11,"clone","","",208,[[],["babesecondaryvrfpredigestref",3]]],[11,"clone","","",209,[[],["babesecondaryvrfpredigest",3]]],[11,"clone","","",210,[[],["grandpaconsensuslogref",4]]],[11,"clone","","",212,[[],["grandpaconsensuslog",4]]],[11,"clone","","",214,[[],["grandpascheduledchangeref",3]]],[11,"clone","","",215,[[],["grandpascheduledchange",3]]],[11,"clone","","",496,[[],["grandpaauthoritiesiter",3]]],[11,"clone","","",216,[[],["grandpaauthorityref",3]]],[11,"clone","","",217,[[],["grandpaauthority",3]]],[11,"clone","","",219,[[],["headerref",3]]],[11,"clone","","",220,[[],["header",3]]],[11,"clone","","",221,[[],["digestref",3]]],[11,"clone","","",223,[[],["digest",3]]],[11,"clone","","",497,[[],["logsiter",3]]],[11,"clone","","",224,[[],["digestitemref",4]]],[11,"clone","","",225,[[],["digestitem",4]]],[11,"clone","","",226,[[],["changestriesignal",4]]],[11,"clone","","",227,[[],["changestrieconfiguration",3]]],[11,"clone","smoldot::json_rpc::methods","",232,[[],["methodcall",4]]],[11,"clone","","",245,[[],["response",4]]],[11,"clone","","",246,[[],["hexstring",3]]],[11,"clone","","",247,[[],["hashhexstring",3]]],[11,"clone","","",248,[[],["block",3]]],[11,"clone","","",249,[[],["header",3]]],[11,"clone","","",250,[[],["headerdigest",3]]],[11,"clone","","",251,[[],["rpcmethods",3]]],[11,"clone","","",252,[[],["runtimeversion",3]]],[11,"clone","","",253,[[],["storagechangeset",3]]],[11,"clone","","",254,[[],["systemhealth",3]]],[11,"clone","","",255,[[],["systempeer",3]]],[11,"clone","smoldot::json_rpc::websocket_server","",500,[[],["connectionid",3]]],[11,"clone","smoldot::libp2p::connection::established","",522,[[],["substreamid",3]]],[11,"clone","","",288,[[],["config",3]]],[11,"clone","","",289,[[],["configrequestresponse",3]]],[11,"clone","","",290,[[],["confignotifications",3]]],[11,"clone","smoldot::libp2p::connection::multistream_select","",296,[[],["config",4]]],[11,"clone","","",302,[[],["messageout",4]]],[11,"clone","smoldot::libp2p::connection::yamux","",525,[[],["substreamid",3]]],[11,"clone","smoldot::libp2p::peer_id","",322,[[],["publickey",4]]],[11,"clone","","",324,[[],["peerid",3]]],[11,"clone","smoldot::libp2p::peerset","",329,[[],["substreamdirection",4]]],[11,"clone","","",528,[[],["connectionid",3]]],[11,"clone","smoldot::libp2p","",529,[[],["pendingid",3]]],[11,"clone","","",530,[[],["connectionid",3]]],[11,"clone","smoldot::metadata::decode","",353,[[],["metadataref",3]]],[11,"clone","","",354,[[],["modulemetadataref",3]]],[11,"clone","","",355,[[],["storagemetadataref",3]]],[11,"clone","","",356,[[],["storageentrymetadataref",3]]],[11,"clone","","",357,[[],["storageentrymodifier",4]]],[11,"clone","","",358,[[],["storageentrytyperef",4]]],[11,"clone","","",361,[[],["storagehasher",4]]],[11,"clone","","",362,[[],["functionmetadataref",3]]],[11,"clone","","",363,[[],["functionargumentmetadataref",3]]],[11,"clone","","",364,[[],["eventmetadataref",3]]],[11,"clone","","",365,[[],["moduleconstantmetadataref",3]]],[11,"clone","","",366,[[],["errormetadataref",3]]],[11,"clone","","",367,[[],["extrinsicmetadataref",3]]],[11,"clone","","",533,[[]]],[11,"clone","smoldot::network::protocol","",369,[[],["blockannounceshandshakeref",3]]],[11,"clone","","",370,[[],["role",4]]],[11,"clone","","",372,[[],["blocksrequestconfig",3]]],[11,"clone","","",373,[[],["blocksrequestdirection",4]]],[11,"clone","","",374,[[],["blocksrequestfields",3]]],[11,"clone","","",375,[[],["blocksrequestconfigstart",4]]],[11,"clone","","",376,[[],["blockdata",3]]],[11,"clone","","",378,[[],["grandpanotificationref",4]]],[11,"clone","","",379,[[],["votemessageref",3]]],[11,"clone","","",380,[[],["messageref",4]]],[11,"clone","","",381,[[],["unsignedprevoteref",3]]],[11,"clone","","",382,[[],["unsignedprecommitref",3]]],[11,"clone","","",383,[[],["primaryproposeref",3]]],[11,"clone","","",384,[[],["commitmessageref",3]]],[11,"clone","","",385,[[],["compactcommitref",3]]],[11,"clone","","",386,[[],["neighborpacket",3]]],[11,"clone","","",387,[[],["catchuprequest",3]]],[11,"clone","","",388,[[],["catchupref",3]]],[11,"clone","","",389,[[],["prevoteref",3]]],[11,"clone","","",392,[[],["storageproofrequestconfig",3]]],[11,"clone","smoldot::network::service","",538,[[],["pendingid",3]]],[11,"clone","","",539,[[],["connectionid",3]]],[11,"clone","","",404,[[],["encodedblockannounce",3]]],[11,"clone","smoldot::trie","",540,[[],["nibble",3]]],[11,"clone","","",541,[[],["bytestonibbles",3]]],[11,"clone","smoldot::trie::node_value","",421,[[],["output",3]]],[11,"clone","smoldot::trie::trie_structure","",542,[[],["nodeindex",3]]],[11,"default","smoldot::chain::fork_tree","",83,[[]]],[11,"default","smoldot::header","",227,[[],["changestrieconfiguration",3]]],[11,"default","smoldot::libp2p::discovery::kademlia","",320,[[]]],[11,"default","smoldot::trie::calculate_root","",412,[[]]],[11,"default","smoldot::trie::trie_structure","",424,[[]]],[11,"default","smoldot::trie","",439,[[]]],[11,"cmp","smoldot::chain::fork_tree","",478,[[["nodeindex",3]],["ordering",4]]],[11,"cmp","smoldot::chain::sync::optimistic","",479,[[["requestid",3]],["ordering",4]]],[11,"cmp","","",480,[[["sourceid",3]],["ordering",4]]],[11,"cmp","smoldot::json_rpc::websocket_server","",500,[[["connectionid",3]],["ordering",4]]],[11,"cmp","smoldot::libp2p::connection::established","",522,[[["substreamid",3]],["ordering",4]]],[11,"cmp","smoldot::libp2p::connection::yamux","",525,[[["substreamid",3]],["ordering",4]]],[11,"cmp","smoldot::libp2p::peer_id","",324,[[],["ordering",4]]],[11,"cmp","smoldot::libp2p::peerset","",329,[[["substreamdirection",4]],["ordering",4]]],[11,"cmp","","",528,[[["connectionid",3]],["ordering",4]]],[11,"cmp","smoldot::libp2p","",529,[[["pendingid",3]],["ordering",4]]],[11,"cmp","","",530,[[["connectionid",3]],["ordering",4]]],[11,"cmp","smoldot::network::service","",538,[[["pendingid",3]],["ordering",4]]],[11,"cmp","","",539,[[["connectionid",3]],["ordering",4]]],[11,"cmp","smoldot::trie","",540,[[["nibble",3]],["ordering",4]]],[11,"eq","smoldot::author::aura","",1,[[["slotclaim",3]]]],[11,"ne","","",1,[[["slotclaim",3]]]],[11,"eq","smoldot::author::runtime","",34,[[["transactionvalidityerror",4]]]],[11,"ne","","",34,[[["transactionvalidityerror",4]]]],[11,"eq","","",35,[[["invalidtransaction",4]]]],[11,"ne","","",35,[[["invalidtransaction",4]]]],[11,"eq","","",36,[[["unknowntransaction",4]]]],[11,"ne","","",36,[[["unknowntransaction",4]]]],[11,"eq","","",37,[[["dispatcherror",4]]]],[11,"ne","","",37,[[["dispatcherror",4]]]],[11,"eq","smoldot::chain::fork_tree","",478,[[["nodeindex",3]]]],[11,"ne","","",478,[[["nodeindex",3]]]],[11,"eq","smoldot::chain::sync::optimistic","",479,[[["requestid",3]]]],[11,"ne","","",479,[[["requestid",3]]]],[11,"eq","","",480,[[["sourceid",3]]]],[11,"ne","","",480,[[["sourceid",3]]]],[11,"eq","smoldot::executor::vm","",164,[[["exechint",4]]]],[11,"eq","","",165,[[["signature",3]]]],[11,"ne","","",165,[[["signature",3]]]],[11,"eq","","",167,[[["valuetype",4]]]],[11,"eq","smoldot::executor","",176,[[["coreversion",3]]]],[11,"ne","","",176,[[["coreversion",3]]]],[11,"eq","","",177,[[["coreversionref",3]]]],[11,"ne","","",177,[[["coreversionref",3]]]],[11,"eq","smoldot::header","",190,[[["auraconsensuslogref",4]]]],[11,"ne","","",190,[[["auraconsensuslogref",4]]]],[11,"eq","","",191,[[["auraconsensuslog",4]]]],[11,"ne","","",191,[[["auraconsensuslog",4]]]],[11,"eq","","",494,[[["auraauthoritiesiter",3]]]],[11,"eq","","",192,[[["auraauthorityref",3]]]],[11,"ne","","",192,[[["auraauthorityref",3]]]],[11,"eq","","",193,[[["auraauthority",3]]]],[11,"ne","","",193,[[["auraauthority",3]]]],[11,"eq","","",194,[[["aurapredigest",3]]]],[11,"ne","","",194,[[["aurapredigest",3]]]],[11,"eq","","",195,[[["babeconsensuslogref",4]]]],[11,"ne","","",195,[[["babeconsensuslogref",4]]]],[11,"eq","","",196,[[["babeconsensuslog",4]]]],[11,"ne","","",196,[[["babeconsensuslog",4]]]],[11,"eq","","",197,[[["babenextepochref",3]]]],[11,"ne","","",197,[[["babenextepochref",3]]]],[11,"eq","","",198,[[["babenextepoch",3]]]],[11,"ne","","",198,[[["babenextepoch",3]]]],[11,"eq","","",495,[[["babeauthoritiesiter",3]]]],[11,"eq","","",199,[[["babeauthorityref",3]]]],[11,"ne","","",199,[[["babeauthorityref",3]]]],[11,"eq","","",200,[[["babeauthority",3]]]],[11,"ne","","",200,[[["babeauthority",3]]]],[11,"eq","","",201,[[["babenextconfig",3]]]],[11,"ne","","",201,[[["babenextconfig",3]]]],[11,"eq","","",202,[[["babeallowedslots",4]]]],[11,"eq","","",203,[[["babepredigestref",4]]]],[11,"ne","","",203,[[["babepredigestref",4]]]],[11,"eq","","",205,[[["babeprimarypredigestref",3]]]],[11,"eq","","",207,[[["babesecondaryplainpredigest",3]]]],[11,"ne","","",207,[[["babesecondaryplainpredigest",3]]]],[11,"eq","","",208,[[["babesecondaryvrfpredigestref",3]]]],[11,"eq","","",210,[[["grandpaconsensuslogref",4]]]],[11,"ne","","",210,[[["grandpaconsensuslogref",4]]]],[11,"eq","","",212,[[["grandpaconsensuslog",4]]]],[11,"ne","","",212,[[["grandpaconsensuslog",4]]]],[11,"eq","","",214,[[["grandpascheduledchangeref",3]]]],[11,"ne","","",214,[[["grandpascheduledchangeref",3]]]],[11,"eq","","",215,[[["grandpascheduledchange",3]]]],[11,"ne","","",215,[[["grandpascheduledchange",3]]]],[11,"eq","","",496,[[["grandpaauthoritiesiter",3]]]],[11,"eq","","",216,[[["grandpaauthorityref",3]]]],[11,"ne","","",216,[[["grandpaauthorityref",3]]]],[11,"eq","","",217,[[["grandpaauthority",3]]]],[11,"ne","","",217,[[["grandpaauthority",3]]]],[11,"eq","","",224,[[["digestitemref",4]]]],[11,"ne","","",224,[[["digestitemref",4]]]],[11,"eq","","",226,[[["changestriesignal",4]]]],[11,"ne","","",226,[[["changestriesignal",4]]]],[11,"eq","","",227,[[["changestrieconfiguration",3]]]],[11,"ne","","",227,[[["changestrieconfiguration",3]]]],[11,"eq","smoldot::json_rpc::websocket_server","",500,[[["connectionid",3]]]],[11,"ne","","",500,[[["connectionid",3]]]],[11,"eq","smoldot::libp2p::connection::established","",522,[[["substreamid",3]]]],[11,"ne","","",522,[[["substreamid",3]]]],[11,"eq","smoldot::libp2p::connection::multistream_select","",296,[[["config",4]]]],[11,"ne","","",296,[[["config",4]]]],[11,"eq","smoldot::libp2p::connection::yamux","",525,[[["substreamid",3]]]],[11,"ne","","",525,[[["substreamid",3]]]],[11,"eq","smoldot::libp2p::peer_id","",322,[[["publickey",4]]]],[11,"ne","","",322,[[["publickey",4]]]],[11,"eq","","",324,[[["peerid",3]]]],[11,"eq","smoldot::libp2p::peerset","",329,[[["substreamdirection",4]]]],[11,"eq","","",528,[[["connectionid",3]]]],[11,"ne","","",528,[[["connectionid",3]]]],[11,"eq","smoldot::libp2p","",529,[[["pendingid",3]]]],[11,"ne","","",529,[[["pendingid",3]]]],[11,"eq","","",530,[[["connectionid",3]]]],[11,"ne","","",530,[[["connectionid",3]]]],[11,"eq","smoldot::metadata::decode","",353,[[["metadataref",3]]]],[11,"ne","","",353,[[["metadataref",3]]]],[11,"eq","","",354,[[["modulemetadataref",3]]]],[11,"ne","","",354,[[["modulemetadataref",3]]]],[11,"eq","","",355,[[["storagemetadataref",3]]]],[11,"ne","","",355,[[["storagemetadataref",3]]]],[11,"eq","","",356,[[["storageentrymetadataref",3]]]],[11,"ne","","",356,[[["storageentrymetadataref",3]]]],[11,"eq","","",357,[[["storageentrymodifier",4]]]],[11,"eq","","",358,[[["storageentrytyperef",4]]]],[11,"ne","","",358,[[["storageentrytyperef",4]]]],[11,"eq","","",361,[[["storagehasher",4]]]],[11,"eq","","",362,[[["functionmetadataref",3]]]],[11,"ne","","",362,[[["functionmetadataref",3]]]],[11,"eq","","",363,[[["functionargumentmetadataref",3]]]],[11,"ne","","",363,[[["functionargumentmetadataref",3]]]],[11,"eq","","",364,[[["eventmetadataref",3]]]],[11,"ne","","",364,[[["eventmetadataref",3]]]],[11,"eq","","",365,[[["moduleconstantmetadataref",3]]]],[11,"ne","","",365,[[["moduleconstantmetadataref",3]]]],[11,"eq","","",366,[[["errormetadataref",3]]]],[11,"ne","","",366,[[["errormetadataref",3]]]],[11,"eq","","",367,[[["extrinsicmetadataref",3]]]],[11,"ne","","",367,[[["extrinsicmetadataref",3]]]],[11,"eq","","",533,[[]]],[11,"eq","smoldot::network::protocol","",369,[[["blockannounceshandshakeref",3]]]],[11,"ne","","",369,[[["blockannounceshandshakeref",3]]]],[11,"eq","","",370,[[["role",4]]]],[11,"eq","","",372,[[["blocksrequestconfig",3]]]],[11,"ne","","",372,[[["blocksrequestconfig",3]]]],[11,"eq","","",373,[[["blocksrequestdirection",4]]]],[11,"eq","","",374,[[["blocksrequestfields",3]]]],[11,"ne","","",374,[[["blocksrequestfields",3]]]],[11,"eq","","",375,[[["blocksrequestconfigstart",4]]]],[11,"ne","","",375,[[["blocksrequestconfigstart",4]]]],[11,"eq","","",376,[[["blockdata",3]]]],[11,"ne","","",376,[[["blockdata",3]]]],[11,"eq","","",392,[[["storageproofrequestconfig",3]]]],[11,"ne","","",392,[[["storageproofrequestconfig",3]]]],[11,"eq","smoldot::network::service","",538,[[["pendingid",3]]]],[11,"ne","","",538,[[["pendingid",3]]]],[11,"eq","","",539,[[["connectionid",3]]]],[11,"ne","","",539,[[["connectionid",3]]]],[11,"eq","smoldot::trie","",540,[[["nibble",3]]]],[11,"ne","","",540,[[["nibble",3]]]],[11,"eq","smoldot::trie::trie_structure","",542,[[["nodeindex",3]]]],[11,"ne","","",542,[[["nodeindex",3]]]],[11,"partial_cmp","smoldot::chain::fork_tree","",478,[[["nodeindex",3]],[["option",4],["ordering",4]]]],[11,"lt","","",478,[[["nodeindex",3]]]],[11,"le","","",478,[[["nodeindex",3]]]],[11,"gt","","",478,[[["nodeindex",3]]]],[11,"ge","","",478,[[["nodeindex",3]]]],[11,"partial_cmp","smoldot::chain::sync::optimistic","",479,[[["requestid",3]],[["option",4],["ordering",4]]]],[11,"lt","","",479,[[["requestid",3]]]],[11,"le","","",479,[[["requestid",3]]]],[11,"gt","","",479,[[["requestid",3]]]],[11,"ge","","",479,[[["requestid",3]]]],[11,"partial_cmp","","",480,[[["sourceid",3]],[["option",4],["ordering",4]]]],[11,"lt","","",480,[[["sourceid",3]]]],[11,"le","","",480,[[["sourceid",3]]]],[11,"gt","","",480,[[["sourceid",3]]]],[11,"ge","","",480,[[["sourceid",3]]]],[11,"partial_cmp","smoldot::json_rpc::websocket_server","",500,[[["connectionid",3]],[["option",4],["ordering",4]]]],[11,"lt","","",500,[[["connectionid",3]]]],[11,"le","","",500,[[["connectionid",3]]]],[11,"gt","","",500,[[["connectionid",3]]]],[11,"ge","","",500,[[["connectionid",3]]]],[11,"partial_cmp","smoldot::libp2p::connection::established","",522,[[["substreamid",3]],[["option",4],["ordering",4]]]],[11,"lt","","",522,[[["substreamid",3]]]],[11,"le","","",522,[[["substreamid",3]]]],[11,"gt","","",522,[[["substreamid",3]]]],[11,"ge","","",522,[[["substreamid",3]]]],[11,"partial_cmp","smoldot::libp2p::connection::yamux","",525,[[["substreamid",3]],[["option",4],["ordering",4]]]],[11,"lt","","",525,[[["substreamid",3]]]],[11,"le","","",525,[[["substreamid",3]]]],[11,"gt","","",525,[[["substreamid",3]]]],[11,"ge","","",525,[[["substreamid",3]]]],[11,"partial_cmp","smoldot::libp2p::peer_id","",324,[[],[["ordering",4],["option",4]]]],[11,"partial_cmp","smoldot::libp2p::peerset","",329,[[["substreamdirection",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",528,[[["connectionid",3]],[["option",4],["ordering",4]]]],[11,"lt","","",528,[[["connectionid",3]]]],[11,"le","","",528,[[["connectionid",3]]]],[11,"gt","","",528,[[["connectionid",3]]]],[11,"ge","","",528,[[["connectionid",3]]]],[11,"partial_cmp","smoldot::libp2p","",529,[[["pendingid",3]],[["option",4],["ordering",4]]]],[11,"lt","","",529,[[["pendingid",3]]]],[11,"le","","",529,[[["pendingid",3]]]],[11,"gt","","",529,[[["pendingid",3]]]],[11,"ge","","",529,[[["pendingid",3]]]],[11,"partial_cmp","","",530,[[["connectionid",3]],[["option",4],["ordering",4]]]],[11,"lt","","",530,[[["connectionid",3]]]],[11,"le","","",530,[[["connectionid",3]]]],[11,"gt","","",530,[[["connectionid",3]]]],[11,"ge","","",530,[[["connectionid",3]]]],[11,"partial_cmp","smoldot::network::service","",538,[[["pendingid",3]],[["option",4],["ordering",4]]]],[11,"lt","","",538,[[["pendingid",3]]]],[11,"le","","",538,[[["pendingid",3]]]],[11,"gt","","",538,[[["pendingid",3]]]],[11,"ge","","",538,[[["pendingid",3]]]],[11,"partial_cmp","","",539,[[["connectionid",3]],[["option",4],["ordering",4]]]],[11,"lt","","",539,[[["connectionid",3]]]],[11,"le","","",539,[[["connectionid",3]]]],[11,"gt","","",539,[[["connectionid",3]]]],[11,"ge","","",539,[[["connectionid",3]]]],[11,"partial_cmp","smoldot::trie","",540,[[["nibble",3]],[["option",4],["ordering",4]]]],[11,"lt","","",540,[[["nibble",3]]]],[11,"le","","",540,[[["nibble",3]]]],[11,"gt","","",540,[[["nibble",3]]]],[11,"ge","","",540,[[["nibble",3]]]],[11,"deref","smoldot::database::full_sled","",485,[[]]],[11,"fmt","smoldot::author::aura","",1,[[["formatter",3]],["result",6]]],[11,"fmt","smoldot::author::build","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","smoldot::author::runtime","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","smoldot::chain::blocks_tree","",468,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",470,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",475,[[["formatter",3]],["result",6]]],[11,"fmt","","",50,[[["formatter",3]],["result",6]]],[11,"fmt","","",476,[[["formatter",3]],["result",6]]],[11,"fmt","","",52,[[["formatter",3]],["result",6]]],[11,"fmt","","",53,[[["formatter",3]],["result",6]]],[11,"fmt","smoldot::chain::chain_information::aura_config","",55,[[["formatter",3]],["result",6]]],[11,"fmt","","",56,[[["formatter",3]],["result",6]]],[11,"fmt","","",57,[[["formatter",3]],["result",6]]],[11,"fmt","smoldot::chain::chain_information::babe_config","",58,[[["formatter",3]],["result",6]]],[11,"fmt","","",59,[[["formatter",3]],["result",6]]],[11,"fmt","","",60,[[["formatter",3]],["result",6]]],[11,"fmt","smoldot::chain::chain_information::babe_fetch_epoch","",63,[[["formatter",3]],["result",6]]],[11,"fmt","smoldot::chain::chain_information","",67,[[["formatter",3]],["result",6]]],[11,"fmt","","",68,[[["formatter",3]],["result",6]]],[11,"fmt","","",71,[[["formatter",3]],["result",6]]],[11,"fmt","","",72,[[["formatter",3]],["result",6]]],[11,"fmt","","",74,[[["formatter",3]],["result",6]]],[11,"fmt","","",75,[[["formatter",3]],["result",6]]],[11,"fmt","","",76,[[["formatter",3]],["result",6]]],[11,"fmt","","",77,[[["formatter",3]],["result",6]]],[11,"fmt","","",80,[[["formatter",3]],["result",6]]],[11,"fmt","","",81,[[["formatter",3]],["result",6]]],[11,"fmt","smoldot::chain::fork_tree","",83,[[["formatter",3]],["result",6]]],[11,"fmt","","",478,[[["formatter",3]],["result",6]]],[11,"fmt","smoldot::chain::sync::optimistic","",85,[[["formatter",3]],["result",6]]],[11,"fmt","","",479,[[["formatter",3]],["result",6]]],[11,"fmt","","",480,[[["formatter",3]],["result",6]]],[11,"fmt","","",97,[[["formatter",3]],["result",6]]],[11,"fmt","","",100,[[["formatter",3]],["result",6]]],[11,"fmt","","",481,[[["formatter",3]],["result",6]]],[11,"fmt","","",103,[[["formatter",3]],["result",6]]],[11,"fmt","smoldot::chain_spec","",482,[[["formatter",3]],["result",6]]],[11,"fmt","smoldot::database::finalized_serialize","",483,[[["formatter",3]],["result",6]]],[11,"fmt","smoldot::database::full_sled","",107,[[["formatter",3]],["result",6]]],[11,"fmt","","",108,[[["formatter",3]],["result",6]]],[11,"fmt","","",110,[[["formatter",3]],["result",6]]],[11,"fmt","","",111,[[["formatter",3]],["result",6]]],[11,"fmt","","",486,[[["formatter",3]],["result",6]]],[11,"fmt","","",112,[[["formatter",3]],["result",6]]],[11,"fmt","","",113,[[["formatter",3]],["result",6]]],[11,"fmt","","",114,[[["formatter",3]],["result",6]]],[11,"fmt","","",115,[[["formatter",3]],["result",6]]],[11,"fmt","smoldot::executor::host","",120,[[["formatter",3]],["result",6]]],[11,"fmt","","",121,[[["formatter",3]],["result",6]]],[11,"fmt","","",122,[[["formatter",3]],["result",6]]],[11,"fmt","","",123,[[["formatter",3]],["result",6]]],[11,"fmt","","",124,[[["formatter",3]],["result",6]]],[11,"fmt","","",125,[[["formatter",3]],["result",6]]],[11,"fmt","","",126,[[["formatter",3]],["result",6]]],[11,"fmt","","",127,[[["formatter",3]],["result",6]]],[11,"fmt","","",128,[[["formatter",3]],["result",6]]],[11,"fmt","","",129,[[["formatter",3]],["result",6]]],[11,"fmt","","",130,[[["formatter",3]],["result",6]]],[11,"fmt","","",131,[[["formatter",3]],["result",6]]],[11,"fmt","","",134,[[["formatter",3]],["result",6]]],[11,"fmt","","",135,[[["formatter",3]],["result",6]]],[11,"fmt","","",136,[[["formatter",3]],["result",6]]],[11,"fmt","smoldot::executor::read_only_runtime_host","",146,[[["formatter",3]],["result",6]]],[11,"fmt","","",147,[[["formatter",3]],["result",6]]],[11,"fmt","","",148,[[["formatter",3]],["result",6]]],[11,"fmt","smoldot::executor::runtime_host","",154,[[["formatter",3]],["result",6]]],[11,"fmt","","",155,[[["formatter",3]],["result",6]]],[11,"fmt","","",156,[[["formatter",3]],["result",6]]],[11,"fmt","smoldot::executor::vm","",162,[[["formatter",3]],["result",6]]],[11,"fmt","","",163,[[["formatter",3]],["result",6]]],[11,"fmt","","",164,[[["formatter",3]],["result",6]]],[11,"fmt","","",165,[[["formatter",3]],["result",6]]],[11,"fmt","","",166,[[["formatter",3]],["result",6]]],[11,"fmt","","",167,[[["formatter",3]],["result",6]]],[11,"fmt","","",487,[[["formatter",3]],["result",6]]],[11,"fmt","","",168,[[["formatter",3]],["result",6]]],[11,"fmt","","",488,[[["formatter",3]],["result",6]]],[11,"fmt","","",171,[[["formatter",3]],["result",6]]],[11,"fmt","","",172,[[["formatter",3]],["result",6]]],[11,"fmt","","",489,[[["formatter",3]],["result",6]]],[11,"fmt","","",490,[[["formatter",3]],["result",6]]],[11,"fmt","","",173,[[["formatter",3]],["result",6]]],[11,"fmt","","",175,[[["formatter",3]],["result",6]]],[11,"fmt","smoldot::executor","",176,[[["formatter",3]],["result",6]]],[11,"fmt","","",177,[[["formatter",3]],["result",6]]],[11,"fmt","smoldot::finality::grandpa::chain_config","",178,[[["formatter",3]],["result",6]]],[11,"fmt","","",179,[[["formatter",3]],["result",6]]],[11,"fmt","","",180,[[["formatter",3]],["result",6]]],[11,"fmt","smoldot::finality::grandpa::warp_sync","",181,[[["formatter",3]],["result",6]]],[11,"fmt","smoldot::finality::justification::decode","",183,[[["formatter",3]],["result",6]]],[11,"fmt","","",184,[[["formatter",3]],["result",6]]],[11,"fmt","","",185,[[["formatter",3]],["result",6]]],[11,"fmt","","",186,[[["formatter",3]],["result",6]]],[11,"fmt","","",187,[[["formatter",3]],["result",6]]],[11,"fmt","","",492,[[["formatter",3]],["result",6]]],[11,"fmt","","",493,[[["formatter",3]],["result",6]]],[11,"fmt","smoldot::finality::justification::verify","",188,[[["formatter",3]],["result",6]]],[11,"fmt","","",189,[[["formatter",3]],["result",6]]],[11,"fmt","smoldot::header","",190,[[["formatter",3]],["result",6]]],[11,"fmt","","",191,[[["formatter",3]],["result",6]]],[11,"fmt","","",494,[[["formatter",3]],["result",6]]],[11,"fmt","","",192,[[["formatter",3]],["result",6]]],[11,"fmt","","",193,[[["formatter",3]],["result",6]]],[11,"fmt","","",194,[[["formatter",3]],["result",6]]],[11,"fmt","","",195,[[["formatter",3]],["result",6]]],[11,"fmt","","",196,[[["formatter",3]],["result",6]]],[11,"fmt","","",197,[[["formatter",3]],["result",6]]],[11,"fmt","","",198,[[["formatter",3]],["result",6]]],[11,"fmt","","",495,[[["formatter",3]],["result",6]]],[11,"fmt","","",199,[[["formatter",3]],["result",6]]],[11,"fmt","","",200,[[["formatter",3]],["result",6]]],[11,"fmt","","",201,[[["formatter",3]],["result",6]]],[11,"fmt","","",202,[[["formatter",3]],["result",6]]],[11,"fmt","","",203,[[["formatter",3]],["result",6]]],[11,"fmt","","",204,[[["formatter",3]],["result",6]]],[11,"fmt","","",205,[[["formatter",3]],["result",6]]],[11,"fmt","","",206,[[["formatter",3]],["result",6]]],[11,"fmt","","",207,[[["formatter",3]],["result",6]]],[11,"fmt","","",208,[[["formatter",3]],["result",6]]],[11,"fmt","","",209,[[["formatter",3]],["result",6]]],[11,"fmt","","",210,[[["formatter",3]],["result",6]]],[11,"fmt","","",212,[[["formatter",3]],["result",6]]],[11,"fmt","","",214,[[["formatter",3]],["result",6]]],[11,"fmt","","",215,[[["formatter",3]],["result",6]]],[11,"fmt","","",496,[[["formatter",3]],["result",6]]],[11,"fmt","","",216,[[["formatter",3]],["result",6]]],[11,"fmt","","",217,[[["formatter",3]],["result",6]]],[11,"fmt","","",218,[[["formatter",3]],["result",6]]],[11,"fmt","","",219,[[["formatter",3]],["result",6]]],[11,"fmt","","",220,[[["formatter",3]],["result",6]]],[11,"fmt","","",221,[[["formatter",3]],["result",6]]],[11,"fmt","","",223,[[["formatter",3]],["result",6]]],[11,"fmt","","",224,[[["formatter",3]],["result",6]]],[11,"fmt","","",225,[[["formatter",3]],["result",6]]],[11,"fmt","","",226,[[["formatter",3]],["result",6]]],[11,"fmt","","",227,[[["formatter",3]],["result",6]]],[11,"fmt","smoldot::informant","",228,[[["formatter",3]],["result",6]]],[11,"fmt","","",229,[[["formatter",3]],["result",6]]],[11,"fmt","smoldot::json_rpc::methods","",231,[[["formatter",3]],["result",6]]],[11,"fmt","","",498,[[["formatter",3]],["result",6]]],[11,"fmt","","",232,[[["formatter",3]],["result",6]]],[11,"fmt","","",245,[[["formatter",3]],["result",6]]],[11,"fmt","","",246,[[["formatter",3]],["result",6]]],[11,"fmt","","",247,[[["formatter",3]],["result",6]]],[11,"fmt","","",248,[[["formatter",3]],["result",6]]],[11,"fmt","","",249,[[["formatter",3]],["result",6]]],[11,"fmt","","",250,[[["formatter",3]],["result",6]]],[11,"fmt","","",251,[[["formatter",3]],["result",6]]],[11,"fmt","","",252,[[["formatter",3]],["result",6]]],[11,"fmt","","",253,[[["formatter",3]],["result",6]]],[11,"fmt","","",254,[[["formatter",3]],["result",6]]],[11,"fmt","","",255,[[["formatter",3]],["result",6]]],[11,"fmt","smoldot::json_rpc::parse","",256,[[["formatter",3]],["result",6]]],[11,"fmt","","",499,[[["formatter",3]],["result",6]]],[11,"fmt","","",257,[[["formatter",3]],["result",6]]],[11,"fmt","smoldot::json_rpc::websocket_server","",500,[[["formatter",3]],["result",6]]],[11,"fmt","","",259,[[["formatter",3]],["result",6]]],[11,"fmt","","",260,[[["formatter",3]],["result",6]]],[11,"fmt","smoldot::libp2p::connection::established","",273,[[["formatter",3]],["result",6]]],[11,"fmt","","",522,[[["formatter",3]],["result",6]]],[11,"fmt","","",275,[[["formatter",3]],["result",6]]],[11,"fmt","","",285,[[["formatter",3]],["result",6]]],[11,"fmt","","",286,[[["formatter",3]],["result",6]]],[11,"fmt","","",287,[[["formatter",3]],["result",6]]],[11,"fmt","","",288,[[["formatter",3]],["result",6]]],[11,"fmt","","",289,[[["formatter",3]],["result",6]]],[11,"fmt","","",290,[[["formatter",3]],["result",6]]],[11,"fmt","smoldot::libp2p::connection::handshake","",291,[[["formatter",3]],["result",6]]],[11,"fmt","","",293,[[["formatter",3]],["result",6]]],[11,"fmt","","",294,[[["formatter",3]],["result",6]]],[11,"fmt","","",295,[[["formatter",3]],["result",6]]],[11,"fmt","smoldot::libp2p::connection::multistream_select","",296,[[["formatter",3]],["result",6]]],[11,"fmt","","",299,[[["formatter",3]],["result",6]]],[11,"fmt","","",300,[[["formatter",3]],["result",6]]],[11,"fmt","","",301,[[["formatter",3]],["result",6]]],[11,"fmt","","",302,[[["formatter",3]],["result",6]]],[11,"fmt","smoldot::libp2p::connection::noise","",305,[[["formatter",3]],["result",6]]],[11,"fmt","","",306,[[["formatter",3]],["result",6]]],[11,"fmt","","",308,[[["formatter",3]],["result",6]]],[11,"fmt","","",309,[[["formatter",3]],["result",6]]],[11,"fmt","","",523,[[["formatter",3]],["result",6]]],[11,"fmt","","",524,[[["formatter",3]],["result",6]]],[11,"fmt","smoldot::libp2p::connection::yamux","",310,[[["formatter",3]],["result",6]]],[11,"fmt","","",311,[[["formatter",3]],["result",6]]],[11,"fmt","","",525,[[["formatter",3]],["result",6]]],[11,"fmt","","",314,[[["formatter",3]],["result",6]]],[11,"fmt","","",315,[[["formatter",3]],["result",6]]],[11,"fmt","","",319,[[["formatter",3]],["result",6]]],[11,"fmt","smoldot::libp2p::discovery::kademlia","",321,[[["formatter",3]],["result",6]]],[11,"fmt","","",526,[[["formatter",3]],["result",6]]],[11,"fmt","smoldot::libp2p::peer_id","",322,[[["formatter",3]],["result",6]]],[11,"fmt","","",323,[[["formatter",3]],["result",6]]],[11,"fmt","","",324,[[["formatter",3]],["result",6]]],[11,"fmt","","",325,[[["formatter",3]],["result",6]]],[11,"fmt","","",326,[[["formatter",3]],["result",6]]],[11,"fmt","","",327,[[["formatter",3]],["result",6]]],[11,"fmt","","",527,[[["formatter",3]],["result",6]]],[11,"fmt","smoldot::libp2p::peerset","",328,[[["formatter",3]],["result",6]]],[11,"fmt","","",329,[[["formatter",3]],["result",6]]],[11,"fmt","","",528,[[["formatter",3]],["result",6]]],[11,"fmt","smoldot::libp2p","",529,[[["formatter",3]],["result",6]]],[11,"fmt","","",530,[[["formatter",3]],["result",6]]],[11,"fmt","","",340,[[["formatter",3]],["result",6]]],[11,"fmt","","",341,[[["formatter",3]],["result",6]]],[11,"fmt","","",349,[[["formatter",3]],["result",6]]],[11,"fmt","","",351,[[["formatter",3]],["result",6]]],[11,"fmt","","",352,[[["formatter",3]],["result",6]]],[11,"fmt","smoldot::metadata::decode","",353,[[["formatter",3]],["result",6]]],[11,"fmt","","",354,[[["formatter",3]],["result",6]]],[11,"fmt","","",355,[[["formatter",3]],["result",6]]],[11,"fmt","","",356,[[["formatter",3]],["result",6]]],[11,"fmt","","",357,[[["formatter",3]],["result",6]]],[11,"fmt","","",358,[[["formatter",3]],["result",6]]],[11,"fmt","","",361,[[["formatter",3]],["result",6]]],[11,"fmt","","",362,[[["formatter",3]],["result",6]]],[11,"fmt","","",363,[[["formatter",3]],["result",6]]],[11,"fmt","","",364,[[["formatter",3]],["result",6]]],[11,"fmt","","",365,[[["formatter",3]],["result",6]]],[11,"fmt","","",366,[[["formatter",3]],["result",6]]],[11,"fmt","","",367,[[["formatter",3]],["result",6]]],[11,"fmt","","",532,[[["formatter",3]],["result",6]]],[11,"fmt","","",533,[[["formatter",3]],["result",6]]],[11,"fmt","smoldot::metadata","",368,[[["formatter",3]],["result",6]]],[11,"fmt","smoldot::network::protocol","",369,[[["formatter",3]],["result",6]]],[11,"fmt","","",370,[[["formatter",3]],["result",6]]],[11,"fmt","","",371,[[["formatter",3]],["result",6]]],[11,"fmt","","",534,[[["formatter",3]],["result",6]]],[11,"fmt","","",535,[[["formatter",3]],["result",6]]],[11,"fmt","","",372,[[["formatter",3]],["result",6]]],[11,"fmt","","",373,[[["formatter",3]],["result",6]]],[11,"fmt","","",374,[[["formatter",3]],["result",6]]],[11,"fmt","","",375,[[["formatter",3]],["result",6]]],[11,"fmt","","",376,[[["formatter",3]],["result",6]]],[11,"fmt","","",377,[[["formatter",3]],["result",6]]],[11,"fmt","","",378,[[["formatter",3]],["result",6]]],[11,"fmt","","",379,[[["formatter",3]],["result",6]]],[11,"fmt","","",380,[[["formatter",3]],["result",6]]],[11,"fmt","","",381,[[["formatter",3]],["result",6]]],[11,"fmt","","",382,[[["formatter",3]],["result",6]]],[11,"fmt","","",383,[[["formatter",3]],["result",6]]],[11,"fmt","","",384,[[["formatter",3]],["result",6]]],[11,"fmt","","",385,[[["formatter",3]],["result",6]]],[11,"fmt","","",386,[[["formatter",3]],["result",6]]],[11,"fmt","","",387,[[["formatter",3]],["result",6]]],[11,"fmt","","",388,[[["formatter",3]],["result",6]]],[11,"fmt","","",389,[[["formatter",3]],["result",6]]],[11,"fmt","","",536,[[["formatter",3]],["result",6]]],[11,"fmt","","",390,[[["formatter",3]],["result",6]]],[11,"fmt","","",391,[[["formatter",3]],["result",6]]],[11,"fmt","","",392,[[["formatter",3]],["result",6]]],[11,"fmt","","",393,[[["formatter",3]],["result",6]]],[11,"fmt","","",537,[[["formatter",3]],["result",6]]],[11,"fmt","smoldot::network::service","",538,[[["formatter",3]],["result",6]]],[11,"fmt","","",539,[[["formatter",3]],["result",6]]],[11,"fmt","","",397,[[["formatter",3]],["result",6]]],[11,"fmt","","",398,[[["formatter",3]],["result",6]]],[11,"fmt","","",403,[[["formatter",3]],["result",6]]],[11,"fmt","","",404,[[["formatter",3]],["result",6]]],[11,"fmt","","",408,[[["formatter",3]],["result",6]]],[11,"fmt","","",409,[[["formatter",3]],["result",6]]],[11,"fmt","","",410,[[["formatter",3]],["result",6]]],[11,"fmt","","",411,[[["formatter",3]],["result",6]]],[11,"fmt","smoldot::trie","",540,[[["formatter",3]],["result",6]]],[11,"fmt","","",438,[[["formatter",3]],["result",6]]],[11,"fmt","","",541,[[["formatter",3]],["result",6]]],[11,"fmt","smoldot::trie::calculate_root","",412,[[["formatter",3]],["result",6]]],[11,"fmt","smoldot::trie::node_value","",418,[[["formatter",3]],["result",6]]],[11,"fmt","","",421,[[["formatter",3]],["result",6]]],[11,"fmt","smoldot::trie::proof_verify","",423,[[["formatter",3]],["result",6]]],[11,"fmt","smoldot::trie::trie_structure","",424,[[["formatter",3]],["result",6]]],[11,"fmt","","",542,[[["formatter",3]],["result",6]]],[11,"fmt","smoldot::verify::aura","",441,[[["formatter",3]],["result",6]]],[11,"fmt","","",442,[[["formatter",3]],["result",6]]],[11,"fmt","smoldot::verify::babe","",444,[[["formatter",3]],["result",6]]],[11,"fmt","","",445,[[["formatter",3]],["result",6]]],[11,"fmt","smoldot::verify::header_body","",454,[[["formatter",3]],["result",6]]],[11,"fmt","smoldot::verify::header_only","",467,[[["formatter",3]],["result",6]]],[11,"fmt","smoldot::author::build","",16,[[["formatter",3]],["result",6]]],[11,"fmt","smoldot::author::runtime","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","smoldot::chain::blocks_tree","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",50,[[["formatter",3]],["result",6]]],[11,"fmt","smoldot::chain::chain_information::aura_config","",56,[[["formatter",3]],["result",6]]],[11,"fmt","","",57,[[["formatter",3]],["result",6]]],[11,"fmt","smoldot::chain::chain_information::babe_config","",59,[[["formatter",3]],["result",6]]],[11,"fmt","","",60,[[["formatter",3]],["result",6]]],[11,"fmt","smoldot::chain::chain_information::babe_fetch_epoch","",63,[[["formatter",3]],["result",6]]],[11,"fmt","smoldot::chain::chain_information","",74,[[["formatter",3]],["result",6]]],[11,"fmt","smoldot::chain::sync::optimistic","",103,[[["formatter",3]],["result",6]]],[11,"fmt","smoldot::chain_spec","",482,[[["formatter",3]],["result",6]]],[11,"fmt","smoldot::database::finalized_serialize","",483,[[["formatter",3]],["result",6]]],[11,"fmt","smoldot::database::full_sled","",111,[[["formatter",3]],["result",6]]],[11,"fmt","","",486,[[["formatter",3]],["result",6]]],[11,"fmt","","",112,[[["formatter",3]],["result",6]]],[11,"fmt","","",113,[[["formatter",3]],["result",6]]],[11,"fmt","","",114,[[["formatter",3]],["result",6]]],[11,"fmt","","",115,[[["formatter",3]],["result",6]]],[11,"fmt","smoldot::executor::host","",131,[[["formatter",3]],["result",6]]],[11,"fmt","","",134,[[["formatter",3]],["result",6]]],[11,"fmt","","",135,[[["formatter",3]],["result",6]]],[11,"fmt","","",136,[[["formatter",3]],["result",6]]],[11,"fmt","smoldot::executor::read_only_runtime_host","",148,[[["formatter",3]],["result",6]]],[11,"fmt","smoldot::executor::runtime_host","",156,[[["formatter",3]],["result",6]]],[11,"fmt","smoldot::executor::vm","",487,[[["formatter",3]],["result",6]]],[11,"fmt","","",488,[[["formatter",3]],["result",6]]],[11,"fmt","","",171,[[["formatter",3]],["result",6]]],[11,"fmt","","",172,[[["formatter",3]],["result",6]]],[11,"fmt","","",489,[[["formatter",3]],["result",6]]],[11,"fmt","","",490,[[["formatter",3]],["result",6]]],[11,"fmt","","",173,[[["formatter",3]],["result",6]]],[11,"fmt","","",175,[[["formatter",3]],["result",6]]],[11,"fmt","smoldot::finality::grandpa::chain_config","",179,[[["formatter",3]],["result",6]]],[11,"fmt","","",180,[[["formatter",3]],["result",6]]],[11,"fmt","smoldot::finality::justification::decode","",493,[[["formatter",3]],["result",6]]],[11,"fmt","smoldot::finality::justification::verify","",189,[[["formatter",3]],["result",6]]],[11,"fmt","smoldot::header","",218,[[["formatter",3]],["result",6]]],[11,"fmt","smoldot::informant","",228,[[["formatter",3]],["result",6]]],[11,"fmt","","",230,[[["formatter",3]],["result",6]]],[11,"fmt","smoldot::json_rpc::methods","",231,[[["formatter",3]],["result",6]]],[11,"fmt","","",498,[[["formatter",3]],["result",6]]],[11,"fmt","smoldot::json_rpc::parse","",499,[[["formatter",3]],["result",6]]],[11,"fmt","smoldot::libp2p::connection::established","",285,[[["formatter",3]],["result",6]]],[11,"fmt","","",286,[[["formatter",3]],["result",6]]],[11,"fmt","smoldot::libp2p::connection::handshake","",295,[[["formatter",3]],["result",6]]],[11,"fmt","smoldot::libp2p::connection::multistream_select","",301,[[["formatter",3]],["result",6]]],[11,"fmt","smoldot::libp2p::connection::noise","",309,[[["formatter",3]],["result",6]]],[11,"fmt","","",523,[[["formatter",3]],["result",6]]],[11,"fmt","","",524,[[["formatter",3]],["result",6]]],[11,"fmt","smoldot::libp2p::connection::yamux","",319,[[["formatter",3]],["result",6]]],[11,"fmt","smoldot::libp2p::discovery::kademlia","",321,[[["formatter",3]],["result",6]]],[11,"fmt","","",526,[[["formatter",3]],["result",6]]],[11,"fmt","smoldot::libp2p::peer_id","",323,[[["formatter",3]],["result",6]]],[11,"fmt","","",324,[[["formatter",3]],["result",6]]],[11,"fmt","","",325,[[["formatter",3]],["result",6]]],[11,"fmt","","",326,[[["formatter",3]],["result",6]]],[11,"fmt","","",327,[[["formatter",3]],["result",6]]],[11,"fmt","","",527,[[["formatter",3]],["result",6]]],[11,"fmt","smoldot::libp2p","",349,[[["formatter",3]],["result",6]]],[11,"fmt","","",351,[[["formatter",3]],["result",6]]],[11,"fmt","","",352,[[["formatter",3]],["result",6]]],[11,"fmt","smoldot::metadata::decode","",532,[[["formatter",3]],["result",6]]],[11,"fmt","smoldot::metadata","",368,[[["formatter",3]],["result",6]]],[11,"fmt","smoldot::network::protocol","",534,[[["formatter",3]],["result",6]]],[11,"fmt","","",535,[[["formatter",3]],["result",6]]],[11,"fmt","","",377,[[["formatter",3]],["result",6]]],[11,"fmt","","",536,[[["formatter",3]],["result",6]]],[11,"fmt","","",391,[[["formatter",3]],["result",6]]],[11,"fmt","","",393,[[["formatter",3]],["result",6]]],[11,"fmt","","",537,[[["formatter",3]],["result",6]]],[11,"fmt","smoldot::network::service","",408,[[["formatter",3]],["result",6]]],[11,"fmt","","",409,[[["formatter",3]],["result",6]]],[11,"fmt","","",410,[[["formatter",3]],["result",6]]],[11,"fmt","","",411,[[["formatter",3]],["result",6]]],[11,"fmt","smoldot::trie","",438,[[["formatter",3]],["result",6]]],[11,"fmt","smoldot::trie::proof_verify","",423,[[["formatter",3]],["result",6]]],[11,"fmt","smoldot::verify::aura","",442,[[["formatter",3]],["result",6]]],[11,"fmt","smoldot::verify::babe","",445,[[["formatter",3]],["result",6]]],[11,"fmt","smoldot::verify::header_body","",454,[[["formatter",3]],["result",6]]],[11,"fmt","smoldot::verify::header_only","",467,[[["formatter",3]],["result",6]]],[11,"hash","smoldot::chain::sync::optimistic","",479,[[]]],[11,"hash","","",480,[[]]],[11,"hash","smoldot::executor::vm","",165,[[]]],[11,"hash","","",167,[[]]],[11,"hash","smoldot::json_rpc::websocket_server","",500,[[]]],[11,"hash","smoldot::libp2p::connection::established","",522,[[]]],[11,"hash","smoldot::libp2p::connection::yamux","",525,[[]]],[11,"hash","smoldot::libp2p::peer_id","",324,[[]]],[11,"hash","smoldot::libp2p::peerset","",329,[[]]],[11,"hash","","",528,[[]]],[11,"hash","smoldot::libp2p","",529,[[]]],[11,"hash","","",530,[[]]],[11,"hash","smoldot::network::protocol","",370,[[]]],[11,"hash","smoldot::network::service","",538,[[]]],[11,"hash","","",539,[[]]],[11,"hash","smoldot::trie","",540,[[]]],[11,"hash","smoldot::trie::trie_structure","",542,[[]]],[11,"try_from","smoldot::executor::vm","",165,[[["signature",3]],["result",4]]],[11,"try_from","","",165,[[["functype",3]],["result",4]]],[11,"try_from","","",165,[[["signature",3]],["result",4]]],[11,"try_from","","",166,[[["runtimevalue",4]],["result",4]]],[11,"try_from","","",166,[[["val",4]],["result",4]]],[11,"try_from","","",167,[[["valuetype",4]],["result",4]]],[11,"try_from","","",167,[[["valtype",4]],["result",4]]],[11,"try_from","smoldot::libp2p::peer_id","",324,[[["vec",3]],["result",4]]],[11,"try_from","","",324,[[["multihash",6]],["result",4]]],[11,"try_from","smoldot::trie","",540,[[],["result",4]]],[11,"from_str","smoldot::libp2p::peer_id","",324,[[],["result",4]]],[11,"poll","smoldot::libp2p","",531,[[["context",3],["pin",3]],["poll",4]]],[11,"deserialize","smoldot::json_rpc::methods","",246,[[],[["hexstring",3],["result",4]]]],[11,"deserialize","","",247,[[],[["hashhexstring",3],["result",4]]]],[11,"serialize","","",248,[[],["result",4]]],[11,"serialize","","",249,[[],["result",4]]],[11,"serialize","","",250,[[],["result",4]]],[11,"serialize","","",253,[[],["result",4]]],[11,"serialize","","",255,[[],["result",4]]],[11,"serialize","","",247,[[],["result",4]]],[11,"serialize","","",246,[[],["result",4]]],[11,"serialize","","",251,[[],["result",4]]],[11,"serialize","","",252,[[],["result",4]]],[11,"serialize","","",254,[[],["result",4]]],[11,"encode_to","smoldot::header","",201,[[]]],[11,"encode_to","","",202,[[]]],[11,"encode_to","","",226,[[]]],[11,"encode_to","","",227,[[]]],[11,"decode","","",201,[[],[["result",4],["error",3]]]],[11,"decode","","",202,[[],[["result",4],["error",3]]]],[11,"decode","","",226,[[],[["result",4],["error",3]]]],[11,"decode","","",227,[[],[["result",4],["error",3]]]],[11,"verify_justification","smoldot::chain::blocks_tree","Verifies the given justification.",53,[[],[["justificationverifyerror",4],["result",4],["justificationapply",3]]]],[11,"set_finalized_block","","Sets the latest known finalized block. Trying to verify a …",53,[[],[["result",4],["setfinalizederror",4],["setfinalizedblockiter",3]]]],[11,"apply","","Applies the justification, finalizing the given block.",468,[[],["setfinalizedblockiter",3]]],[11,"block_user_data","","Returns the user data of the block about to be justified.",468,[[]]],[11,"is_current_best_block","","Returns true if the block to be finalized is the current …",468,[[]]],[11,"verify_header","","Verifies the given block.",53,[[["vec",3],["duration",3]],[["headerverifysuccess",4],["result",4],["headerverifyerror",4]]]],[11,"verify_body","","Verifies the given block.",53,[[["vec",3],["duration",3]],["bodyverifystep1",4]]],[11,"parent_block","","Access to the parent block\'s information and hierarchy. …",470,[[],[["option",4],["blockaccess",3]]]],[11,"nth_ancestor","","Access to the Nth ancestor\'s information and hierarchy. …",470,[[],[["option",4],["blockaccess",3]]]],[11,"num_non_finalized_ancestors","","Returns the number of non-finalized blocks in the tree …",470,[[]]],[11,"resume","","Resume the verification process by passing the requested …",470,[[["option",4],["hostvmprototype",3],["calculationcache",3]],["bodyverifystep2",4]]],[11,"abort","","Abort the verification and return the unmodified tree.",470,[[],["nonfinalizedtree",3]]],[11,"key","","Returns the key whose value must be passed to […",471,[[]]],[11,"key_as_vec","","Returns the key whose value must be passed to […",471,[[],["vec",3]]],[11,"nth_ancestor","","Access to the Nth ancestor\'s information and hierarchy. …",471,[[],[["option",4],["blockaccess",3]]]],[11,"num_non_finalized_ancestors","","Returns the number of non-finalized blocks in the tree …",471,[[]]],[11,"inject_value","","Injects the corresponding storage value.",471,[[["option",4]],["bodyverifystep2",4]]],[11,"prefix","","Returns the prefix whose keys to load.",472,[[]]],[11,"nth_ancestor","","Access to the Nth ancestor\'s information and hierarchy. …",472,[[],[["option",4],["blockaccess",3]]]],[11,"num_non_finalized_ancestors","","Returns the number of non-finalized blocks in the tree …",472,[[]]],[11,"inject_keys","","Injects the list of keys.",472,[[],["bodyverifystep2",4]]],[11,"key","","Returns the key whose next key must be passed back.",473,[[]]],[11,"nth_ancestor","","Access to the Nth ancestor\'s information and hierarchy. …",473,[[],[["option",4],["blockaccess",3]]]],[11,"num_non_finalized_ancestors","","Returns the number of non-finalized blocks in the tree …",473,[[]]],[11,"inject_key","","Injects the key.",473,[[["option",4]],["bodyverifystep2",4]]],[11,"build","","Performs the runtime compilation.",474,[[],["bodyverifystep2",4]]],[11,"insert","","Inserts the block with the given user data.",475,[[]]],[11,"header","","Returns the block header about to be inserted.",475,[[],["headerref",3]]],[11,"into_header","","Destroys the object without inserting the block in the …",475,[[],["header",3]]],[11,"header","","Returns the header of the block about to be inserted.",476,[[],["headerref",3]]],[11,"insert","","Inserts the block with the given user data.",476,[[],["nonfinalizedtree",3]]],[11,"abort","","Destroys the object without inserting the block in the …",476,[[],["nonfinalizedtree",3]]],[11,"initialize","smoldot::database::full_sled","Inserts the given [<code>chain_information::ChainInformationRef</code>]…",484,[[["option",4],["vec",3]],[["accesserror",4],["result",4],["sledfulldatabase",3]]]],[11,"from_slice","smoldot::header","Decodes a [<code>AuraConsensusLogRef</code>] from a slice of bytes.",190,[[],[["result",4],["error",4]]]],[11,"scale_encoding","","Returns an iterator to list of buffers which, when …",190,[[]]],[11,"decode","","Decodes a list of authorities from a SCALE-encoded blob …",494,[[],[["result",4],["error",4]]]],[11,"from_slice","","Builds an iterator corresponding to the given slice.",494,[[]]],[11,"scale_encoding","","Returns an iterator to list of buffers which, when …",192,[[]]],[11,"from_slice","","Decodes a [<code>AuraPreDigest</code>] from a slice of bytes.",194,[[],[["result",4],["error",4]]]],[11,"scale_encoding","","Returns an iterator to list of buffers which, when …",194,[[]]],[11,"from_slice","","Decodes a [<code>BabeConsensusLogRef</code>] from a slice of bytes.",195,[[],[["result",4],["error",4]]]],[11,"scale_encoding","","Returns an iterator to list of buffers which, when …",195,[[]]],[11,"from_slice","","Decodes a [<code>BabePreDigestRef</code>] from a slice of bytes.",197,[[],[["result",4],["error",4]]]],[11,"scale_encoding","","Returns an iterator to list of buffers which, when …",197,[[]]],[11,"from_slice","","Builds a new [<code>BabeAuthoritiesIter</code>] iterating over the …",495,[[]]],[11,"scale_encoding","","Returns an iterator to list of buffers which, when …",199,[[]]],[11,"from_slice","","Decodes a [<code>BabePreDigestRef</code>] from a slice of bytes.",203,[[],[["result",4],["error",4]]]],[11,"is_primary","","Returns <code>true</code> for [<code>BabePreDigestRef::Primary</code>].",203,[[]]],[11,"slot_number","","Returns the slot number stored in the header.",203,[[]]],[11,"scale_encoding","","Returns an iterator to list of buffers which, when …",203,[[]]],[11,"from_slice","","Decodes a [<code>BabePrimaryPreDigestRef</code>] from a slice of bytes.",205,[[],[["result",4],["error",4]]]],[11,"scale_encoding","","Returns an iterator to list of buffers which, when …",205,[[]]],[11,"from_slice","","Decodes a [<code>BabeSecondaryPlainPreDigest</code>] from a slice of …",207,[[],[["result",4],["error",4]]]],[11,"scale_encoding","","Returns an iterator to list of buffers which, when …",207,[[]]],[11,"from_slice","","Decodes a [<code>BabeSecondaryVRFPreDigestRef</code>] from a slice of …",208,[[],[["result",4],["error",4]]]],[11,"scale_encoding","","Returns an iterator to list of buffers which, when …",208,[[]]],[11,"from_slice","","Decodes a [<code>GrandpaConsensusLogRef</code>] from a slice of bytes.",210,[[],[["result",4],["error",4]]]],[11,"scale_encoding","","Returns an iterator to list of buffers which, when …",210,[[]]],[11,"scale_encoding","","Returns an iterator to list of buffers which, when …",214,[[]]],[11,"new","","Returns an iterator corresponding to the given slice.",496,[[]]],[11,"scale_encoding","","Returns an iterator to list of buffers which, when …",216,[[]]],[11,"scale_encoding","","Returns an iterator to list of buffers which, when …",217,[[]]],[11,"empty","smoldot::network","Create a new, empty multiaddress.",501,[[],["multiaddr",3]]],[11,"with_capacity","","Create a new, empty multiaddress with the given capacity.",501,[[],["multiaddr",3]]],[11,"len","","Return the length in bytes of this multiaddress.",501,[[]]],[11,"to_vec","","Return a copy of this [<code>Multiaddr</code>]\'s byte representation.",501,[[],[["vec",3],["global",3]]]],[11,"push","","Adds an already-parsed address component to the end of …",501,[[["protocol",4]]]],[11,"pop","","Pops the last <code>Protocol</code> of this multiaddr, or <code>None</code> if the …",501,[[],[["option",4],["protocol",4]]]],[11,"with","","Like [<code>Multiaddr::push</code>] but consumes <code>self</code>.",501,[[["protocol",4]],["multiaddr",3]]],[11,"iter","","Returns the components of this multiaddress.",501,[[],["iter",3]]],[11,"replace","","Replace a [<code>Protocol</code>] at some position in this <code>Multiaddr</code>.",501,[[],[["multiaddr",3],["option",4]]]],[11,"from_bytes","smoldot::libp2p::multiaddr::multihash","Creates a new <code>Multihash</code> from a <code>Vec<u8></code>, consuming it. If …",503,[[["vec",3],["global",3]],[["multihashgeneric",3],["decodeownederror",3],["result",4]]]],[11,"into_bytes","","Returns the bytes representation of the multihash.",503,[[],[["vec",3],["global",3]]]],[11,"to_vec","","Returns the bytes representation of the multihash.",503,[[],[["vec",3],["global",3]]]],[11,"as_bytes","","Returns the bytes representation of this multihash.",503,[[]]],[11,"as_ref","","Builds a <code>MultihashRef</code> corresponding to this <code>Multihash</code>.",503,[[],["multihashrefgeneric",3]]],[11,"algorithm","","Returns the algorithm used in this multihash.",503,[[]]],[11,"digest","","Returns the hashed data.",503,[[]]],[11,"from_slice","","Creates a new <code>MultihashRef</code> from a <code>&[u8]</code>. If the input …",504,[[],[["result",4],["multihashrefgeneric",3],["decodeerror",4]]]],[11,"algorithm","","Returns the algorithm used in this multihash.",504,[[]]],[11,"digest","","Returns the hash digest.",504,[[]]],[11,"to_owned","","Builds a <code>Multihash</code> that owns the data.",504,[[],["multihashgeneric",3]]],[11,"as_bytes","","Returns the bytes representation of this multihash.",504,[[]]],[11,"digest","","Hash some input and return the raw binary digest.",269,[[],[["code",4],["multihashgeneric",3]]]],[18,"CODE","","The code of the Identity hasher, 0x00.",505,null],[11,"digest","","Hash some input and return the raw binary digest.",505,[[],[["code",4],["multihashgeneric",3]]]],[18,"CODE","","The code of the SHA-1 hasher, 0x11.",506,null],[11,"digest","","Hash some input and return the Multihash digest.",506,[[],[["code",4],["multihashgeneric",3]]]],[18,"CODE","","The code of the SHA2-256 hasher, 0x12.",507,null],[11,"digest","","Hash some input and return the Multihash digest.",507,[[],[["code",4],["multihashgeneric",3]]]],[18,"CODE","","The code of the SHA2-512 hasher, 0x13.",508,null],[11,"digest","","Hash some input and return the Multihash digest.",508,[[],[["code",4],["multihashgeneric",3]]]],[18,"CODE","","The code of the SHA3-224 hasher, 0x17.",509,null],[11,"digest","","Hash some input and return the Multihash digest.",509,[[],[["code",4],["multihashgeneric",3]]]],[18,"CODE","","The code of the SHA3-256 hasher, 0x16.",510,null],[11,"digest","","Hash some input and return the Multihash digest.",510,[[],[["code",4],["multihashgeneric",3]]]],[18,"CODE","","The code of the SHA3-384 hasher, 0x15.",511,null],[11,"digest","","Hash some input and return the Multihash digest.",511,[[],[["code",4],["multihashgeneric",3]]]],[18,"CODE","","The code of the SHA3-512 hasher, 0x14.",512,null],[11,"digest","","Hash some input and return the Multihash digest.",512,[[],[["code",4],["multihashgeneric",3]]]],[18,"CODE","","The code of the Keccak-224 hasher, 0x1a.",513,null],[11,"digest","","Hash some input and return the Multihash digest.",513,[[],[["code",4],["multihashgeneric",3]]]],[18,"CODE","","The code of the Keccak-256 hasher, 0x1b.",514,null],[11,"digest","","Hash some input and return the Multihash digest.",514,[[],[["code",4],["multihashgeneric",3]]]],[18,"CODE","","The code of the Keccak-384 hasher, 0x1c.",515,null],[11,"digest","","Hash some input and return the Multihash digest.",515,[[],[["code",4],["multihashgeneric",3]]]],[18,"CODE","","The code of the Keccak-512 hasher, 0x1d.",516,null],[11,"digest","","Hash some input and return the Multihash digest.",516,[[],[["code",4],["multihashgeneric",3]]]],[18,"CODE","","The code of the Blake2-256 hasher, 0xb220.",517,null],[11,"digest","","Hash some input and return the Multihash digest.",517,[[],[["code",4],["multihashgeneric",3]]]],[18,"CODE","","The code of the Blake2-512 hasher, 0xb240.",518,null],[11,"digest","","Hash some input and return the Multihash digest.",518,[[],[["code",4],["multihashgeneric",3]]]],[18,"CODE","","The code of the Blake2-128 hasher, 0xb250.",519,null],[11,"digest","","Hash some input and return the Multihash digest.",519,[[],[["code",4],["multihashgeneric",3]]]],[18,"CODE","","The code of the Blake2-256 hasher, 0xb260.",520,null],[11,"digest","","Hash some input and return the Multihash digest.",520,[[],[["code",4],["multihashgeneric",3]]]],[11,"from_str_parts","smoldot::libp2p::multiaddr","Parse a protocol value from the given iterator of string …",271,[[],[["protocol",4],["error",4],["result",4]]]],[11,"from_bytes","","Parse a single <code>Protocol</code> value from its byte slice …",271,[[],[["result",4],["error",4]]]],[11,"write_bytes","","Encode this protocol by writing its binary representation …",271,[[],[["error",4],["result",4]]]],[11,"acquire","","Turn this <code>Protocol</code> into one that owns its data, thus …",271,[[],["protocol",4]]],[11,"hash","","Return the hash of the public key as bytes",521,[[]]],[11,"port","","Return the port",521,[[]]],[11,"acquire","","Consume this instance and create an owned version …",521,[[],["onion3addr",3]]],[11,"scale_encoding","smoldot::network::protocol","Returns the SCALE encoding of this enum. Always …",370,[[]]],[11,"scale_encoding","","Returns an iterator to list of buffers which, when …",378,[[]]],[11,"scale_encoding","","Returns an iterator to list of buffers which, when …",386,[[]]]],"p":[[3,"Config"],[3,"SlotClaim"],[3,"Config"],[4,"ConfigConsensus"],[13,"Aura"],[4,"Builder"],[4,"BuilderAuthoring"],[13,"ApplyExtrinsicResult"],[3,"WaitSlot"],[3,"AuthoringStart"],[3,"AuthoringStartConfig"],[3,"ApplyExtrinsic"],[3,"StorageGet"],[3,"PrefixKeys"],[3,"NextKey"],[3,"Seal"],[4,"Error"],[3,"Config"],[4,"ConfigPreRuntime"],[3,"Success"],[4,"Error"],[13,"InherentExtrinsicDispatchError"],[13,"InherentExtrinsicTransactionValidityError"],[4,"BlockBuild"],[13,"ApplyExtrinsicResult"],[3,"InherentExtrinsics"],[3,"InherentData"],[4,"InherentDataConsensus"],[13,"Aura"],[13,"Babe"],[3,"ApplyExtrinsic"],[3,"StorageGet"],[3,"PrefixKeys"],[3,"NextKey"],[4,"TransactionValidityError"],[4,"InvalidTransaction"],[4,"UnknownTransaction"],[4,"DispatchError"],[13,"Module"],[4,"JustificationVerifyError"],[13,"UnknownTargetBlock"],[13,"TooFarAhead"],[4,"SetFinalizedError"],[4,"BodyVerifyStep1"],[13,"BadParent"],[4,"BodyVerifyStep2"],[13,"Finished"],[13,"Error"],[4,"HeaderVerifySuccess"],[13,"Insert"],[4,"HeaderVerifyError"],[13,"BadParent"],[3,"Config"],[3,"NonFinalizedTree"],[3,"BlockAccess"],[3,"AuraGenesisConfiguration"],[4,"FromGenesisStorageError"],[4,"FromVmPrototypeError"],[3,"BabeGenesisConfiguration"],[4,"FromGenesisStorageError"],[4,"FromVmPrototypeError"],[4,"BabeEpochToFetch"],[3,"Config"],[4,"Error"],[4,"Query"],[3,"StorageGet"],[3,"NextKey"],[3,"ChainInformation"],[4,"ChainInformationConsensus"],[13,"Aura"],[13,"Babe"],[3,"BabeEpochInformation"],[4,"ChainInformationFinality"],[13,"Grandpa"],[4,"FromGenesisStorageError"],[3,"FinalizedScheduledChange"],[3,"ChainInformationRef"],[4,"ChainInformationConsensusRef"],[13,"Aura"],[13,"Babe"],[3,"BabeEpochInformationRef"],[4,"ChainInformationFinalityRef"],[13,"Grandpa"],[3,"ForkTree"],[3,"PrunedNode"],[3,"Config"],[3,"Block"],[3,"OptimisticSync"],[3,"RequestSuccessBlock"],[4,"ProcessOne"],[13,"Idle"],[13,"Reset"],[13,"NewBest"],[13,"Finalized"],[3,"StorageGet"],[3,"StoragePrefixKeys"],[3,"StorageNextKey"],[4,"RequestAction"],[13,"Start"],[13,"Cancel"],[3,"Start"],[4,"FinishRequestOutcome"],[4,"RequestFail"],[4,"ResetCause"],[13,"UnexpectedBlockNumber"],[3,"LightSyncState"],[3,"ChainSpec"],[3,"Config"],[4,"ConfigTy"],[4,"DatabaseOpen"],[3,"SledFullDatabase"],[4,"AccessError"],[4,"InsertError"],[4,"SetFinalizedError"],[4,"FinalizedAccessError"],[4,"CorruptedError"],[3,"HostVmPrototype"],[4,"HostVm"],[13,"Error"],[13,"EndStorageTransaction"],[3,"ReadyToRun"],[3,"Finished"],[3,"ExternalStorageGet"],[3,"ExternalStorageSet"],[3,"ExternalStorageAppend"],[3,"ExternalStorageClearPrefix"],[3,"ExternalStorageRoot"],[3,"ExternalStorageChangesRoot"],[3,"ExternalStorageNextKey"],[3,"CallRuntimeVersion"],[3,"ExternalOffchainStorageSet"],[3,"LogEmit"],[3,"StartStorageTransaction"],[3,"EndStorageTransaction"],[4,"NewErr"],[4,"StartErr"],[4,"Error"],[13,"BadReturnValue"],[13,"ReturnedPtrOutOfRange"],[13,"ParamsCountMismatch"],[13,"WrongParamTy"],[13,"ParamOutOfRange"],[13,"Utf8Error"],[13,"OutOfMemory"],[13,"FreeError"],[3,"Config"],[3,"Success"],[3,"SuccessVirtualMachine"],[4,"Error"],[13,"WasmVm"],[4,"RuntimeHostVm"],[3,"StorageGet"],[3,"NextKey"],[3,"Config"],[3,"Success"],[3,"SuccessVirtualMachine"],[4,"Error"],[13,"WasmVm"],[4,"RuntimeHostVm"],[3,"StorageGet"],[3,"PrefixKeys"],[3,"NextKey"],[3,"VirtualMachinePrototype"],[3,"VirtualMachine"],[4,"ExecHint"],[3,"Signature"],[4,"WasmValue"],[4,"ValueType"],[4,"ExecOutcome"],[13,"Finished"],[13,"Interrupted"],[4,"NewErr"],[4,"StartErr"],[4,"RunErr"],[13,"BadValueTy"],[4,"GlobalValueErr"],[3,"CoreVersion"],[3,"CoreVersionRef"],[3,"GrandpaGenesisConfiguration"],[4,"FromGenesisStorageError"],[4,"FromVmPrototypeError"],[3,"Verifier"],[4,"Next"],[3,"JustificationRef"],[3,"Justification"],[3,"PrecommitsRef"],[3,"PrecommitRef"],[3,"Precommit"],[3,"Config"],[4,"Error"],[4,"AuraConsensusLogRef"],[4,"AuraConsensusLog"],[3,"AuraAuthorityRef"],[3,"AuraAuthority"],[3,"AuraPreDigest"],[4,"BabeConsensusLogRef"],[4,"BabeConsensusLog"],[3,"BabeNextEpochRef"],[3,"BabeNextEpoch"],[3,"BabeAuthorityRef"],[3,"BabeAuthority"],[3,"BabeNextConfig"],[4,"BabeAllowedSlots"],[4,"BabePreDigestRef"],[4,"BabePreDigest"],[3,"BabePrimaryPreDigestRef"],[3,"BabePrimaryPreDigest"],[3,"BabeSecondaryPlainPreDigest"],[3,"BabeSecondaryVRFPreDigestRef"],[3,"BabeSecondaryVRFPreDigest"],[4,"GrandpaConsensusLogRef"],[13,"ForcedChange"],[4,"GrandpaConsensusLog"],[13,"ForcedChange"],[3,"GrandpaScheduledChangeRef"],[3,"GrandpaScheduledChange"],[3,"GrandpaAuthorityRef"],[3,"GrandpaAuthority"],[4,"Error"],[3,"HeaderRef"],[3,"Header"],[3,"DigestRef"],[4,"Seal"],[3,"Digest"],[4,"DigestItemRef"],[4,"DigestItem"],[4,"ChangesTrieSignal"],[3,"ChangesTrieConfiguration"],[3,"InformantLine"],[3,"RelayChain"],[3,"HashDisplay"],[4,"ParseError"],[4,"MethodCall"],[13,"author_submitExtrinsic"],[13,"chain_getBlock"],[13,"chain_getBlockHash"],[13,"chain_getHeader"],[13,"chain_unsubscribeAllHeads"],[13,"chain_unsubscribeFinalizedHeads"],[13,"chain_unsubscribeNewHeads"],[13,"state_getKeysPaged"],[13,"state_getStorage"],[13,"state_queryStorageAt"],[13,"state_subscribeStorage"],[13,"state_unsubscribeStorage"],[4,"Response"],[3,"HexString"],[3,"HashHexString"],[3,"Block"],[3,"Header"],[3,"HeaderDigest"],[3,"RpcMethods"],[3,"RuntimeVersion"],[3,"StorageChangeSet"],[3,"SystemHealth"],[3,"SystemPeer"],[3,"Call"],[4,"ErrorResponse"],[3,"Config"],[3,"WsServer"],[4,"Event"],[13,"ConnectionOpen"],[13,"ConnectionError"],[13,"TextFrame"],[8,"MultihashDigest"],[8,"Multihasher"],[4,"DecodeError"],[3,"DecodeOwnedError"],[4,"EncodeError"],[4,"Code"],[4,"Error"],[4,"Protocol"],[4,"FromUrlErr"],[3,"Established"],[3,"ReadWrite"],[4,"Event"],[13,"RequestIn"],[13,"Response"],[13,"NotificationsInOpen"],[13,"NotificationsInOpenCancel"],[13,"NotificationIn"],[13,"NotificationsOutAccept"],[13,"NotificationsOutReject"],[13,"NotificationsOutCloseDemanded"],[13,"NotificationsOutReset"],[4,"Error"],[4,"RequestError"],[3,"ConnectionPrototype"],[3,"Config"],[3,"ConfigRequestResponse"],[3,"ConfigNotifications"],[4,"Handshake"],[13,"Success"],[3,"HealthyHandshake"],[3,"NoiseKeyRequired"],[4,"HandshakeError"],[4,"Config"],[13,"Dialer"],[13,"Listener"],[4,"Negotiation"],[3,"InProgress"],[4,"Error"],[4,"MessageOut"],[3,"NoiseKey"],[3,"UnsignedNoiseKey"],[3,"Noise"],[4,"NoiseHandshake"],[13,"Success"],[3,"HandshakeInProgress"],[4,"HandshakeError"],[3,"Yamux"],[3,"Config"],[3,"SubstreamMut"],[3,"ExtractOut"],[3,"IncomingDataOutcome"],[4,"IncomingDataDetail"],[13,"DataFrame"],[13,"StreamClosed"],[13,"StreamReset"],[4,"Error"],[3,"Kademlia"],[4,"DecodeFindNodeResponseError"],[4,"PublicKey"],[4,"FromProtobufEncodingError"],[3,"PeerId"],[4,"FromBytesError"],[4,"FromMultihashError"],[4,"ParseError"],[3,"Config"],[4,"SubstreamDirection"],[3,"Peerset"],[4,"PendingOrConnectionMut"],[3,"ConnectionMut"],[3,"PendingMut"],[4,"NodeMut"],[3,"NodeMutKnown"],[3,"NodeMutUnknown"],[3,"Config"],[3,"OverlayNetwork"],[3,"Network"],[3,"StartConnect"],[4,"Event"],[13,"Disconnected"],[13,"NotificationsOutAccept"],[13,"NotificationsOutReject"],[13,"NotificationsOutClose"],[13,"NotificationsInOpen"],[13,"NotificationsIn"],[3,"ReadWrite"],[4,"ConnectionError"],[3,"SubstreamOpen"],[4,"RequestError"],[4,"QueueNotificationError"],[3,"MetadataRef"],[3,"ModuleMetadataRef"],[3,"StorageMetadataRef"],[3,"StorageEntryMetadataRef"],[4,"StorageEntryModifier"],[4,"StorageEntryTypeRef"],[13,"Map"],[13,"DoubleMap"],[4,"StorageHasher"],[3,"FunctionMetadataRef"],[3,"FunctionArgumentMetadataRef"],[3,"EventMetadataRef"],[3,"ModuleConstantMetadataRef"],[3,"ErrorMetadataRef"],[3,"ExtrinsicMetadataRef"],[4,"Error"],[3,"BlockAnnouncesHandshakeRef"],[4,"Role"],[3,"BlockAnnounceRef"],[3,"BlocksRequestConfig"],[4,"BlocksRequestDirection"],[3,"BlocksRequestFields"],[4,"BlocksRequestConfigStart"],[3,"BlockData"],[4,"DecodeBlockResponseError"],[4,"GrandpaNotificationRef"],[3,"VoteMessageRef"],[4,"MessageRef"],[3,"UnsignedPrevoteRef"],[3,"UnsignedPrecommitRef"],[3,"PrimaryProposeRef"],[3,"CommitMessageRef"],[3,"CompactCommitRef"],[3,"NeighborPacket"],[3,"CatchUpRequest"],[3,"CatchUpRef"],[3,"PrevoteRef"],[3,"GrandpaWarpSyncResponseFragment"],[4,"DecodeGrandpaWarpSyncResponseError"],[3,"StorageProofRequestConfig"],[4,"DecodeStorageProofResponseError"],[3,"Config"],[3,"ChainConfig"],[3,"ChainNetwork"],[3,"StartConnect"],[4,"Event"],[13,"Disconnected"],[13,"ChainConnected"],[13,"ChainDisconnected"],[13,"BlockAnnounce"],[3,"EncodedBlockAnnounceHandshake"],[3,"EncodedBlockAnnounce"],[3,"DiscoveryInsert"],[3,"ReadWrite"],[3,"SubstreamOpen"],[4,"DiscoveryError"],[4,"BlocksRequestError"],[4,"StorageProofRequestError"],[4,"GrandpaWarpSyncRequestError"],[3,"CalculationCache"],[4,"RootMerkleValueCalculation"],[13,"Finished"],[3,"AllKeys"],[3,"StorageValue"],[3,"Config"],[4,"NodeTy"],[13,"Root"],[13,"NonRoot"],[3,"Output"],[3,"Config"],[4,"Error"],[3,"TrieStructure"],[4,"Entry"],[4,"NodeAccess"],[3,"StorageNodeAccess"],[4,"Remove"],[13,"SingleRemoveChild"],[13,"SingleRemoveNoChild"],[13,"TrieNowEmpty"],[13,"BranchAlsoRemoved"],[3,"BranchNodeAccess"],[3,"Vacant"],[4,"PrepareInsert"],[3,"PrepareInsertOne"],[3,"PrepareInsertTwo"],[4,"NibbleFromU8Error"],[3,"Trie"],[3,"VerifyConfig"],[3,"VerifySuccess"],[4,"VerifyError"],[3,"VerifyConfig"],[3,"VerifySuccess"],[4,"VerifyError"],[3,"Config"],[4,"ConfigConsensus"],[13,"Aura"],[13,"Babe"],[3,"Success"],[4,"SuccessConsensus"],[13,"Aura"],[13,"Babe"],[4,"Error"],[4,"Verify"],[3,"StorageGet"],[3,"StoragePrefixKeys"],[3,"StorageNextKey"],[3,"RuntimeCompilation"],[3,"Config"],[4,"ConfigConsensus"],[13,"Aura"],[13,"Babe"],[4,"Success"],[13,"Aura"],[13,"Babe"],[4,"Error"],[3,"JustificationApply"],[3,"SetFinalizedBlockIter"],[3,"BodyVerifyRuntimeRequired"],[3,"StorageGet"],[3,"StoragePrefixKeys"],[3,"StorageNextKey"],[3,"RuntimeCompilation"],[3,"HeaderInsert"],[3,"BodyInsert"],[3,"PruneAncestorsIter"],[3,"NodeIndex"],[3,"RequestId"],[3,"SourceId"],[3,"RequestsDrain"],[3,"ParseError"],[3,"CorruptedError"],[3,"DatabaseEmpty"],[3,"VarLenBytes"],[3,"SledError"],[3,"UnsupportedTypeError"],[3,"Trap"],[3,"ModuleError"],[3,"OutOfBoundsError"],[3,"PrecommitsRefIter"],[3,"VotesAncestriesIter"],[3,"Error"],[3,"AuraAuthoritiesIter"],[3,"BabeAuthoritiesIter"],[3,"GrandpaAuthoritiesIter"],[3,"LogsIter"],[3,"JsonRpcParseError"],[3,"ParseError"],[3,"ConnectionId"],[3,"Multiaddr"],[3,"Iter"],[3,"MultihashGeneric"],[3,"MultihashRefGeneric"],[3,"Identity"],[3,"Sha1"],[3,"Sha2_256"],[3,"Sha2_512"],[3,"Sha3_224"],[3,"Sha3_256"],[3,"Sha3_384"],[3,"Sha3_512"],[3,"Keccak224"],[3,"Keccak256"],[3,"Keccak384"],[3,"Keccak512"],[3,"Blake2b256"],[3,"Blake2b512"],[3,"Blake2s128"],[3,"Blake2s256"],[3,"Onion3Addr"],[3,"SubstreamId"],[3,"CipherError"],[3,"PayloadDecodeError"],[3,"SubstreamId"],[3,"ProtobufDecodeError"],[3,"Bs58DecodeError"],[3,"ConnectionId"],[3,"PendingId"],[3,"ConnectionId"],[3,"ConnectionReadyFuture"],[3,"DecodeError"],[3,"UndecodedIter"],[3,"DecodeBlockAnnounceError"],[3,"BlockAnnouncesHandshakeDecodeError"],[3,"DecodeGrandpaNotificationError"],[3,"ProtobufDecodeError"],[3,"PendingId"],[3,"ConnectionId"],[3,"Nibble"],[3,"BytesToNibbles"],[3,"NodeIndex"],[6,"Multihash"]]},\
"smoldot_js":{"doc":"Contains a light client implementation usable from a …","i":[[0,"ffi","smoldot_js","",null,null],[0,"bindings","smoldot_js::ffi","Imports and exports of the WebAssembly module.",null,null],[5,"throw","smoldot_js::ffi::bindings","Must throw an exception. The message is a UTF-8 string …",null,null],[5,"json_rpc_respond","","Client is emitting a response to a previous JSON-RPC …",null,null],[5,"log","","Client is emitting a log entry.",null,null],[5,"unix_time_ms","","Must return the number of milliseconds that have passed …",null,null],[5,"monotonic_clock_ms","","Must return the number of milliseconds that have passed …",null,null],[5,"start_timer","","After at least <code>milliseconds</code> milliseconds have passed, …",null,null],[5,"database_save","","Client wants to set the content of the database to a …",null,null],[5,"websocket_new","","Must initialize a new WebSocket connection that tries to …",null,null],[5,"websocket_close","","Close a WebSocket previously initialized with […",null,null],[5,"websocket_send","","Queues data on the given WebSocket. The data is found in …",null,null],[5,"alloc","","Allocates a buffer of the given length, with an alignment …",null,[[]]],[5,"init","","Initializes the client.",null,[[]]],[5,"json_rpc_send","","Emit a JSON-RPC request. If the initialization (see [<code>init</code>]…",null,[[]]],[5,"timer_finished","","Must be called in response to [<code>start_timer</code>] after the …",null,[[]]],[5,"websocket_open","","Called by the JavaScript code if the WebSocket switches …",null,[[]]],[5,"websocket_message","","Notify of a message being received on the WebSocket. The …",null,[[]]],[5,"websocket_closed","","Can be called at any point by the JavaScript code if the …",null,[[]]],[3,"Delay","smoldot_js::ffi","",null,null],[11,"new","","",0,[[["duration",3]]]],[3,"Instant","","",null,null],[11,"now","","",1,[[],["instant",3]]],[11,"duration_since","","",1,[[["instant",3]],["duration",3]]],[11,"elapsed","","",1,[[],["duration",3]]],[3,"WebSocket","","WebSocket connected to a target.",null,null],[11,"connect","","Connects to the given URL. Returns a [<code>WebSocket</code>] on …",2,[[]]],[11,"read_buffer","","Returns a buffer containing data received on the …",2,[[["pin",3]]]],[11,"advance_read_cursor","","Advances the read cursor by the given amount of bytes. …",2,[[["pin",3]]]],[11,"send","","Queue of the given buffer as a WebSocket binary frame.",2,[[["pin",3]]]],[5,"start_client","smoldot_js","Starts a client running the given chain specifications.",null,[[["string",3],["option",4],["levelfilter",4]]]],[11,"from","smoldot_js::ffi","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"into_future","","",0,[[]]],[11,"vzip","","",0,[[]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"into_any_arc","","",0,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",0,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",0,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",0,[[],["any",8]]],[11,"as_any_mut","","",0,[[],["any",8]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"into_any_arc","","",1,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",1,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",1,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",1,[[],["any",8]]],[11,"as_any_mut","","",1,[[],["any",8]]],[11,"equivalent","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"init","","",2,[[]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",2,[[]]],[11,"drop","","",2,[[]]],[11,"into_any_arc","","",2,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",2,[[["global",3],["box",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",2,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",2,[[],["any",8]]],[11,"as_any_mut","","",2,[[],["any",8]]],[11,"drop","","",2,[[]]],[11,"clone","","",1,[[],["instant",3]]],[11,"cmp","","",1,[[],["ordering",4]]],[11,"eq","","",1,[[["instant",3]]]],[11,"partial_cmp","","",1,[[["instant",3]],[["option",4],["ordering",4]]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"sub","","",1,[[["duration",3]],["instant",3]]],[11,"sub","","",1,[[["instant",3]],["duration",3]]],[11,"add","","",1,[[["duration",3]],["instant",3]]],[11,"poll","","",0,[[["context",3],["pin",3]],["poll",4]]]],"p":[[3,"Delay"],[3,"Instant"],[3,"WebSocket"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);